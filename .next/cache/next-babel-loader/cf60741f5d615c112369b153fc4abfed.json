{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this6 = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState } from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineClose, AiOutlineRight } from 'react-icons/ai';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, storeCard, deleteCard, buyKilometers } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport { loadStripe } from '@stripe/stripe-js';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar stripePromise = loadStripe('pk_test_RjADdW2vGwFAgOOk7ws1juNB002JV727O8');\n\nvar PerchWallet = /*#__PURE__*/function (_React$Component) {\n  _inherits(PerchWallet, _React$Component);\n\n  var _super = _createSuper(PerchWallet);\n\n  function PerchWallet(props) {\n    var _this;\n\n    _classCallCheck(this, PerchWallet);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"loadCards\", function () {\n      var userID = _this.state.userDetails.userID;\n      firebase.database().ref(\"cards/\".concat(userID)).once('value', function (snapshot) {\n        if (!!snapshot) {\n          var arrayOfLast4 = [],\n              i = 0;\n\n          for (var key in snapshot.val()) {\n            if (key != 'selected') arrayOfLast4[i] = {\n              last4: snapshot.val()[key].card.last4,\n              brand: snapshot.val()[key].card.brand,\n              cardId: snapshot.val()[key].card.cardId\n            };else if (key == 'selected') _this.setState({\n              selected: snapshot.val()[key]\n            });\n            i++;\n          }\n\n          _this.setState({\n            cards: arrayOfLast4\n          });\n        }\n\n        ;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSelected\", function (value) {\n      var userID = _this.state.userDetails.userID;\n      firebase.database().ref(\"cards/\".concat(userID)).update({\n        selected: value\n      }).then(function () {\n        _this.setState({\n          selected: value\n        });\n      })[\"catch\"](function (error) {\n        _this.setState({\n          errorMessage: error.message\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeCard\", function (index) {\n      var cards = _this.state.cards;\n      cards.splice(index, 1);\n\n      _this.setState({\n        cards: cards\n      });\n    });\n\n    _this.state = {\n      buyKilometers: false,\n      addCard: false,\n      userDetails: _this.props.userDetails,\n      quantity: 0,\n      cards: [],\n      selected: null,\n      index: 0,\n      name: '',\n      cardNumber: '',\n      expiryDate: '',\n      ccv: '',\n      errorMessage: '',\n      loading: false,\n      rate: 0,\n      kms: '',\n      cost: 0,\n      paymentLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(PerchWallet, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var userID = this.state.userDetails.userID;\n      firebase.database().ref(\"perchKilometers/\".concat(userID, \"/quantity\")).on('value', function (snapshot) {\n        if (!!snapshot) _this2.setState({\n          quantity: snapshot.val()\n        });\n      });\n      firebase.database().ref(\"costPerPerchKM\").on('value', function (snapshot) {\n        _this2.setState({\n          rate: snapshot.val()\n        });\n      });\n      this.loadCards();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _this$state$rate,\n          _this$state$cost;\n\n      var cards = [];\n\n      for (var i = 0; i < this.state.cards.length; i++) {\n        cards.push( /*#__PURE__*/_jsx(PaymentCard, {\n          userID: this.state.userDetails.userID,\n          card: this.state.cards[i],\n          index: i,\n          removeCard: this.removeCard,\n          setSelected: this.setSelected,\n          selectedCard: this.state.selected,\n          selected: this.state.selected === this.state.cards[i].last4,\n          type: this.state.buyKilometers ? 'pickPayment' : 'listOfCards'\n        }, this.state.cards[i].last4));\n      }\n\n      return /*#__PURE__*/_jsx(Elements, {\n        stripe: stripePromise,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: styles.cont,\n          children: this.state.buyKilometers ? //buy kilometers\n          this.state.paymentLoading ? /*#__PURE__*/_jsx(_Fragment, {\n            children: /*#__PURE__*/_jsx(ProcessPayment, {\n              goBack: function goBack() {\n                _this3.setState({\n                  buyKilometers: false,\n                  addCard: false,\n                  kms: '',\n                  errorMessage: '',\n                  paymentLoading: false\n                });\n              },\n              toSend: {\n                cardId: this.state.cards[this.state.index].cardId,\n                customerID: this.state.userDetails.stripeCustomerID,\n                quantity: Number(this.state.kms),\n                userID: this.state.userDetails.userID,\n                timestamp: new Date().getTime(),\n                isAutomatic: true\n              }\n            })\n          }) : /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: styles.container,\n              style: {\n                backgroundColor: colors.WHITE,\n                marginTop: '20px'\n              },\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  color: colors.BLACK\n                },\n                children: \"Enter the amount of kilometers you would like to purchase\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter amount of kilometers\",\n                value: this.state.kms,\n                onChange: function onChange(e) {\n                  var value = e.target.value;\n\n                  if (value.length <= 3) {\n                    var cost = Number(value) * _this3.state.rate;\n\n                    _this3.setState({\n                      kms: value,\n                      cost: cost\n                    });\n                  }\n                },\n                className: styles.inputPaymentPanel\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.enterKilometerDiv,\n                style: {\n                  marginTop: '20px'\n                },\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    width: 'initial',\n                    margin: '0px',\n                    fontFamily: 'Gilroy-Medium',\n                    color: colors.GREY\n                  },\n                  className: styles.text,\n                  children: \"Cost per kilometer\"\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    width: 'initial',\n                    margin: '0px',\n                    fontFamily: 'Gilroy-Medium'\n                  },\n                  className: styles.text,\n                  children: \"$ \".concat((_this$state$rate = this.state.rate) === null || _this$state$rate === void 0 ? void 0 : _this$state$rate.toFixed(2))\n                })]\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.sharedLine,\n                style: {\n                  marginTop: '20px',\n                  width: '90%'\n                }\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.enterKilometerDiv,\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    width: 'initial',\n                    margin: '0px',\n                    fontFamily: 'Gilroy-Bold',\n                    fontSize: '120%'\n                  },\n                  className: styles.text,\n                  children: \"Total\"\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    width: 'initial',\n                    margin: '0px',\n                    fontFamily: 'Gilroy-Bold',\n                    color: colors.GREEN,\n                    fontSize: '120%'\n                  },\n                  className: styles.text,\n                  children: \"$ \".concat((_this$state$cost = this.state.cost) === null || _this$state$cost === void 0 ? void 0 : _this$state$cost.toFixed(2))\n                })]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.container,\n              style: {\n                backgroundColor: colors.WHITE,\n                marginTop: '20px'\n              },\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  color: colors.BLACK\n                },\n                children: \"Payment Methods\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.text,\n                style: {\n                  color: colors.GREY,\n                  marginBottom: '20px'\n                },\n                children: \"List of available payment methods. New payment methods can also be added.\"\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.paymentCont,\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.paymentItem,\n                  children: [cards, /*#__PURE__*/_jsxs(\"div\", {\n                    className: styles.paymentRow,\n                    id: styles.addCardPayment,\n                    children: [/*#__PURE__*/_jsxs(\"div\", {\n                      style: {\n                        flexDirection: 'row',\n                        display: 'flex',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsx(\"img\", {\n                        src: \"/PayPalLogo.svg\",\n                        alt: \"Perch Payment\",\n                        className: styles.visaIcon,\n                        style: {\n                          marginRight: '15px',\n                          marginLeft: '0px'\n                        }\n                      }), /*#__PURE__*/_jsx(\"p\", {\n                        className: styles.paymentCardNumber,\n                        id: styles.paymentCardNumber_,\n                        children: \"PayPal\"\n                      })]\n                    }), /*#__PURE__*/_jsx(AiOutlineRight, {\n                      color: colors.BLACK\n                    })]\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: styles.sharedLine,\n                    style: {\n                      marginTop: '0px',\n                      width: '100%'\n                    }\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: styles.paymentRow,\n                    id: styles.addCardPayment,\n                    onClick: function onClick() {\n                      _this3.setState({\n                        addCard: true,\n                        buyKilometers: false,\n                        errorMessage: ''\n                      });\n                    },\n                    children: [/*#__PURE__*/_jsxs(\"div\", {\n                      style: {\n                        flexDirection: 'row',\n                        display: 'flex',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsx(\"img\", {\n                        src: \"/addPaymentCardIcon.svg\",\n                        alt: \"Perch Payment\",\n                        className: styles.visaIcon,\n                        style: {\n                          marginRight: '15px'\n                        }\n                      }), /*#__PURE__*/_jsx(\"p\", {\n                        className: styles.paymentCardNumber,\n                        id: styles.paymentCardNumber_,\n                        children: \"Add Debit / Credit Card\"\n                      })]\n                    }), /*#__PURE__*/_jsx(AiOutlineRight, {\n                      color: colors.BLACK\n                    })]\n                  })]\n                })\n              }), this.state.errorMessage && /*#__PURE__*/_jsx(\"p\", {\n                className: styles.em,\n                style: {\n                  textAlign: 'initial'\n                },\n                children: this.state.errorMessage\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.enterKilometerDiv,\n              style: {\n                marginTop: '20px',\n                marginBottom: '150px',\n                marginLeft: '2.5%',\n                width: '95%'\n              },\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.button2,\n                style: {\n                  backgroundColor: colors.RED\n                },\n                id: styles.buttonBottom,\n                onClick: function onClick() {\n                  _this3.setState({\n                    buyKilometers: false,\n                    addCard: false,\n                    errorMessage: ''\n                  });\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  children: \"Cancel\"\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                onClick: function onClick() {\n                  if (_this3.state.kms < 20) _this3.setState({\n                    errorMessage: 'You can get a minimum of 20 kilometers'\n                  });else if (_this3.state.kms > 100) _this3.setState({\n                    errorMessage: 'You can get a maximum of 100 kilometers'\n                  });else if (_this3.state.selected) {\n                    for (var _i = 0; _i < _this3.state.cards.length; _i++) {\n                      if (_this3.state.selected === _this3.state.cards[_i].last4) _this3.setState({\n                        index: _i,\n                        paymentLoading: true\n                      });\n                    } // buyKilometers.call(this, {\n                    //     cardId: this.state.cards[i].cardId,\n                    //     customerID: this.state.userDetails.stripeCustomerID,\n                    //     quantity: Number(this.state.kms),\n                    //     userID: this.state.userDetails.userID,\n                    //     timestamp: new Date().getTime(),\n                    // })\n\n                  } else _this3.setState({\n                    errorMessage: 'Please select or add a payment method'\n                  });\n                },\n                className: styles.button2,\n                style: {\n                  backgroundColor: colors.GREEN\n                },\n                id: styles.buttonBottom,\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  children: \"Buy Kilometers\"\n                })\n              })]\n            })]\n          }) : this.state.addCard ?\n          /*#__PURE__*/\n          //add card\n          _jsx(_Fragment, {\n            children: /*#__PURE__*/_jsx(AddCardForm, {\n              userID: this.state.userDetails.userID,\n              cancel: function cancel() {\n                _this3.loadCards();\n\n                _this3.setState({\n                  errorMessage: '',\n                  addCard: false,\n                  buyKilometers: false\n                });\n              }\n            })\n          }) :\n          /*#__PURE__*/\n          //main page\n          _jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: styles.container,\n              style: {\n                backgroundColor: colors.WHITE,\n                marginTop: '20px'\n              },\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  color: colors.BLACK\n                },\n                children: \"Kilometers\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.text,\n                style: {\n                  color: colors.GREY\n                },\n                children: \"You can make kilometer purchases from this panel. Also remeber that sharing your code with friends who book their first ride automatically gives you free kilometers.\"\n              }), /*#__PURE__*/_jsx(\"img\", {\n                src: \"/walletImage.svg\",\n                alt: \"Purchase Perch Kilometers\",\n                className: styles.walletImage\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  width: 'initial',\n                  marginTop: '20px'\n                },\n                children: \"\".concat(this.state.quantity.toFixed(1), \" kilometers\")\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.button1,\n                style: {},\n                onClick: function onClick() {\n                  _this3.setState({\n                    buyKilometers: true,\n                    addCard: false,\n                    errorMessage: ''\n                  });\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  children: \"Buy kilometers\"\n                })\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.container,\n              style: {\n                backgroundColor: colors.WHITE,\n                marginTop: '20px',\n                marginBottom: '150px'\n              },\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  color: colors.BLACK\n                },\n                children: \"Payment Methods\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.text,\n                style: {\n                  color: colors.GREY,\n                  marginBottom: '20px'\n                },\n                children: \"List of available payment methods. New payment methods can also be added.\"\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.paymentCont,\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.paymentItem,\n                  children: [cards, /*#__PURE__*/_jsxs(\"div\", {\n                    className: styles.paymentRow,\n                    id: styles.addCardPayment,\n                    onClick: function onClick() {\n                      _this3.setState({\n                        addCard: true,\n                        buyKilometers: false,\n                        errorMessage: ''\n                      });\n                    },\n                    children: [/*#__PURE__*/_jsxs(\"div\", {\n                      style: {\n                        flexDirection: 'row',\n                        display: 'flex',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsx(\"img\", {\n                        src: \"/addPaymentCardIcon.svg\",\n                        alt: \"Perch Payment\",\n                        className: styles.visaIcon,\n                        style: {\n                          marginRight: '15px'\n                        }\n                      }), /*#__PURE__*/_jsx(\"p\", {\n                        className: styles.paymentCardNumber,\n                        id: styles.paymentCardNumber_,\n                        children: \"Add Debit / Credit Card\"\n                      })]\n                    }), /*#__PURE__*/_jsx(AiOutlineRight, {\n                      color: colors.BLACK\n                    })]\n                  })]\n                })\n              })]\n            })]\n          })\n        })\n      });\n    }\n  }]);\n\n  return PerchWallet;\n}(React.Component);\n\nexport { PerchWallet as default };\n;\n\nvar PaymentCard = /*#__PURE__*/function (_React$Component2) {\n  _inherits(PaymentCard, _React$Component2);\n\n  var _super2 = _createSuper(PaymentCard);\n\n  function PaymentCard(props) {\n    var _this4;\n\n    _classCallCheck(this, PaymentCard);\n\n    _this4 = _super2.call(this, props);\n    _this4.state = {\n      deleteCard: false,\n      loading: false\n    };\n    return _this4;\n  }\n\n  _createClass(PaymentCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props = this.props,\n          selected = _this$props.selected,\n          setSelected = _this$props.setSelected,\n          card = _this$props.card,\n          userID = _this$props.userID,\n          removeCard = _this$props.removeCard,\n          index = _this$props.index,\n          selectedCard = _this$props.selectedCard;\n      var last4 = card.last4,\n          brand = card.brand;\n      if (this.props.type == 'listOfCards') return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.paymentRow,\n          id: styles.paymentRow_,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            style: {\n              flexDirection: 'row',\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsx(\"img\", {\n              src: brand == 'Visa' ? \"/visaIcon.svg\" : brand == 'Mastercard' ? '/mastercardIcon.svg' : '/addPaymentCardIcon.svg',\n              alt: \"Perch Payment\",\n              className: brand == 'Visa' ? styles.visaIcon : brand == 'Mastercard' ? styles.masterCardIcon : styles.genericCard\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              className: styles.paymentCardNumber,\n              id: styles.paymentCardNumber_,\n              children: [\"XXXX XXXX XXXX \", last4]\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            id: styles.paymentRowButton,\n            children: this.state.deleteCard ? /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.button2,\n                style: {\n                  backgroundColor: colors.RED,\n                  width: '80%'\n                },\n                onClick: function onClick() {\n                  deleteCard.call(_this5, userID, last4, selectedCard);\n                  removeCard(index);\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.paymentCardNumber_,\n                  children: \"Delete this card?\"\n                })\n              }), /*#__PURE__*/_jsx(AiOutlineClose, {\n                className: styles.closeDeletePayment,\n                onClick: function onClick() {\n                  _this5.setState({\n                    deleteCard: false\n                  });\n                }\n              })]\n            }) : /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: selected ? styles.buttonSelected : styles.button2,\n                style: {\n                  backgroundColor: colors.GREEN\n                },\n                onClick: function onClick() {\n                  setSelected(last4);\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.paymentCardNumber_,\n                  children: selected ? 'Selected' : 'Select card'\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.button2,\n                style: {\n                  backgroundColor: colors.RED\n                },\n                onClick: function onClick() {\n                  _this5.setState({\n                    deleteCard: true\n                  });\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.paymentCardNumber_,\n                  children: \"Delete Card\"\n                })\n              })]\n            })\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.sharedLine,\n          style: {\n            marginTop: '20px',\n            width: '100%'\n          }\n        })]\n      });else if (this.props.type == 'pickPayment') return (\n        /*#__PURE__*/\n        //TO MAKE A SELECTED ONE, THE PARENT COMPONENT SHOULD HAVE A SELECTED ITEM ID AND WE COMPARE ID HERE TO SHOW IF IT IS CONFIRMED OR NOT\n        _jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.paymentRow,\n            id: styles.addCardPayment_,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              style: {\n                flexDirection: 'row',\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsx(\"img\", {\n                src: brand == 'Visa' ? \"/visaIcon.svg\" : brand == 'Mastercard' ? '/mastercardIcon.svg' : '/addPaymentCardIcon.svg',\n                alt: \"Perch Payment\",\n                className: brand == 'Visa' ? styles.visaIcon : brand == 'Mastercard' ? styles.masterCardIcon : styles.genericCard\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                className: styles.paymentCardNumber,\n                id: styles.paymentCardNumber_,\n                children: [\"\\u2022\\u2022\\u2022\\u2022 \", last4]\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.pickPaymentSelected,\n              id: selected ? styles.selectedID : styles.selectID,\n              style: {\n                backgroundColor: colors.GREEN\n              },\n              onClick: function onClick() {\n                setSelected(last4);\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                id: styles.paymentCardNumber_,\n                children: selected ? 'Selected' : 'Select'\n              })\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.sharedLine,\n            style: {\n              marginTop: '0px',\n              width: '100%'\n            }\n          })]\n        })\n      );\n    }\n  }]);\n\n  return PaymentCard;\n}(React.Component);\n\n;\n\nvar AddCardForm = function AddCardForm(_ref) {\n  _s();\n\n  var cancel = _ref.cancel,\n      userID = _ref.userID;\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(''),\n      errorMessage = _useState2[0],\n      setErrorMessage = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var createTokenWithCard = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var cardElement, _yield$stripe$createT, error, token;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n\n              if (!(!stripe || !elements)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              ; // Get a reference to a mounted CardElement. Elements knows how\n              // to find your CardElement because there can only ever be one of\n              // each type of element.\n\n              cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n              _context.next = 7;\n              return stripe.createToken(cardElement);\n\n            case 7:\n              _yield$stripe$createT = _context.sent;\n              error = _yield$stripe$createT.error;\n              token = _yield$stripe$createT.token;\n\n              if (error) {\n                setErrorMessage(error.message);\n                setLoading(false);\n              } else {\n                storeCard.call(_this6, userID, token, setLoading, setErrorMessage, cancel);\n              }\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createTokenWithCard() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.container,\n      style: {\n        backgroundColor: colors.WHITE,\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        className: styles.title,\n        style: {\n          color: colors.BLACK\n        },\n        children: \"Add card\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"Name on Card\",\n        className: styles.inputPaymentPanel,\n        id: styles.inputPaymentPanel_ADD,\n        style: {\n          marginTop: '10px'\n        },\n        value: name,\n        onChange: function onChange(e) {\n          var value = e.target.value;\n          setName(value);\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.inputPaymentPanel,\n        children: /*#__PURE__*/_jsx(CardElement, {\n          options: {\n            hidePostalCode: true,\n            style: {\n              base: {\n                color: '#303238',\n                fontSize: '16px',\n                fontFamily: '\"Gill Sans\", sans-serif',\n                fontSmoothing: 'antialiased',\n                '::placeholder': {\n                  color: '#757575'\n                }\n              },\n              invalid: {\n                color: '#e5424d',\n                ':focus': {\n                  color: '#303238'\n                }\n              }\n            }\n          }\n        })\n      }), errorMessage && /*#__PURE__*/_jsx(\"p\", {\n        className: styles.em,\n        style: {\n          textAlign: 'initial'\n        },\n        children: errorMessage\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.enterKilometerDiv,\n      style: {\n        marginTop: '20px',\n        marginBottom: '150px',\n        marginLeft: '2.5%',\n        width: '95%'\n      },\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: styles.button2,\n        style: {\n          backgroundColor: colors.RED\n        },\n        id: styles.buttonBottom,\n        onClick: cancel,\n        children: /*#__PURE__*/_jsx(\"p\", {\n          className: styles.buttonText1,\n          children: \"Cancel\"\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.button2,\n        style: {\n          backgroundColor: colors.GREEN\n        },\n        id: styles.buttonBottom,\n        onClick: function onClick() {\n          if (name.length <= 3) setErrorMessage('Please enter the full name on the card');else createTokenWithCard();\n        },\n        children: loading ? /*#__PURE__*/_jsx(Loader, {\n          type: \"TailSpin\",\n          color: colors.WHITE,\n          height: '20px',\n          width: '20px'\n        }) : /*#__PURE__*/_jsx(\"p\", {\n          className: styles.buttonText1,\n          children: \"Add Card\"\n        })\n      })]\n    })]\n  });\n};\n\n_s(AddCardForm, \"SHsbFLFRwhsWxbJa485op4Ogd78=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = AddCardForm;\n\nvar ProcessPayment = function ProcessPayment(_ref3) {\n  _s2();\n\n  var goBack = _ref3.goBack,\n      toSend = _ref3.toSend;\n\n  var _useState4 = useState(false),\n      paymentError = _useState4[0],\n      setPaymentError = _useState4[1];\n\n  var _useState5 = useState(false),\n      paymentCompleted = _useState5[0],\n      setPaymentCompleted = _useState5[1];\n\n  var _useState6 = useState(''),\n      paymentErrorMessage = _useState6[0],\n      setPaymentErrorMessage = _useState6[1];\n\n  var stripe = useStripe(); //const elements = useElements();\n\n  var startPayment = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (stripe) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 2:\n              axios.post(\"https://us-central1-perch-01.cloudfunctions.net/buyPerchKilometers\", _objectSpread(_objectSpread({}, toSend), {}, {\n                status: 'initial'\n              })).then(function (result) {\n                var _result$data = result.data,\n                    status = _result$data.status,\n                    client_secret = _result$data.client_secret,\n                    id = _result$data.id;\n                toSend.paymentIntentId = id;\n                toSend.status = 'confirm_payment';\n\n                if (status == 'succeeded') {\n                  setPaymentCompleted(true);\n                } else if (status == 'requires_action') {\n                  stripe.confirmCardPayment(client_secret).then(function (data) {\n                    console.log(JSON.stringify(data));\n\n                    if (data.status == 'requires_confirmation') {\n                      axios.post(\"https://us-central1-perch-01.cloudfunctions.net/buyPerchKilometers\", _objectSpread(_objectSpread({}, toSend), {}, {\n                        paymentIntentId: id,\n                        status: 'confirm_payment'\n                      })).then(function (result_) {\n                        var status_ = result_.data.status;\n\n                        if (status_ == 'succeeded') {\n                          setPaymentCompleted(true);\n                        }\n                      })[\"catch\"](function (error) {\n                        setPaymentError(true);\n                        setPaymentErrorMessage(error.message);\n                      });\n                    }\n                  })[\"catch\"](function (error) {\n                    setPaymentError(true);\n                    setPaymentErrorMessage(error.message);\n                  });\n                }\n              })[\"catch\"](function (error) {\n                setPaymentError(true);\n                setPaymentErrorMessage(error.message);\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function startPayment() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    startPayment();\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    style: {\n      backgroundColor: colors.WHITE,\n      marginTop: '20px'\n    },\n    children: [!paymentCompleted && !paymentError && /*#__PURE__*/_jsx(Loader, {\n      type: \"TailSpin\",\n      color: colors.GREEN,\n      height: '100px',\n      width: '100px',\n      style: {\n        marginTop: 25\n      }\n    }), /*#__PURE__*/_jsx(\"p\", {\n      className: styles.title,\n      style: {\n        color: colors.GREY,\n        width: 'initial',\n        marginTop: 20,\n        marginBottom: 30,\n        paddingRight: 15,\n        paddingLeft: 15,\n        textAlign: 'center'\n      },\n      children: paymentCompleted ? \"Your payment has been processed. Thank you.\" : paymentError ? \"Your payment failed. \".concat(paymentErrorMessage, \" \") : \"Your payment is currently processing. Please wait.\"\n    }), (paymentCompleted || paymentError) && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.button1,\n      style: {\n        marginTop: 0\n      },\n      onClick: goBack,\n      children: /*#__PURE__*/_jsx(\"p\", {\n        className: styles.buttonText1,\n        children: \"Go back\"\n      })\n    })]\n  });\n};\n\n_s2(ProcessPayment, \"r8EOTaNACQP+Vkr/Yj1jvT/CwRU=\", false, function () {\n  return [useStripe];\n});\n\n_c2 = ProcessPayment;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddCardForm\");\n$RefreshReg$(_c2, \"ProcessPayment\");","map":{"version":3,"sources":["/Users/ugo/Documents/Perch_Projects/Perch-Website/functions/panels/userPanels/perchWallet.js"],"names":["React","useEffect","useState","AiOutlineClose","AiOutlineRight","colors","storeCard","deleteCard","buyKilometers","styles","firebase","loadStripe","axios","Loader","CardElement","Elements","useElements","useStripe","stripePromise","PerchWallet","props","userID","state","userDetails","database","ref","once","snapshot","arrayOfLast4","i","key","val","last4","card","brand","cardId","setState","selected","cards","value","update","then","error","errorMessage","message","index","splice","addCard","quantity","name","cardNumber","expiryDate","ccv","loading","rate","kms","cost","paymentLoading","on","loadCards","length","push","removeCard","setSelected","cont","customerID","stripeCustomerID","Number","timestamp","Date","getTime","isAutomatic","container","backgroundColor","WHITE","marginTop","title","color","BLACK","e","target","inputPaymentPanel","enterKilometerDiv","width","margin","fontFamily","GREY","text","toFixed","sharedLine","fontSize","GREEN","marginBottom","paymentCont","paymentItem","paymentRow","addCardPayment","flexDirection","display","alignItems","visaIcon","marginRight","marginLeft","paymentCardNumber","paymentCardNumber_","em","textAlign","button2","RED","buttonBottom","buttonText1","walletImage","button1","Component","PaymentCard","selectedCard","type","paymentRow_","masterCardIcon","genericCard","paymentRowButton","call","closeDeletePayment","buttonSelected","addCardPayment_","pickPaymentSelected","selectedID","selectID","AddCardForm","cancel","setName","setErrorMessage","setLoading","stripe","elements","createTokenWithCard","cardElement","getElement","createToken","token","inputPaymentPanel_ADD","hidePostalCode","style","base","fontSmoothing","invalid","ProcessPayment","goBack","toSend","paymentError","setPaymentError","paymentCompleted","setPaymentCompleted","paymentErrorMessage","setPaymentErrorMessage","startPayment","post","status","result","data","client_secret","id","paymentIntentId","confirmCardPayment","console","log","JSON","stringify","result_","status_","paddingRight","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineClose, AiOutlineRight } from 'react-icons/ai';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, storeCard, deleteCard, buyKilometers, } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport { loadStripe } from '@stripe/stripe-js';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\nimport {\n    CardElement,\n    Elements,\n    useElements,\n    useStripe\n} from '@stripe/react-stripe-js';\nconst stripePromise = loadStripe('pk_test_RjADdW2vGwFAgOOk7ws1juNB002JV727O8');\n\nexport default class PerchWallet extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            buyKilometers: false,\n            addCard: false,\n            userDetails: this.props.userDetails,\n            quantity: 0,\n            cards: [],\n            selected: null,\n\n            index: 0,\n\n            name: '',\n            cardNumber: '',\n            expiryDate: '',\n            ccv: '',\n            errorMessage: '',\n\n            loading: false,\n\n            rate: 0,\n            kms: '',\n            cost: 0,\n\n            paymentLoading: false,\n\n        };\n    };\n    componentDidMount() {\n        const { userID } = this.state.userDetails;\n        firebase.database().ref(`perchKilometers/${userID}/quantity`).on('value', snapshot => {\n            if (!!snapshot)\n                this.setState({ quantity: snapshot.val() });\n        });\n        firebase.database().ref(`costPerPerchKM`).on('value', snapshot => {\n            this.setState({ rate: snapshot.val() });\n        });\n        this.loadCards();\n    };\n    loadCards = () => {\n        const { userID } = this.state.userDetails;\n        firebase.database().ref(`cards/${userID}`).once('value', snapshot => {\n            if (!!snapshot) {\n                let arrayOfLast4 = [], i = 0;\n                for (let key in snapshot.val()) {\n                    if (key != 'selected')\n                        arrayOfLast4[i] = {\n                            last4: snapshot.val()[key].card.last4,\n                            brand: snapshot.val()[key].card.brand,\n                            cardId: snapshot.val()[key].card.cardId,\n                        };\n                    else if (key == 'selected')\n                        this.setState({ selected: snapshot.val()[key] })\n                    i++;\n                }\n                this.setState({ cards: arrayOfLast4 });\n            };\n        });\n    };\n    setSelected = (value) => {\n        const { userID } = this.state.userDetails;\n        firebase.database().ref(`cards/${userID}`).update({\n            selected: value\n        }).then(() => {\n            this.setState({ selected: value })\n        }).catch(error => { this.setState({ errorMessage: error.message }) })\n    }\n    removeCard = (index) => {\n        let { cards } = this.state;\n        cards.splice(index, 1);\n        this.setState({ cards: cards })\n    };\n    render() {\n        let cards = [];\n        for (let i = 0; i < this.state.cards.length; i++)\n            cards.push(\n                <PaymentCard\n                    userID={this.state.userDetails.userID}\n                    key={this.state.cards[i].last4}\n                    card={this.state.cards[i]}\n                    index={i}\n                    removeCard={this.removeCard}\n                    setSelected={this.setSelected}\n                    selectedCard={this.state.selected}\n                    selected={this.state.selected === this.state.cards[i].last4}\n                    type={this.state.buyKilometers ? 'pickPayment' : 'listOfCards'} />\n            );\n        return (\n            <Elements stripe={stripePromise}>\n                <div className={styles.cont}>\n                    {this.state.buyKilometers ?//buy kilometers\n                        (\n                            this.state.paymentLoading ?\n                                <>\n                                    <ProcessPayment\n                                        goBack={() => {\n                                            this.setState({\n                                                buyKilometers: false,\n                                                addCard: false,\n                                                kms: '',\n                                                errorMessage: '',\n                                                paymentLoading: false,\n                                            })\n                                        }}\n                                        toSend={{\n                                            cardId: this.state.cards[this.state.index].cardId,\n                                            customerID: this.state.userDetails.stripeCustomerID,\n                                            quantity: Number(this.state.kms),\n                                            userID: this.state.userDetails.userID,\n                                            timestamp: new Date().getTime(),\n                                            isAutomatic: true,\n                                        }}\n                                    />\n                                </> :\n                                <>\n                                    <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                                        <p className={styles.title} style={{ color: colors.BLACK }}>Enter the amount of kilometers you would like to purchase</p>\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Enter amount of kilometers\"\n                                            value={this.state.kms}\n                                            onChange={(e) => {\n                                                const value = e.target.value;\n                                                if (value.length <= 3) {\n                                                    const cost = Number(value) * this.state.rate;\n                                                    this.setState({ kms: value, cost: cost });\n                                                }\n                                            }}\n                                            className={styles.inputPaymentPanel} />\n                                        <div className={styles.enterKilometerDiv} style={{ marginTop: '20px' }}>\n                                            <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', color: colors.GREY }} className={styles.text}>Cost per kilometer</p>\n                                            <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', }} className={styles.text}>{`$ ${this.state.rate?.toFixed(2)}`}</p>\n                                        </div>\n                                        {/* <div className={styles.enterKilometerDiv}>\n                                    <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', color: colors.GREY }} className={styles.text}>Total cost of kilometers</p>\n                                    <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', }} className={styles.text}>{`$ ${this.state.cost?.toFixed(2)}`}</p>\n                                </div>\n                                 <div className={styles.enterKilometerDiv}>\n                                    <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', color: colors.GREY }} className={styles.text}>Taxes</p>\n                                    <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', }} className={styles.text}>{`$ 1.99`}</p>\n                                </div> */}\n                                        <div className={styles.sharedLine} style={{ marginTop: '20px', width: '90%' }}></div>\n                                        <div className={styles.enterKilometerDiv}>\n                                            <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Bold', fontSize: '120%' }} className={styles.text}>Total</p>\n                                            <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Bold', color: colors.GREEN, fontSize: '120%' }} className={styles.text}>{`$ ${this.state.cost?.toFixed(2)}`}</p>\n                                        </div>\n\n                                    </div>\n\n                                    <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px', }}>\n                                        <p className={styles.title} style={{ color: colors.BLACK }}>\n                                            Payment Methods\n                                        </p>\n                                        <p className={styles.text} style={{ color: colors.GREY, marginBottom: '20px' }}>\n                                            List of available payment methods. New payment methods can also be added.\n                                        </p>\n\n                                        <div className={styles.paymentCont}>\n                                            <div className={styles.paymentItem}>\n                                                {cards}\n                                                <div className={styles.paymentRow} id={styles.addCardPayment}>\n                                                    <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                                                        <img src=\"/PayPalLogo.svg\" alt=\"Perch Payment\" className={styles.visaIcon} style={{ marginRight: '15px', marginLeft: '0px' }} />\n                                                        <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>PayPal</p>\n                                                    </div>\n                                                    <AiOutlineRight color={colors.BLACK} />\n                                                </div>\n                                                <div className={styles.sharedLine} style={{ marginTop: '0px', width: '100%' }}></div>\n                                                <div className={styles.paymentRow} id={styles.addCardPayment} onClick={() => { this.setState({ addCard: true, buyKilometers: false, errorMessage: '' }) }}>\n                                                    <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                                                        <img src=\"/addPaymentCardIcon.svg\" alt=\"Perch Payment\" className={styles.visaIcon} style={{ marginRight: '15px' }} />\n                                                        <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>Add Debit / Credit Card</p>\n                                                    </div>\n                                                    <AiOutlineRight color={colors.BLACK} />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {this.state.errorMessage && <p className={styles.em} style={{ textAlign: 'initial' }}>{this.state.errorMessage}</p>}\n                                    </div>\n\n                                    <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                                        <div className={styles.button2} style={{ backgroundColor: colors.RED }} id={styles.buttonBottom}\n                                            onClick={() => { this.setState({ buyKilometers: false, addCard: false, errorMessage: '' }) }}>\n                                            <p className={styles.buttonText1}>Cancel</p>\n                                        </div>\n                                        <div\n                                            onClick={() => {\n                                                if (this.state.kms < 20)\n                                                    this.setState({ errorMessage: 'You can get a minimum of 20 kilometers' })\n                                                else if (this.state.kms > 100)\n                                                    this.setState({ errorMessage: 'You can get a maximum of 100 kilometers' })\n                                                else if (this.state.selected) {\n                                                    for (let i = 0; i < this.state.cards.length; i++)\n                                                        if (this.state.selected === this.state.cards[i].last4)\n                                                            this.setState({ index: i, paymentLoading: true })\n                                                    // buyKilometers.call(this, {\n                                                    //     cardId: this.state.cards[i].cardId,\n                                                    //     customerID: this.state.userDetails.stripeCustomerID,\n                                                    //     quantity: Number(this.state.kms),\n                                                    //     userID: this.state.userDetails.userID,\n                                                    //     timestamp: new Date().getTime(),\n                                                    // })\n                                                }\n                                                else\n                                                    this.setState({ errorMessage: 'Please select or add a payment method' })\n                                            }}\n                                            className={styles.button2}\n                                            style={{ backgroundColor: colors.GREEN }}\n                                            id={styles.buttonBottom}>\n                                            <p className={styles.buttonText1}>Buy Kilometers</p>\n                                        </div>\n                                    </div>\n                                </>) :\n                        this.state.addCard ?//add card\n                            <>\n                                <AddCardForm\n                                    userID={this.state.userDetails.userID}\n                                    cancel={() => {\n                                        this.loadCards();\n                                        this.setState({ errorMessage: '', addCard: false, buyKilometers: false, })\n                                    }}\n                                />\n                            </>\n                            ://main page\n                            <>\n                                <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                                    <p className={styles.title} style={{ color: colors.BLACK }}>Kilometers</p>\n                                    <p className={styles.text} style={{ color: colors.GREY }}>\n                                        You can make kilometer purchases from this panel. Also remeber that sharing your code with friends who book their first ride automatically gives you free kilometers.\n                                    </p>\n                                    <img src=\"/walletImage.svg\" alt=\"Purchase Perch Kilometers\" className={styles.walletImage} />\n                                    <p className={styles.title} style={{ width: 'initial', marginTop: '20px' }}>{`${this.state.quantity.toFixed(1)} kilometers`}</p>\n                                    <div className={styles.button1} style={{}} onClick={() => { this.setState({ buyKilometers: true, addCard: false, errorMessage: '' }) }}>\n                                        <p className={styles.buttonText1}>Buy kilometers</p>\n                                    </div>\n                                </div>\n\n                                <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px', marginBottom: '150px' }}>\n                                    <p className={styles.title} style={{ color: colors.BLACK }}>\n                                        Payment Methods\n                                    </p>\n                                    <p className={styles.text} style={{ color: colors.GREY, marginBottom: '20px' }}>\n                                        List of available payment methods. New payment methods can also be added.\n                                    </p>\n\n                                    <div className={styles.paymentCont}>\n                                        <div className={styles.paymentItem}>\n                                            {cards}\n                                            <div className={styles.paymentRow} id={styles.addCardPayment} onClick={() => { this.setState({ addCard: true, buyKilometers: false, errorMessage: '' }) }}>\n                                                <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                                                    <img src=\"/addPaymentCardIcon.svg\" alt=\"Perch Payment\" className={styles.visaIcon} style={{ marginRight: '15px' }} />\n                                                    <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>Add Debit / Credit Card</p>\n                                                </div>\n                                                <AiOutlineRight color={colors.BLACK} />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </>\n                    }\n                </div >\n            </Elements>\n        )\n\n    }\n};\nclass PaymentCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteCard: false,\n            loading: false,\n        }\n    }\n    render() {\n        const { selected, setSelected, card, userID, removeCard, index, selectedCard } = this.props;\n        const { last4, brand } = card;\n        if (this.props.type == 'listOfCards')\n            return (\n                <>\n                    <div className={styles.paymentRow} id={styles.paymentRow_}>\n                        <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                            <img\n                                src={brand == 'Visa' ? \"/visaIcon.svg\" : brand == 'Mastercard' ? '/mastercardIcon.svg' : '/addPaymentCardIcon.svg'} alt=\"Perch Payment\"\n                                className={brand == 'Visa' ? styles.visaIcon : brand == 'Mastercard' ? styles.masterCardIcon : styles.genericCard} />\n                            <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>XXXX XXXX XXXX {last4}</p>\n                        </div>\n                        <div id={styles.paymentRowButton}>\n                            {\n                                this.state.deleteCard ?\n                                    <>\n                                        <div className={styles.button2} style={{ backgroundColor: colors.RED, width: '80%' }}\n                                            onClick={() => {\n                                                deleteCard.call(this, userID, last4, selectedCard);\n                                                removeCard(index);\n                                            }}\n                                        >\n                                            <p className={styles.buttonText1} id={styles.paymentCardNumber_}>Delete this card?</p>\n                                        </div>\n                                        <AiOutlineClose className={styles.closeDeletePayment} onClick={() => { this.setState({ deleteCard: false }) }} />\n                                    </> :\n                                    <>\n                                        <div\n                                            className={selected ? styles.buttonSelected : styles.button2}\n                                            style={{ backgroundColor: colors.GREEN }}\n                                            onClick={() => {\n                                                setSelected(last4)\n                                            }}>\n                                            <p className={styles.buttonText1} id={styles.paymentCardNumber_}>{selected ? 'Selected' : 'Select card'}</p>\n                                        </div>\n                                        <div className={styles.button2} style={{ backgroundColor: colors.RED }} onClick={() => { this.setState({ deleteCard: true }) }}>\n                                            <p className={styles.buttonText1} id={styles.paymentCardNumber_}>Delete Card</p>\n                                        </div>\n                                    </>}\n                        </div>\n                    </div>\n                    <div className={styles.sharedLine} style={{ marginTop: '20px', width: '100%' }}></div>\n                </>\n            );\n        else if (this.props.type == 'pickPayment')\n            return (//TO MAKE A SELECTED ONE, THE PARENT COMPONENT SHOULD HAVE A SELECTED ITEM ID AND WE COMPARE ID HERE TO SHOW IF IT IS CONFIRMED OR NOT\n                <>\n                    <div className={styles.paymentRow} id={styles.addCardPayment_} >\n                        <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                            <img\n                                src={brand == 'Visa' ? \"/visaIcon.svg\" : brand == 'Mastercard' ? '/mastercardIcon.svg' : '/addPaymentCardIcon.svg'} alt=\"Perch Payment\"\n                                className={brand == 'Visa' ? styles.visaIcon : brand == 'Mastercard' ? styles.masterCardIcon : styles.genericCard} />\n                            <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>•••• {last4}</p>\n                        </div>\n                        <div className={styles.pickPaymentSelected}\n                            id={selected ? styles.selectedID : styles.selectID}\n                            style={{ backgroundColor: colors.GREEN, }}\n                            onClick={() => {\n                                setSelected(last4)\n                            }}>\n                            <p className={styles.buttonText1} id={styles.paymentCardNumber_}>{selected ? 'Selected' : 'Select'}</p>\n                        </div>\n                    </div>\n                    <div className={styles.sharedLine} style={{ marginTop: '0px', width: '100%' }}></div>\n                </>\n            );\n    }\n};\nconst AddCardForm = ({ cancel, userID }) => {\n    const [name, setName] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [loading, setLoading] = useState(false);\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const createTokenWithCard = async () => {\n        setLoading(true);\n        if (!stripe || !elements) {\n            // Stripe.js has not loaded yet. Make sure to disable\n            // form submission until Stripe.js has loaded.\n            return;\n        };\n\n        // Get a reference to a mounted CardElement. Elements knows how\n        // to find your CardElement because there can only ever be one of\n        // each type of element.\n        const cardElement = elements.getElement(CardElement);\n        // Use your card Element with other Stripe.js APIs\n        const { error, token } = await stripe.createToken(cardElement);\n\n        if (error) {\n            setErrorMessage(error.message);\n            setLoading(false);\n        } else {\n            storeCard.call(this, userID, token, setLoading, setErrorMessage, cancel);\n        }\n    };\n    return (\n        <>\n            <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                <p className={styles.title} style={{ color: colors.BLACK }}>Add card</p>\n                <input type=\"text\"\n                    placeholder=\"Name on Card\"\n                    className={styles.inputPaymentPanel}\n                    id={styles.inputPaymentPanel_ADD}\n                    style={{ marginTop: '10px' }}\n                    value={name}\n                    onChange={(e) => {\n                        const value = e.target.value;\n                        setName(value);\n                    }}\n                />\n                <div className={styles.inputPaymentPanel}>\n                    <CardElement\n                        options={{\n                            hidePostalCode: true,\n                            style: {\n                                base: {\n                                    color: '#303238',\n                                    fontSize: '16px',\n                                    fontFamily: '\"Gill Sans\", sans-serif',\n                                    fontSmoothing: 'antialiased',\n                                    '::placeholder': {\n                                        color: '#757575',\n                                    },\n                                },\n                                invalid: {\n                                    color: '#e5424d',\n                                    ':focus': {\n                                        color: '#303238',\n                                    },\n                                },\n                            }\n                        }}\n                    />\n                </div>\n\n                {errorMessage && <p className={styles.em} style={{ textAlign: 'initial' }}>{errorMessage}</p>}\n            </div>\n            <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                <div className={styles.button2} style={{ backgroundColor: colors.RED }} id={styles.buttonBottom}\n                    onClick={cancel}>\n                    <p className={styles.buttonText1}>Cancel</p>\n                </div>\n                <div\n                    className={styles.button2}\n                    style={{ backgroundColor: colors.GREEN }}\n                    id={styles.buttonBottom}\n                    onClick={() => {\n                        if (name.length <= 3)\n                            setErrorMessage('Please enter the full name on the card');\n                        else\n                            createTokenWithCard();\n                    }}>\n                    {loading ?\n                        <Loader\n                            type=\"TailSpin\"\n                            color={colors.WHITE}\n                            height={'20px'}\n                            width={'20px'}\n                        /> :\n                        <p className={styles.buttonText1}>Add Card</p>}\n                </div>\n            </div>\n        </>\n    )\n}\nconst ProcessPayment = ({ goBack, toSend }) => {\n    const [paymentError, setPaymentError] = useState(false);\n    const [paymentCompleted, setPaymentCompleted] = useState(false);\n    const [paymentErrorMessage, setPaymentErrorMessage] = useState('');\n    const stripe = useStripe();\n    //const elements = useElements();\n\n    const startPayment = async () => {\n        if (!stripe) return;\n\n        axios.post(`https://us-central1-perch-01.cloudfunctions.net/buyPerchKilometers`, { ...toSend, status: 'initial' })\n            .then(result => {\n                const { status, client_secret, id } = result.data;\n                toSend.paymentIntentId = id;\n                toSend.status = 'confirm_payment';\n\n                if (status == 'succeeded') {\n                    setPaymentCompleted(true)\n                }\n                else if (status == 'requires_action') {\n                    stripe.confirmCardPayment(client_secret)\n                        .then(data => {\n                            console.log(JSON.stringify(data))\n                            if (data.status == 'requires_confirmation') {\n                                axios.post(`https://us-central1-perch-01.cloudfunctions.net/buyPerchKilometers`, { ...toSend, paymentIntentId: id, status: 'confirm_payment' })\n                                    .then((result_) => {\n                                        const status_ = result_.data.status;\n                                        if (status_ == 'succeeded') {\n                                            setPaymentCompleted(true);\n                                        }\n                                    })\n                                    .catch(error => {\n                                        setPaymentError(true);\n                                        setPaymentErrorMessage(error.message);\n                                    })\n                            }\n                        }).catch(error => {\n                            setPaymentError(true);\n                            setPaymentErrorMessage(error.message);\n                        })\n                }\n            })\n            .catch(error => {\n                setPaymentError(true);\n                setPaymentErrorMessage(error.message);\n            });\n\n    };\n    useEffect(() => {\n        startPayment();\n    }, []);\n    return (\n        <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n            {!paymentCompleted && !paymentError && <Loader\n                type=\"TailSpin\"\n                color={colors.GREEN}\n                height={'100px'}\n                width={'100px'}\n                style={{ marginTop: 25 }}\n            />}\n            <p className={styles.title}\n                style={{ color: colors.GREY, width: 'initial', marginTop: 20, marginBottom: 30, paddingRight: 15, paddingLeft: 15, textAlign: 'center' }}>\n                {paymentCompleted ?\n                    `Your payment has been processed. Thank you.` :\n                    paymentError ?\n                        `Your payment failed. ${paymentErrorMessage} ` :\n                        `Your payment is currently processing. Please wait.`}\n            </p>\n            {(paymentCompleted || paymentError) && < div\n                className={styles.button1}\n                style={{ marginTop: 0 }}\n                onClick={goBack}>\n                <p className={styles.buttonText1}>Go back</p>\n            </div>}\n        </div >\n    )\n};"]},"metadata":{},"sourceType":"module"}