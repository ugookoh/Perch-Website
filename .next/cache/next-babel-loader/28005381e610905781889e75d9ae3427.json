{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { validateVehicle, dateOfQuery, colors } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default class VehicleApplications extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadResult\", () => {\n      if (this.state.userDetails) {\n        firebase.database().ref(`vehicleAdditionRequest`).once('value', snapshot => {\n          this.setState({\n            result: snapshot.val() ? snapshot.val() : {}\n          });\n        });\n      }\n    });\n\n    _defineProperty(this, \"loadDocument\", (userID, documentStorageID) => {\n      firebase.storage().ref(`driverVehicleDocs/${userID}/${documentStorageID}/vehicleRegistration`).getDownloadURL().then(result => {\n        this.setState({\n          docRegistrationURL: result\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n      firebase.storage().ref(`driverVehicleDocs/${userID}/${documentStorageID}/vehicleInsurance`).getDownloadURL().then(result => {\n        this.setState({\n          docInsuranceURL: result\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n      firebase.storage().ref(`driverVehicleDocs/${userID}/${documentStorageID}/vehicleInspection`).getDownloadURL().then(result => {\n        this.setState({\n          docInspectionURL: result\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n      firebase.storage().ref(`driverVehicleDocs/${userID}/${documentStorageID}/vehicleImage`).getDownloadURL().then(result => {\n        this.setState({\n          docVehicleImage: result\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n    });\n\n    this.state = {\n      showDocs: false,\n      result: {},\n      docList: [\"Vehicle insurance\", \"Vehicle registration\", \"Vehicle inspection\"],\n      selected: {},\n      docRegistrationURL: '',\n      docInsuranceURL: '',\n      docInspectionURL: '',\n      docVehicleImage: '',\n      inspectionVerified: false,\n      registrationVerified: false,\n      insuranceVerified: false,\n      urlToShow: null\n    };\n  }\n\n  componentDidMount() {\n    this.loadResult();\n  }\n\n  render() {\n    let requirements = [];\n\n    for (let i = 0; i < this.state.docList.length; i++) {\n      let urlToShow = '';\n      if (this.state.docList[i] == 'Vehicle insurance') urlToShow = this.state.docInsuranceURL;else if (this.state.docList[i] == 'Vehicle registration') urlToShow = this.state.docRegistrationURL;else if (this.state.docList[i] == 'Vehicle inspection') urlToShow = this.state.docInspectionURL;\n      let isVerified = false;\n      if (this.state.docList[i] == 'Vehicle insurance') isVerified = this.state.insuranceVerified;else if (this.state.docList[i] == 'Vehicle registration') isVerified = this.state.registrationVerified;else if (this.state.docList[i] == 'Vehicle inspection') isVerified = this.state.inspectionVerified;\n      requirements.push( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.driverFAQ_PICDESC,\n        id: styles.driverROUNDSUPPORT,\n        children: [/*#__PURE__*/_jsx(\"a\", {\n          href: urlToShow,\n          target: '_blank',\n          children: /*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: '#000000',\n              width: 'initial',\n              margin: '0px',\n              marginLeft: '10px'\n            },\n            children: this.state.docList[i]\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.driver_APP_RADIO,\n          style: {\n            backgroundColor: GREEN,\n            opacity: isVerified ? 1 : 0.5\n          },\n          onClick: () => {\n            if (this.state.docList[i] == 'Vehicle insurance') this.setState({\n              insuranceVerified: true\n            });else if (this.state.docList[i] == 'Vehicle registration') this.setState({\n              registrationVerified: true\n            });else if (this.state.docList[i] == 'Vehicle inspection') this.setState({\n              inspectionVerified: true\n            });\n          },\n          children: isVerified ? /*#__PURE__*/_jsx(AiOutlineCheck, {\n            color: WHITE,\n            size: '15px'\n          }) : /*#__PURE__*/_jsx(_Fragment, {})\n        })]\n      }));\n    }\n\n    if (!this.state.userDetails && this.props.userDetails) this.setState({\n      userDetails: this.props.userDetails\n    }, () => {\n      this.loadResult();\n    });\n    let results = [];\n    const keys = Object.keys(this.state.result).sort();\n\n    for (let k = 0; k < keys.length; k++) {\n      const {\n        year,\n        make,\n        model,\n        timestamp,\n        userID,\n        documentStorageID\n      } = this.state.result[keys[k]];\n      const carName = `${year} ${make} ${model}`;\n      results.push( /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.previousMessageSum,\n          onClick: () => {\n            this.loadDocument(userID, documentStorageID);\n            this.setState({\n              showDocs: true,\n              selected: _objectSpread({\n                carName: carName\n              }, this.state.result[keys[k]])\n            });\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontSize: '95%'\n            },\n            children: carName\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.previousMessageDate,\n            children: /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                fontFamily: 'Gilroy-Semibold',\n                fontSize: '75%',\n                marginRight: '-10px',\n                paddingLeft: '10px'\n              },\n              children: dateOfQuery(timestamp)\n            })\n          })]\n        }), k == keys.length - 1 ? /*#__PURE__*/_jsx(_Fragment, {}) : /*#__PURE__*/_jsx(\"div\", {\n          className: styles.sharedLine,\n          style: {\n            marginTop: '5px'\n          }\n        })]\n      }));\n    }\n\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.cont,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.container,\n        style: {\n          backgroundColor: WHITE,\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          className: styles.title,\n          style: {\n            color: BLACK,\n            marginBottom: '20px'\n          },\n          children: this.state.showDocs ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [this.state.selected.carName, \" - \", /*#__PURE__*/_jsx(\"span\", {\n              style: {\n                color: GREEN\n              },\n              children: this.state.selected.plateNumber\n            })]\n          }) : 'Vehicle Applications'\n        }), this.state.showDocs ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [requirements, /*#__PURE__*/_jsx(\"img\", {\n            src: this.state.docVehicleImage,\n            className: styles.driverVehicleIMAGE\n          })]\n        }) : results]\n      }), this.state.showDocs ? /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.enterKilometerDiv,\n        style: {\n          marginTop: '20px',\n          marginBottom: '150px',\n          marginLeft: '2.5%',\n          width: '95%'\n        },\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.button2,\n          style: {\n            backgroundColor: RED\n          },\n          id: styles.buttonBottom,\n          onClick: () => {\n            this.setState({\n              showDocs: false\n            });\n          },\n          children: /*#__PURE__*/_jsx(\"p\", {\n            className: styles.buttonText1,\n            children: \"Cancel\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.button2,\n          style: {\n            backgroundColor: GREEN\n          },\n          id: styles.buttonBottom,\n          onClick: () => {\n            if (this.state.inspectionVerified && this.state.insuranceVerified && this.state.registrationVerified) {\n              const {\n                userID,\n                timestamp,\n                dateFormat\n              } = this.state.selected;\n              validateVehicle.call(this, userID, timestamp, dateFormat);\n              this.setState({\n                showDocs: false\n              });\n            } else alert('Please verify all the documents by ticking the green button next to it');\n          },\n          children: /*#__PURE__*/_jsx(\"p\", {\n            className: styles.buttonText1,\n            children: \"Approve Vehicle\"\n          })\n        })]\n      }) : /*#__PURE__*/_jsx(_Fragment, {})]\n    });\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/edokoh9/Documents/PerchWebsite/perch/functions/panels/adminPanels/vehicleApplications.js"],"names":["firebase","React","AiOutlineCheck","validateVehicle","dateOfQuery","colors","styles","VehicleApplications","Component","constructor","props","state","userDetails","database","ref","once","snapshot","setState","result","val","userID","documentStorageID","storage","getDownloadURL","then","docRegistrationURL","catch","error","console","log","message","docInsuranceURL","docInspectionURL","docVehicleImage","showDocs","docList","selected","inspectionVerified","registrationVerified","insuranceVerified","urlToShow","componentDidMount","loadResult","render","requirements","i","length","isVerified","push","driverFAQ_PICDESC","driverROUNDSUPPORT","text","color","width","margin","marginLeft","driver_APP_RADIO","backgroundColor","GREEN","opacity","WHITE","results","keys","Object","sort","k","year","make","model","timestamp","carName","previousMessageSum","loadDocument","fontSize","previousMessageDate","fontFamily","marginRight","paddingLeft","sharedLine","marginTop","cont","container","title","BLACK","marginBottom","plateNumber","driverVehicleIMAGE","enterKilometerDiv","button2","RED","buttonBottom","buttonText1","dateFormat","call","alert"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport {\n    validateVehicle,\n    dateOfQuery,\n    colors,\n} from '../../functions';\nimport styles from '../panel_layout.module.css';\n\n\n\nexport default class VehicleApplications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showDocs: false,\n            result: {},\n            docList: [\n                \"Vehicle insurance\",\n                \"Vehicle registration\",\n                \"Vehicle inspection\",\n            ],\n            selected: {},\n\n            docRegistrationURL: '',\n            docInsuranceURL: '',\n            docInspectionURL: '',\n            docVehicleImage: '',\n\n            inspectionVerified: false,\n            registrationVerified: false,\n            insuranceVerified: false,\n\n            urlToShow: null,\n        };\n    }\n    componentDidMount() {\n        this.loadResult();\n    }\n    loadResult = () => {\n        if (this.state.userDetails) {\n            firebase.database().ref(`vehicleAdditionRequest`).once('value', snapshot => {\n                this.setState({ result: snapshot.val() ? snapshot.val() : {} })\n            });\n        }\n    };\n    loadDocument = (userID, documentStorageID) => {\n\n        firebase.storage().ref(`driverVehicleDocs/${userID}/${documentStorageID}/vehicleRegistration`).getDownloadURL()\n            .then(result => {\n                this.setState({ docRegistrationURL: result });\n            })\n            .catch(error => { console.log(error.message); });\n        firebase.storage().ref(`driverVehicleDocs/${userID}/${documentStorageID}/vehicleInsurance`).getDownloadURL()\n            .then(result => {\n                this.setState({ docInsuranceURL: result });\n            })\n            .catch(error => { console.log(error.message) });\n        firebase.storage().ref(`driverVehicleDocs/${userID}/${documentStorageID}/vehicleInspection`).getDownloadURL()\n            .then(result => {\n                this.setState({ docInspectionURL: result });\n            }).catch(error => { console.log(error.message) });\n        firebase.storage().ref(`driverVehicleDocs/${userID}/${documentStorageID}/vehicleImage`).getDownloadURL()\n            .then(result => {\n                this.setState({ docVehicleImage: result });\n            }).catch(error => { console.log(error.message) });\n    };\n    render() {\n        let requirements = [];\n        for (let i = 0; i < this.state.docList.length; i++) {\n            let urlToShow = '';\n            if (this.state.docList[i] == 'Vehicle insurance')\n                urlToShow = this.state.docInsuranceURL;\n            else if (this.state.docList[i] == 'Vehicle registration')\n                urlToShow = this.state.docRegistrationURL;\n            else if (this.state.docList[i] == 'Vehicle inspection')\n                urlToShow = this.state.docInspectionURL;\n\n            let isVerified = false;\n            if (this.state.docList[i] == 'Vehicle insurance')\n                isVerified = this.state.insuranceVerified;\n            else if (this.state.docList[i] == 'Vehicle registration')\n                isVerified = this.state.registrationVerified;\n            else if (this.state.docList[i] == 'Vehicle inspection')\n                isVerified = this.state.inspectionVerified;\n\n            requirements.push(\n\n                <div className={styles.driverFAQ_PICDESC}\n                    id={styles.driverROUNDSUPPORT}\n                >\n                    <a href={urlToShow}\n                        target={'_blank'}>\n                        <p className={styles.text} style={{ color: '#000000', width: 'initial', margin: '0px', marginLeft: '10px' }}>{this.state.docList[i]}</p>\n                    </a>\n                    <div className={styles.driver_APP_RADIO} style={{ backgroundColor: GREEN, opacity: isVerified ? 1 : 0.5 }}\n                        onClick={() => {\n                            if (this.state.docList[i] == 'Vehicle insurance')\n                                this.setState({ insuranceVerified: true });\n                            else if (this.state.docList[i] == 'Vehicle registration')\n                                this.setState({ registrationVerified: true });\n                            else if (this.state.docList[i] == 'Vehicle inspection')\n                                this.setState({ inspectionVerified: true });\n                        }}\n                    >\n                        {isVerified ?\n                            <AiOutlineCheck color={WHITE} size={'15px'} /> :\n                            <></>\n                        }\n                    </div>\n                </div>\n            );\n        }\n\n        if (!this.state.userDetails && this.props.userDetails)\n            this.setState({ userDetails: this.props.userDetails }, () => { this.loadResult(); });\n\n        let results = [];\n        const keys = Object.keys(this.state.result).sort();\n        for (let k = 0; k < keys.length; k++) {\n            const { year, make, model, timestamp, userID, documentStorageID } = this.state.result[keys[k]];\n            const carName = `${year} ${make} ${model}`;\n            results.push(\n                <>\n                    <div className={styles.previousMessageSum}\n                        onClick={() => {\n                            this.loadDocument(userID, documentStorageID)\n                            this.setState({\n                                showDocs: true,\n                                selected: {\n                                    carName: carName,\n                                    ...this.state.result[keys[k]],\n                                },\n                            })\n                        }}>\n                        <p style={{ fontSize: '95%' }}>{carName}</p>\n                        <div className={styles.previousMessageDate}>\n                            <p style={{ fontFamily: 'Gilroy-Semibold', fontSize: '75%', marginRight: '-10px', paddingLeft: '10px' }}>\n                                {dateOfQuery(timestamp)}\n                            </p>\n                        </div>\n                    </div>\n                    {k == keys.length - 1 ? <></> : <div className={styles.sharedLine} style={{ marginTop: '5px' }}></div>}\n                </>\n            )\n        }\n        return (\n            <div className={styles.cont}>\n                <div className={styles.container} style={{ backgroundColor: WHITE, marginTop: '20px' }}>\n                    <p className={styles.title} style={{ color: BLACK, marginBottom: '20px' }}>{this.state.showDocs ? <>{this.state.selected.carName} - <span style={{ color: GREEN }}>{this.state.selected.plateNumber}</span></> : 'Vehicle Applications'}</p>\n                    {this.state.showDocs ?\n                        <>\n                            {requirements}\n                            <img src={this.state.docVehicleImage} className={styles.driverVehicleIMAGE} />\n                        </> :\n                        results}\n                </div>\n                {this.state.showDocs ?\n                    <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                        <div className={styles.button2} style={{ backgroundColor: RED }} id={styles.buttonBottom} onClick={() => { this.setState({ showDocs: false }) }}>\n                            <p className={styles.buttonText1}>Cancel</p>\n                        </div>\n\n                        <div className={styles.button2} style={{ backgroundColor: GREEN }}\n                            id={styles.buttonBottom}\n                            onClick={() => {\n                                if (this.state.inspectionVerified && this.state.insuranceVerified && this.state.registrationVerified) {\n                                    const { userID, timestamp, dateFormat } = this.state.selected;\n                                    validateVehicle.call(this, userID, timestamp, dateFormat);\n                                    this.setState({ showDocs: false })\n                                } else\n                                    alert('Please verify all the documents by ticking the green button next to it');\n                            }}>\n                            <p className={styles.buttonText1}>Approve Vehicle</p>\n                        </div>\n\n                    </div> : <></>}\n\n            </div>\n        );\n    };\n};"]},"metadata":{},"sourceType":"module"}