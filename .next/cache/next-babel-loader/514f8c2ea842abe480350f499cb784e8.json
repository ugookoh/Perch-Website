{"ast":null,"code":"import firebase from 'firebase';\nimport Router from 'next/router';\nimport axios from 'axios';\nexport function signIn(email, password, type) {\n  this.setState({\n    error: false,\n    errorMessage: '',\n    loading: true\n  }, () => {\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n      firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\n        if (type == 'user') {\n          const userID = firebase.auth().currentUser.uid;\n          firebase.database().ref(`users/${userID}/summarizedHistory`).once('value', snapshot => {\n            if (snapshot.val().phoneVerified == true) Router.push('/s/db/udash').then(() => window.scrollTo(0, 0));else this.setState({\n              displayVerification: true,\n              loading: false\n            });\n          }).catch(error => {\n            console.log(error.message);\n          });\n        } else if (type == 'driver') {\n          const userID = firebase.auth().currentUser.uid;\n          firebase.database().ref(`users/${userID}/summarizedHistory`).once('value', snapshot => {\n            if (snapshot.val().phoneVerified == true && snapshot.val().emailVerified == true) firebase.database().ref(`users/${userID}/driverVerified`).once('value', snap => {\n              if (snap.val() == 'VERIFIED') Router.push('/s/db/ddash').then(() => window.scrollTo(0, 0));else Router.push('/s/db/d_app_dash').then(() => window.scrollTo(0, 0));\n            }).catch(error => {\n              console.log(error.message);\n            });else this.setState({\n              displayVerification: true,\n              loading: false\n            });\n          }).catch(error => {\n            console.log(error.message);\n          });\n        }\n      }).catch(error => {\n        this.setState({\n          error: true,\n          errorMessage: error.message,\n          loading: false\n        });\n      });\n    }).catch(error => {\n      this.setState({\n        error: true,\n        errorMessage: error.message,\n        loading: false\n      });\n    });\n  });\n}\nexport function signUp(firstName, lastName, email, phoneNumber, password) {\n  this.setState({\n    error: false,\n    errorMessage: '',\n    loading: true\n  }, () => {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n      const userID = firebase.auth().currentUser.uid;\n      axios.post('https://us-central1-perch-01.cloudfunctions.net/createUserDetails', {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        phoneNumber: phoneNumber,\n        userID: userID\n      }).then(result => {\n        if (result.data == 'COMPLETE') this.setState({\n          displayVerification: true,\n          loading: false\n        });\n      }).catch(error => {\n        this.setState({\n          errorMessage: error.message,\n          loading: false\n        });\n      });\n    }).catch(error => {\n      this.setState({\n        error: true,\n        errorMessage: error.message,\n        loading: false\n      });\n    });\n  });\n}\n;\nexport function signOut(doNotReroute) {\n  firebase.auth().signOut().then(() => {\n    if (!doNotReroute) Router.push('/');\n  }).catch(error => {\n    console.log(error.message);\n  });\n}\nexport function sendFeedback() {\n  if (this.state.topic == 'unselected') this.setState({\n    errorMessage: 'A topic is needed. Please pick a topic to contact us about. If you do not have one, please pick \"Other\"'\n  });else if (this.state.message == '') this.setState({\n    errorMessage: 'Please enter a message'\n  });else {\n    this.setState({\n      loading: true\n    }, () => {\n      if (this.state.userDetails) {\n        const ref = this.state.userDetails.driverID ? `driverFeedback/${this.state.userDetails.driverID}` : `userFeedback/${this.state.userDetails.userID}`;\n        firebase.database().ref(ref).update({\n          [new Date().getTime()]: {\n            body: this.state.message,\n            subject: this.state.topic,\n            status: 'UNPROCESSED',\n            date: getDate()\n          }\n        }).then(() => {\n          this.setState({\n            topic: 'unselected',\n            message: '',\n            loading: false\n          }, () => {\n            this.loadResult();\n          });\n        }).catch(error => {\n          console.log(error.message);\n        });\n      } else firebase.database().ref(`userFeedbackEmail`).update({\n        [makeid(5)]: {\n          body: this.state.message,\n          subject: this.state.topic,\n          status: 'UNPROCESSED',\n          date: getDate(),\n          email: this.state.userEmail\n        }\n      }).then(() => {\n        this.setState({\n          topic: 'unselected',\n          message: '',\n          loading: false\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n    });\n  }\n}\n;\nexport function changePassword(email_, oldPassword, newPassword) {\n  this.setState({\n    loading: true\n  }, () => {\n    const email = email_;\n    const password = oldPassword;\n    firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\n      firebase.auth().currentUser.updatePassword(newPassword).then(() => {\n        this.setState({\n          loading: false,\n          toShow: 'default',\n          currentPassword: '',\n          newPassword: '',\n          confirmNewPassword: ''\n        });\n      }).catch(error => this.setState({\n        errorMessage: error.message,\n        loading: false,\n        newPassword: '',\n        confirmNewPassword: ''\n      }));\n    }).catch(error => this.setState({\n      errorMessage: error.message,\n      loading: false,\n      newPassword: '',\n      confirmNewPassword: ''\n    }));\n  });\n}\n;\nexport function deleteAccount(email, password) {\n  this.setState({\n    loading: true\n  }, () => {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\n      const user = firebase.auth().currentUser;\n      const userID = user.uid;\n      user.delete().then(() => {\n        firebase.database().ref(`users/${userID}`).remove().catch(error => {\n          console.log(error.message);\n        });\n        firebase.database().ref(`deletedAccountReasons`).update({\n          [userID]: {\n            reason: this.state.deleteAccountReason,\n            reviewed: false,\n            userDetails: this.state.userDetails\n          }\n        }).catch(error => {\n          console.log(error.message);\n        });\n      }).catch(error => this.setState({\n        errorMessage: error.message,\n        loading: false,\n        password1: ''\n      }));\n    }).catch(error => this.setState({\n      errorMessage: error.message,\n      loading: false,\n      password1: ''\n    }));\n  });\n}\n; //MAKE A RANDOMID\n\nexport function makeid(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return `${new Date().getTime()}${result}`;\n}\n;\nexport function getDate() {\n  const DAY = new Date().getDate();\n  const MONTH = new Date().getMonth();\n  const YEAR = new Date().getFullYear();\n  const HOUR = new Date().getHours();\n  const MIN = new Date().getMinutes();\n  const SECOND = new Date().getSeconds();\n  return `${YEAR}-${MONTH}-${DAY}-${HOUR}-${MIN}-${SECOND}`;\n}\n;\nexport function dateformat(time) {\n  let slash1 = 0,\n      slash2 = 0,\n      slash3 = 0;\n\n  for (let k = 0; k < time.length; k++) {\n    if (time.charAt(k) == '-') slash1 == 0 ? slash1 = k : slash2 == 0 ? slash2 = k : slash3 = k;\n    if (slash3 != 0) break;\n  }\n\n  ;\n  const y = time.substring(0, slash1);\n  const m = time.substring(slash1 + 1, slash2);\n  const d = time.substring(slash2 + 1, slash3);\n  return `${d}/${Number(m) + 1}/${y}`;\n}\n;\nexport function polylineLenght(data) {\n  let distance = 0;\n\n  for (let k = 0; k < data.length - 1; k++) distance += distanceCalculator(data[k][0], data[k][1], data[k + 1][0], data[k + 1][1]);\n\n  return distance;\n}\n;\nexport function distanceCalculator(lat1, lon1, lat2, lon2) {\n  let R = 6371 * 1000; // Radius of the earth in m\n\n  let dLat = deg2rad(lat2 - lat1); // deg2rad below\n\n  let dLon = deg2rad(lon2 - lon1);\n  let a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  let d = R * c; // Distance in m\n\n  return d;\n}\n;\n\nfunction deg2rad(deg) {\n  return deg * (Math.PI / 180);\n}\n\n;","map":{"version":3,"sources":["/Users/edokoh9/Documents/PerchWebsite/perch/functions/functions.js"],"names":["firebase","Router","axios","signIn","email","password","type","setState","error","errorMessage","loading","auth","setPersistence","Auth","Persistence","LOCAL","then","signInWithEmailAndPassword","userID","currentUser","uid","database","ref","once","snapshot","val","phoneVerified","push","window","scrollTo","displayVerification","catch","console","log","message","emailVerified","snap","signUp","firstName","lastName","phoneNumber","createUserWithEmailAndPassword","post","result","data","signOut","doNotReroute","sendFeedback","state","topic","userDetails","driverID","update","Date","getTime","body","subject","status","date","getDate","loadResult","makeid","userEmail","changePassword","email_","oldPassword","newPassword","updatePassword","toShow","currentPassword","confirmNewPassword","deleteAccount","user","delete","remove","reason","deleteAccountReason","reviewed","password1","length","characters","charactersLength","i","charAt","Math","floor","random","DAY","MONTH","getMonth","YEAR","getFullYear","HOUR","getHours","MIN","getMinutes","SECOND","getSeconds","dateformat","time","slash1","slash2","slash3","k","y","substring","m","d","Number","polylineLenght","distance","distanceCalculator","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","a","sin","cos","c","atan2","sqrt","deg","PI"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\nimport Router from 'next/router';\nimport axios from 'axios';\n\n\nexport function signIn(email, password, type) {\n    this.setState({ error: false, errorMessage: '', loading: true }, () => {\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n            firebase.auth().signInWithEmailAndPassword(email, password)\n                .then(() => {\n                    if (type == 'user') {\n                        const userID = firebase.auth().currentUser.uid;\n                        firebase.database().ref(`users/${userID}/summarizedHistory`).once('value', snapshot => {\n                            if (snapshot.val().phoneVerified == true)\n                                Router.push('/s/db/udash').then(() => window.scrollTo(0, 0));\n                            else\n                                this.setState({ displayVerification: true, loading: false });\n                        }).catch(error => { console.log(error.message) });\n\n                    }\n                    else if (type == 'driver') {\n                        const userID = firebase.auth().currentUser.uid;\n                        firebase.database().ref(`users/${userID}/summarizedHistory`).once('value', snapshot => {\n                            if (snapshot.val().phoneVerified == true && snapshot.val().emailVerified == true)\n                                firebase.database().ref(`users/${userID}/driverVerified`).once('value', snap => {\n                                    if (snap.val() == 'VERIFIED')\n                                        Router.push('/s/db/ddash').then(() => window.scrollTo(0, 0));\n                                    else\n                                        Router.push('/s/db/d_app_dash').then(() => window.scrollTo(0, 0));\n                                }).catch(error => { console.log(error.message) })\n                            else\n                                this.setState({ displayVerification: true, loading: false });\n                        }).catch(error => { console.log(error.message) });\n                    }\n                })\n                .catch(error => { this.setState({ error: true, errorMessage: error.message, loading: false }) });\n        }).catch(error => { this.setState({ error: true, errorMessage: error.message, loading: false }) });\n    })\n}\n\nexport function signUp(firstName, lastName, email, phoneNumber, password) {\n\n    this.setState({ error: false, errorMessage: '', loading: true }, () => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(() => {\n                const userID = firebase.auth().currentUser.uid;\n                axios.post('https://us-central1-perch-01.cloudfunctions.net/createUserDetails', { firstName: firstName, lastName: lastName, email: email, phoneNumber: phoneNumber, userID: userID })\n                    .then((result => {\n                        if (result.data == 'COMPLETE')\n                            this.setState({ displayVerification: true, loading: false });\n                    }))\n                    .catch(error => { this.setState({ errorMessage: error.message, loading: false }) });\n            }).catch(error => { this.setState({ error: true, errorMessage: error.message, loading: false }) });\n    })\n};\n\nexport function signOut(doNotReroute) {\n    firebase.auth().signOut()\n        .then(() => {\n            if (!doNotReroute)\n                Router.push('/');\n        })\n        .catch(error => { console.log(error.message) })\n}\n\nexport function sendFeedback() {\n    if (this.state.topic == 'unselected')\n        this.setState({ errorMessage: 'A topic is needed. Please pick a topic to contact us about. If you do not have one, please pick \"Other\"' })\n    else if (this.state.message == '')\n        this.setState({ errorMessage: 'Please enter a message' })\n    else {\n        this.setState({ loading: true }, () => {\n            if (this.state.userDetails) {\n                const ref = this.state.userDetails.driverID ? `driverFeedback/${this.state.userDetails.driverID}` : `userFeedback/${this.state.userDetails.userID}`;\n                firebase.database().ref(ref).update({\n                    [new Date().getTime()]: {\n                        body: this.state.message,\n                        subject: this.state.topic,\n                        status: 'UNPROCESSED',\n                        date: getDate(),\n                    }\n                }).then(() => {\n                    this.setState({ topic: 'unselected', message: '', loading: false }, () => { this.loadResult() })\n                }).catch(error => { console.log(error.message) });\n            }\n            else\n                firebase.database().ref(`userFeedbackEmail`).update({\n                    [makeid(5)]: {\n                        body: this.state.message,\n                        subject: this.state.topic,\n                        status: 'UNPROCESSED',\n                        date: getDate(),\n                        email: this.state.userEmail,\n                    }\n                }).then(() => {\n                    this.setState({ topic: 'unselected', message: '', loading: false })\n                }).catch(error => { console.log(error.message) });\n        })\n    }\n};\n\nexport function changePassword(email_, oldPassword, newPassword) {\n    this.setState({ loading: true }, () => {\n\n        const email = email_;\n        const password = oldPassword;\n\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(() => {\n                firebase.auth().currentUser.updatePassword(newPassword)\n                    .then(() => {\n                        this.setState({ loading: false, toShow: 'default', currentPassword: '', newPassword: '', confirmNewPassword: '' });\n                    })\n                    .catch(error => this.setState({ errorMessage: error.message, loading: false, newPassword: '', confirmNewPassword: '' }));\n            })\n            .catch(error => this.setState({ errorMessage: error.message, loading: false, newPassword: '', confirmNewPassword: '' }));\n    })\n};\n\n\nexport function deleteAccount(email, password) {\n    this.setState({ loading: true }, () => {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(() => {\n                const user = firebase.auth().currentUser;\n                const userID = user.uid;\n                user.delete()\n                    .then(() => {\n                        firebase.database().ref(`users/${userID}`).remove().catch(error => { console.log(error.message) });\n                        firebase.database().ref(`deletedAccountReasons`).update({\n                            [userID]: {\n                                reason: this.state.deleteAccountReason,\n                                reviewed: false,\n                                userDetails: this.state.userDetails,\n                            },\n                        }).catch(error => { console.log(error.message) })\n                    })\n                    .catch(error => this.setState({ errorMessage: error.message, loading: false, password1: '' }));\n            })\n            .catch(error => this.setState({ errorMessage: error.message, loading: false, password1: '' }));\n    })\n};\n\n//MAKE A RANDOMID\nexport function makeid(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return `${new Date().getTime()}${result}`;\n};\n\nexport function getDate() {\n    const DAY = new Date().getDate();\n    const MONTH = new Date().getMonth();\n    const YEAR = new Date().getFullYear();\n    const HOUR = new Date().getHours();\n    const MIN = new Date().getMinutes();\n    const SECOND = new Date().getSeconds();\n\n    return (`${YEAR}-${MONTH}-${DAY}-${HOUR}-${MIN}-${SECOND}`);\n};\n\nexport function dateformat(time) {\n    let slash1 = 0, slash2 = 0, slash3 = 0;\n    for (let k = 0; k < time.length; k++) {\n        if (time.charAt(k) == '-')\n            slash1 == 0 ? slash1 = k : slash2 == 0 ? slash2 = k : slash3 = k;\n\n        if (slash3 != 0)\n            break;\n    };\n\n    const y = time.substring(0, slash1);\n    const m = time.substring(slash1 + 1, slash2);\n    const d = time.substring(slash2 + 1, slash3);\n\n    return `${d}/${Number(m) + 1}/${y}`;\n};\n\nexport function polylineLenght(data) {\n    let distance = 0;\n    for (let k = 0; k < data.length - 1; k++)\n        distance += distanceCalculator(data[k][0], data[k][1], data[k + 1][0], data[k + 1][1])\n\n    return (distance)\n};\n\nexport function distanceCalculator(lat1, lon1, lat2, lon2) {\n    let R = 6371 * 1000; // Radius of the earth in m\n    let dLat = deg2rad(lat2 - lat1);  // deg2rad below\n    let dLon = deg2rad(lon2 - lon1);\n    let a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n        ;\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    let d = R * c; // Distance in m\n    return d;\n};\n\nfunction deg2rad(deg) {\n    return deg * (Math.PI / 180)\n};\n"]},"metadata":{},"sourceType":"module"}