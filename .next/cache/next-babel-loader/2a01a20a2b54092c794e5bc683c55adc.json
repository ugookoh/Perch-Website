{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport firebase from 'firebase';\nimport React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BiStopCircle } from 'react-icons/bi';\nimport { HiOutlineLocationMarker } from 'react-icons/hi';\nimport { VscCalendar } from 'react-icons/vsc';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { M, polylineLenght, timeAndDate, colors } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default class TripHistory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadResult\", () => {\n      if (this.state.userDetails) {\n        this.setState({\n          result: null\n        }, () => {\n          firebase.database().ref(`userHistory/${this.state.userDetails.userID}/carpool/${new Date(this.state.date).getFullYear()}/${M[new Date(this.state.date).getMonth()]}`).once('value', snapshot => {\n            this.setState({\n              result: snapshot.val() ? snapshot.val() : 'NORESULTS'\n            });\n          }).catch(error => {\n            console.log(error.message);\n          });\n        });\n      }\n    });\n\n    this.state = {\n      result: false,\n      date: new Date().getTime(),\n      userDetails: this.props.userDetails\n    };\n  }\n\n  componentDidMount() {\n    this.loadResult();\n  }\n\n  sorter(a, b) {\n    function numbergetter(time) {\n      let slash1 = 0,\n          slash2 = 0,\n          slash3 = 0;\n\n      for (let k = 0; k < time.length; k++) {\n        if (time.charAt(k) == '-') slash1 == 0 ? slash1 = k : slash2 == 0 ? slash2 = k : slash3 = k;\n      }\n\n      ;\n      const DAY = Number(time.substring(0, slash1)) * 86400;\n      const HOUR = Number(time.substring(slash1 + 1, slash2)) * 3600;\n      const MINS = Number(time.substring(slash2 + 1, slash3)) * 60;\n      const SECS = Number(time.substring(slash3 + 1, time.length));\n      return DAY + HOUR + MINS + SECS;\n    }\n\n    ;\n    let a_time = numbergetter(a);\n    let b_time = numbergetter(b);\n    if (a_time > b_time) return -1;else return 1;\n  }\n\n  render() {\n    if (!this.state.userDetails && this.props.userDetails) this.setState({\n      userDetails: this.props.userDetails\n    }, () => {\n      this.loadResult();\n    });\n    let trips = [];\n\n    if (this.state.result && this.state.result != 'NORESULTS') {\n      const keys = Object.keys(this.state.result).sort(this.sorter);\n\n      for (let i = 0; i < keys.length; i++) {\n        trips.push( /*#__PURE__*/_jsx(Trip, {\n          date: timeAndDate(keys[i], M[new Date(this.state.date).getMonth()], new Date(this.state.date).getFullYear()),\n          data: this.state.result[keys[i]],\n          lastItem: i == keys.length - 1,\n          type: \"Rider\"\n        }, keys[i]));\n      }\n    }\n\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.cont,\n        style: {\n          height: '100%',\n          paddingTop: '10px',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.tripPanelDesc,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.tripPanelCalenderCont,\n            style: {\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsx(VscCalendar, {\n              color: colors.GREEN,\n              size: '24px',\n              style: {\n                marginRight: '4px',\n                marginBottom: '3px'\n              }\n            }), /*#__PURE__*/_jsx(DatePicker, {\n              className: styles.calendarDate,\n              placeholderText: `${M[new Date(this.state.date).getMonth()].toUpperCase()} ${new Date(this.state.date).getFullYear()}`,\n              onChange: date => {\n                this.setState({\n                  date: date\n                }, () => {\n                  this.loadResult();\n                });\n              },\n              dateFormat: \"MM/yyyy\",\n              showMonthYearPicker: true\n            })]\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.contactUsLasttext,\n            id: styles.tripPanelAlignMiddle,\n            style: {\n              width: 'initial',\n              fontSize: '80%',\n              margin: '0px'\n            },\n            children: \"To see the details of a trip please use the mobile app\"\n          })]\n        }), this.state.result ? this.state.result == 'NORESULTS' ? /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.tripPanelLoading,\n          id: styles.tripPanelLoading_,\n          children: [/*#__PURE__*/_jsx(\"img\", {\n            src: \"/noResultsWoman.svg\",\n            className: styles.noResultsWoman,\n            alt: \"No Results\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.contactUsLasttext,\n            style: {\n              width: 'initial',\n              fontSize: '90%',\n              margin: '0px'\n            },\n            id: styles.tripPanelLoadingText,\n            children: \"Surprisingly, you haven't booked any rides during this time.\"\n          })]\n        }) : trips : /*#__PURE__*/_jsx(\"div\", {\n          className: styles.tripPanelLoading,\n          children: /*#__PURE__*/_jsx(Loader, {\n            type: \"TailSpin\",\n            color: colors.GREEN,\n            height: '100px',\n            width: '100px'\n          })\n        })]\n      })\n    });\n  }\n\n}\n;\n\nclass Trip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    if (this.props.type == 'Rider') {\n      let bar = /*#__PURE__*/_jsx(_Fragment, {});\n\n      const data = JSON.parse(this.props.data.data);\n      const cost = this.props.data.cost.total.toFixed(2);\n      let totalDistance = 0;\n\n      switch (this.props.data.driverDetails.steps) {\n        case 1:\n          {\n            totalDistance = data.firstDistance;\n            bar = /*#__PURE__*/_jsx(\"div\", {\n              className: styles.tripPanelNoOfTrips,\n              style: {\n                backgroundColor: colors.GREEN\n              }\n            });\n          }\n          break;\n\n        case 2:\n          {\n            totalDistance = data.firstDistance + data.secondDistance;\n            bar = /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.tripPanelNoOfTrips,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.tripPanelNoOfTrips,\n                style: {\n                  width: data.firstDistance / totalDistance * 100 + '%',\n                  backgroundColor: colors.GREEN,\n                  borderTopRightRadius: '0px',\n                  borderBottomRightRadius: '0px'\n                }\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.tripPanelNoOfTrips,\n                style: {\n                  width: data.secondDistance / totalDistance * 100 + '%',\n                  backgroundColor: colors.BLUE,\n                  borderTopLeftRadius: '0px',\n                  borderBottomLeftRadius: '0px'\n                }\n              })]\n            });\n          }\n          break;\n\n        case 3:\n          {\n            totalDistance = data.firstDistance + data.secondDistance + data.thirdDistance;\n            bar = /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.tripPanelNoOfTrips,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.tripPanelNoOfTrips,\n                style: {\n                  width: data.firstDistance / totalDistance * 100 + '%',\n                  backgroundColor: colors.GREEN,\n                  borderTopRightRadius: '0px',\n                  borderBottomRightRadius: '0px'\n                }\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.tripPanelNoOfTrips,\n                style: {\n                  width: data.secondDistance / totalDistance * 100 + '%',\n                  backgroundColor: colors.BLUE,\n                  borderRadius: '0px'\n                }\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.tripPanelNoOfTrips,\n                style: {\n                  width: data.thirdDistance / totalDistance * 100 + '%',\n                  backgroundColor: colors.PURPLE,\n                  borderTopLeftRadius: '0px',\n                  borderBottomLeftRadius: '0px'\n                }\n              })]\n            });\n          }\n          break;\n      }\n\n      ;\n      totalDistance > 100 ? totalDistance = `${(totalDistance / 1000).toFixed(1)} kilometers` : totalDistance = `${totalDistance.toFixed(totalDistance != 0 ? 1 : 0)} meters`;\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          id: styles.tripPanelCont,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            style: {\n              width: '95%',\n              margin: '0px'\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.tripPanelTitle,\n              children: `${this.props.data.driverDetails.steps}-leg trip`\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.tripPanelTime,\n              children: this.props.date\n            })]\n          }), bar, /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            style: {\n              width: '95%',\n              justifyContent: 'initial',\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsx(HiOutlineLocationMarker, {\n              color: colors.GREEN,\n              style: {\n                margin: '0px',\n                marginRight: '10px'\n              },\n              className: styles.driverHistory_ICON\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.tripPanelTime,\n              style: {\n                margin: '0px'\n              },\n              children: this.props.data.location.description\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            style: {\n              width: '95%',\n              justifyContent: 'initial',\n              marginTop: '10px'\n            },\n            children: [/*#__PURE__*/_jsx(BiStopCircle, {\n              color: colors.GREEN,\n              style: {\n                marginRight: '10px'\n              },\n              className: styles.driverHistory_ICON\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.tripPanelTime,\n              style: {\n                margin: '0px'\n              },\n              children: this.props.data.destination.description\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.tripPanelNoOfTrips,\n            style: {\n              backgroundColor: colors.GREY,\n              height: '1px',\n              marginTop: '17px'\n            }\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            style: {\n              width: '95%',\n              marginTop: '10px',\n              marginBottom: '15px'\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.tripPanelTitle,\n              style: {\n                fontFamily: 'Gilroy-Medium',\n                margin: '0px'\n              },\n              children: totalDistance\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.tripPanelCash,\n              children: `$ ${cost}`\n            })]\n          })]\n        }), this.props.lastItem ?\n        /*#__PURE__*/\n        //just for padding at the bottom\n        _jsx(\"div\", {\n          style: {\n            height: '150px',\n            width: '100%',\n            backgroundColor: 'transparent'\n          }\n        }) : /*#__PURE__*/_jsx(_Fragment, {})]\n      });\n    } else if (this.props.type == 'Driver') {\n      const data = this.props.data;\n      let passNo = 0,\n          distance = 0,\n          total = '$ 0.00';\n\n      if (data.trips) {\n        for (let key in data.trips) {\n          passNo += data.trips[key].details.tripDetails.seatNumber;\n          distance += polylineLenght(JSON.parse(data.trips[key].details.tripDetails.leg)) * data.trips[key].details.tripDetails.seatNumber; //seat no * distance\n        }\n\n        ;\n      }\n\n      ; //distance = distance * passNo;\n\n      distance > 100 ? distance = `${(distance / 1000).toFixed(1)} KM` : distance = `${distance.toFixed(distance != 0 ? 1 : 0)} M`;\n      distance = distance.toLowerCase();\n      passNo = `${passNo} ${passNo == 1 ? 'person' : 'people'}`;\n      total = '$ 213.00';\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          id: styles.tripPanelCont,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            style: {\n              width: '95%',\n              margin: '0px'\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.tripPanelTitle,\n              children: passNo\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.tripPanelTime,\n              children: this.props.date\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.tripPanelNoOfTrips,\n            style: {\n              backgroundColor: colors.BLUE,\n              height: '10px'\n            }\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            style: {\n              width: '95%',\n              justifyContent: 'initial',\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsx(HiOutlineLocationMarker, {\n              color: colors.BLUE,\n              style: {\n                margin: '0px',\n                marginRight: '10px'\n              },\n              className: styles.driverHistory_ICON\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.tripPanelTime,\n              style: {\n                margin: '0px'\n              },\n              children: data.locationAddress\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            style: {\n              width: '95%',\n              justifyContent: 'initial',\n              marginTop: '10px'\n            },\n            children: [/*#__PURE__*/_jsx(BiStopCircle, {\n              color: colors.BLUE,\n              style: {\n                marginRight: '10px'\n              },\n              className: styles.driverHistory_ICON\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.tripPanelTime,\n              style: {\n                margin: '0px'\n              },\n              children: data.destinationAddress\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.tripPanelNoOfTrips,\n            style: {\n              backgroundColor: colors.GREY,\n              height: '1px',\n              marginTop: '17px'\n            }\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            style: {\n              width: '95%',\n              marginTop: '10px',\n              marginBottom: '15px'\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.tripPanelTitle,\n              style: {\n                fontFamily: 'Gilroy-Medium',\n                margin: '0px'\n              },\n              children: distance\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.tripPanelCash,\n              style: {\n                color: colors.BLUE\n              },\n              children: total\n            })]\n          })]\n        }), this.props.lastItem ?\n        /*#__PURE__*/\n        //just for padding at the bottom\n        _jsx(\"div\", {\n          style: {\n            height: '150px',\n            width: '100%',\n            backgroundColor: 'transparent'\n          }\n        }) : /*#__PURE__*/_jsx(_Fragment, {})]\n      });\n    }\n  }\n\n}\n\n;","map":{"version":3,"sources":["/Users/ugo/Documents/Perch_Projects/Perch-Website/functions/panels/userPanels/tripHistory.js"],"names":["firebase","React","DatePicker","BiStopCircle","HiOutlineLocationMarker","VscCalendar","Loader","M","polylineLenght","timeAndDate","colors","styles","TripHistory","Component","constructor","props","state","userDetails","setState","result","database","ref","userID","Date","date","getFullYear","getMonth","once","snapshot","val","catch","error","console","log","message","getTime","componentDidMount","loadResult","sorter","a","b","numbergetter","time","slash1","slash2","slash3","k","length","charAt","DAY","Number","substring","HOUR","MINS","SECS","a_time","b_time","render","trips","keys","Object","sort","i","push","cont","height","paddingTop","position","tripPanelDesc","tripPanelCalenderCont","marginRight","GREEN","marginBottom","calendarDate","toUpperCase","contactUsLasttext","tripPanelAlignMiddle","width","fontSize","margin","tripPanelLoading","tripPanelLoading_","noResultsWoman","tripPanelLoadingText","Trip","type","bar","data","JSON","parse","cost","total","toFixed","totalDistance","driverDetails","steps","firstDistance","tripPanelNoOfTrips","backgroundColor","secondDistance","borderTopRightRadius","borderBottomRightRadius","BLUE","borderTopLeftRadius","borderBottomLeftRadius","thirdDistance","borderRadius","PURPLE","tripPanelCont","enterKilometerDiv","tripPanelTitle","tripPanelTime","justifyContent","marginTop","driverHistory_ICON","location","description","destination","GREY","fontFamily","tripPanelCash","lastItem","passNo","distance","key","details","tripDetails","seatNumber","leg","toLowerCase","locationAddress","destinationAddress","color"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\nimport React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BiStopCircle } from 'react-icons/bi';\nimport { HiOutlineLocationMarker } from 'react-icons/hi';\nimport { VscCalendar } from 'react-icons/vsc';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport {\n    M, polylineLenght,\n    timeAndDate, colors\n} from '../../functions';\nimport styles from '../panel_layout.module.css';\n\n\nexport default class TripHistory extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            result: false,\n            date: new Date().getTime(),\n            userDetails: this.props.userDetails,\n        };\n    };\n\n    componentDidMount() {\n        this.loadResult();\n    }\n\n    loadResult = () => {\n        if (this.state.userDetails) {\n            this.setState({ result: null }, () => {\n                firebase.database().ref(`userHistory/${this.state.userDetails.userID}/carpool/${new Date(this.state.date).getFullYear()}/${M[new Date(this.state.date).getMonth()]}`).once('value', snapshot => {\n                    this.setState({ result: snapshot.val() ? snapshot.val() : 'NORESULTS' });\n                }).catch(error => { console.log(error.message) });\n            });\n        }\n    };\n    sorter(a, b) {\n        function numbergetter(time) {\n            let slash1 = 0, slash2 = 0, slash3 = 0;\n            for (let k = 0; k < time.length; k++) {\n                if (time.charAt(k) == '-')\n                    slash1 == 0 ? slash1 = k : slash2 == 0 ? slash2 = k : slash3 = k;\n            };\n\n            const DAY = Number(time.substring(0, slash1)) * 86400;\n            const HOUR = Number(time.substring(slash1 + 1, slash2)) * 3600;\n            const MINS = Number(time.substring(slash2 + 1, slash3)) * 60;\n            const SECS = Number(time.substring(slash3 + 1, time.length));\n\n            return (DAY + HOUR + MINS + SECS)\n        };\n\n        let a_time = numbergetter(a)\n        let b_time = numbergetter(b)\n\n        if (a_time > b_time)\n            return -1;\n        else\n            return 1\n    };\n    render() {\n        if (!this.state.userDetails && this.props.userDetails)\n            this.setState({ userDetails: this.props.userDetails }, () => { this.loadResult(); });\n\n        let trips = [];\n\n        if (this.state.result && this.state.result != 'NORESULTS') {\n            const keys = Object.keys(this.state.result).sort(this.sorter);\n            for (let i = 0; i < keys.length; i++) {\n                trips.push(\n                    <Trip\n                        key={keys[i]}\n                        date={timeAndDate(keys[i], M[new Date(this.state.date).getMonth()], new Date(this.state.date).getFullYear())}\n                        data={this.state.result[keys[i]]}\n                        lastItem={i == keys.length - 1}\n                        type='Rider'\n                    />\n                );\n            }\n        }\n        return (\n            <>\n                <div className={styles.cont} style={{ height: '100%', paddingTop: '10px', position: 'relative' }}>\n\n                    <div className={styles.tripPanelDesc} >\n                        <div className={styles.tripPanelCalenderCont} style={{ marginRight: '10px' }}>\n                            <VscCalendar color={colors.GREEN} size={'24px'} style={{ marginRight: '4px', marginBottom: '3px' }} />\n                            <DatePicker\n                                className={styles.calendarDate}\n                                placeholderText={`${M[new Date(this.state.date).getMonth()].toUpperCase()} ${new Date(this.state.date).getFullYear()}`}\n                                onChange={date => { this.setState({ date: date }, () => { this.loadResult() }); }}\n                                dateFormat=\"MM/yyyy\"\n                                showMonthYearPicker\n                            />\n                        </div>\n                        <p className={styles.contactUsLasttext} id={styles.tripPanelAlignMiddle} style={{ width: 'initial', fontSize: '80%', margin: '0px' }}>\n                            To see the details of a trip please use the mobile app\n                        </p>\n                    </div>\n                    {this.state.result ?\n                        this.state.result == 'NORESULTS' ?\n                            <div className={styles.tripPanelLoading} id={styles.tripPanelLoading_}>\n                                <img src=\"/noResultsWoman.svg\" className={styles.noResultsWoman} alt=\"No Results\" />\n                                <p className={styles.contactUsLasttext} style={{ width: 'initial', fontSize: '90%', margin: '0px' }} id={styles.tripPanelLoadingText}>\n                                    Surprisingly, you haven't booked any rides during this time.\n                                </p>\n                            </div> :\n                            trips :\n                        <div className={styles.tripPanelLoading}>\n                            <Loader\n                                type=\"TailSpin\"\n                                color={colors.GREEN}\n                                height={'100px'}\n                                width={'100px'}\n                            />\n                        </div>}\n                </div>\n            </>\n        );\n    }\n};\n\nclass Trip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        };\n\n    }\n    render() {\n        if (this.props.type == 'Rider') {\n            let bar = <></>;\n            const data = JSON.parse(this.props.data.data);\n            const cost = (this.props.data.cost.total).toFixed(2);\n            let totalDistance = 0;\n            switch (this.props.data.driverDetails.steps) {\n                case 1: {\n                    totalDistance = data.firstDistance;\n                    bar = <div className={styles.tripPanelNoOfTrips} style={{ backgroundColor: colors.GREEN }} >\n                    </div>;\n                } break;\n                case 2: {\n                    totalDistance = data.firstDistance + data.secondDistance;\n                    bar = <div className={styles.tripPanelNoOfTrips}>\n                        <div className={styles.tripPanelNoOfTrips} style={{ width: ((data.firstDistance / totalDistance) * 100) + '%', backgroundColor: colors.GREEN, borderTopRightRadius: '0px', borderBottomRightRadius: '0px' }} >\n                        </div>\n                        <div className={styles.tripPanelNoOfTrips} style={{ width: ((data.secondDistance / totalDistance) * 100) + '%', backgroundColor: colors.BLUE, borderTopLeftRadius: '0px', borderBottomLeftRadius: '0px' }} >\n                        </div>\n                    </div>\n                } break;\n                case 3: {\n                    totalDistance = data.firstDistance + data.secondDistance + data.thirdDistance;\n                    bar = <div className={styles.tripPanelNoOfTrips}>\n                        <div className={styles.tripPanelNoOfTrips} style={{ width: ((data.firstDistance / totalDistance) * 100) + '%', backgroundColor: colors.GREEN, borderTopRightRadius: '0px', borderBottomRightRadius: '0px' }} >\n                        </div>\n                        <div className={styles.tripPanelNoOfTrips} style={{ width: ((data.secondDistance / totalDistance) * 100) + '%', backgroundColor: colors.BLUE, borderRadius: '0px' }} >\n                        </div>\n                        <div className={styles.tripPanelNoOfTrips} style={{ width: ((data.thirdDistance / totalDistance) * 100) + '%', backgroundColor: colors.PURPLE, borderTopLeftRadius: '0px', borderBottomLeftRadius: '0px' }} >\n                        </div>\n\n                    </div>\n                } break;\n            };\n            totalDistance > 100 ?\n                totalDistance = `${(totalDistance / 1000).toFixed(1)} kilometers` :\n                totalDistance = `${(totalDistance).toFixed(totalDistance != 0 ? 1 : 0)} meters`;\n            return (\n                <>\n                    <div id={styles.tripPanelCont} >\n                        <div className={styles.enterKilometerDiv} style={{ width: '95%', margin: '0px' }}>\n                            <p className={styles.tripPanelTitle}>{`${this.props.data.driverDetails.steps}-leg trip`}</p>\n                            <p className={styles.tripPanelTime}>{this.props.date}</p>\n                        </div>\n\n                        {bar}\n                        <div className={styles.enterKilometerDiv} style={{ width: '95%', justifyContent: 'initial', marginTop: '20px' }}>\n                            <HiOutlineLocationMarker color={colors.GREEN} style={{ margin: '0px', marginRight: '10px' }} className={styles.driverHistory_ICON} />\n                            <p className={styles.tripPanelTime} style={{ margin: '0px' }}>{this.props.data.location.description}</p>\n                        </div>\n                        <div className={styles.enterKilometerDiv} style={{ width: '95%', justifyContent: 'initial', marginTop: '10px' }}>\n                            <BiStopCircle color={colors.GREEN} style={{ marginRight: '10px' }} className={styles.driverHistory_ICON} />\n                            <p className={styles.tripPanelTime} style={{ margin: '0px' }}>{this.props.data.destination.description}</p>\n                        </div>\n                        <div className={styles.tripPanelNoOfTrips} style={{ backgroundColor: colors.GREY, height: '1px', marginTop: '17px' }} >\n                        </div>\n                        <div className={styles.enterKilometerDiv} style={{ width: '95%', marginTop: '10px', marginBottom: '15px' }}>\n                            <p className={styles.tripPanelTitle} style={{ fontFamily: 'Gilroy-Medium', margin: '0px' }}>{totalDistance}</p>\n                            <p className={styles.tripPanelCash} >{`$ ${cost}`}</p>\n                        </div>\n                    </div>\n                    {\n                        this.props.lastItem ?//just for padding at the bottom\n                            <div style={{ height: '150px', width: '100%', backgroundColor: 'transparent' }}></div>\n                            : <></>\n                    }\n                </>\n            );\n        }\n        else if (this.props.type == 'Driver') {\n            const data = this.props.data;\n            let passNo = 0, distance = 0, total = '$ 0.00';\n            if (data.trips) {\n                for (let key in data.trips) {\n                    passNo += data.trips[key].details.tripDetails.seatNumber;\n                    distance += (polylineLenght(JSON.parse(data.trips[key].details.tripDetails.leg)) * data.trips[key].details.tripDetails.seatNumber);//seat no * distance\n                };\n            };\n            //distance = distance * passNo;\n            distance > 100 ?\n                distance = `${(distance / 1000).toFixed(1)} KM` :\n                distance = `${(distance).toFixed(distance != 0 ? 1 : 0)} M`;\n\n            distance = distance.toLowerCase();\n            passNo = `${passNo} ${passNo == 1 ? 'person' : 'people'}`;\n            total = '$ 213.00';\n\n\n            return (\n                <>\n                    <div id={styles.tripPanelCont} >\n                        <div className={styles.enterKilometerDiv} style={{ width: '95%', margin: '0px' }}>\n                            <p className={styles.tripPanelTitle}>{passNo}</p>\n                            <p className={styles.tripPanelTime}>{this.props.date}</p>\n                        </div>\n\n                        <div className={styles.tripPanelNoOfTrips} style={{ backgroundColor: colors.BLUE, height: '10px', }} >\n                        </div>\n                        <div className={styles.enterKilometerDiv} style={{ width: '95%', justifyContent: 'initial', marginTop: '20px' }}>\n                            <HiOutlineLocationMarker color={colors.BLUE} style={{ margin: '0px', marginRight: '10px' }} className={styles.driverHistory_ICON} />\n                            <p className={styles.tripPanelTime} style={{ margin: '0px' }}>{data.locationAddress}</p>\n                        </div>\n                        <div className={styles.enterKilometerDiv} style={{ width: '95%', justifyContent: 'initial', marginTop: '10px' }}>\n                            <BiStopCircle color={colors.BLUE} style={{ marginRight: '10px' }} className={styles.driverHistory_ICON} />\n                            <p className={styles.tripPanelTime} style={{ margin: '0px' }}>{data.destinationAddress}</p>\n                        </div>\n                        <div className={styles.tripPanelNoOfTrips} style={{ backgroundColor: colors.GREY, height: '1px', marginTop: '17px' }} >\n                        </div>\n                        <div className={styles.enterKilometerDiv} style={{ width: '95%', marginTop: '10px', marginBottom: '15px' }}>\n                            <p className={styles.tripPanelTitle} style={{ fontFamily: 'Gilroy-Medium', margin: '0px' }}>{distance}</p>\n                            <p className={styles.tripPanelCash} style={{ color: colors.BLUE }} >{total}</p>\n                        </div>\n                    </div>\n                    {\n                        this.props.lastItem ?//just for padding at the bottom\n                            <div style={{ height: '150px', width: '100%', backgroundColor: 'transparent' }}></div>\n                            : <></>\n                    }\n                </>\n            );\n        }\n    }\n};"]},"metadata":{},"sourceType":"module"}