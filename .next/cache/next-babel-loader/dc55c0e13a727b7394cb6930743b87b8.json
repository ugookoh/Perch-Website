{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport styles from '../panel_layout.module.css';\nimport { colors } from '../../functions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar UploadDocuments = /*#__PURE__*/function (_React$Component) {\n  _inherits(UploadDocuments, _React$Component);\n\n  var _super = _createSuper(UploadDocuments);\n\n  function UploadDocuments(props) {\n    var _this;\n\n    _classCallCheck(this, UploadDocuments);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"submitDoc\", function () {\n      //make position for other arrays item\n      var userID = _this.state.userID;\n      var vehicleRandomID = _this.state.vehicleRandomID;\n      var docID = _this.state.docID[_this.state.selectedIndex];\n      var toPut = '';\n      if (docID == 'vehicleInsurance' || docID == 'vehicleRegistration' || docID == 'vehicleInspection' || docID == 'vehicleImage') toPut = \"driverVehicleDocs/\".concat(userID, \"/\").concat(vehicleRandomID, \"/\").concat(docID);else if (docID == 'driversLicence' || docID == 'proofOfWorkEligibility' || docID == 'profilePicture' || docID == 'epsBackgroundCheck') toPut = \"driverVehicleDocs/\".concat(userID, \"/driverDetails/\").concat(docID); //WHERE THE RIVER DETAILS ARE WLONG WITH THE PROFILE PHOTO\n\n      firebase.storage().ref(toPut).put(_this.state.s[_this.state.selectedIndex]).then(function () {\n        firebase.database().ref(\"driverApplications/\".concat(userID)).update({\n          documentsSubmitted: JSON.stringify(_this.state.docNames)\n        }).then(function () {\n          _this.setState({\n            loading: false\n          });\n        })[\"catch\"](function (error) {\n          console.log(error.message);\n\n          _this.setState({\n            loading: false\n          });\n        });\n      })[\"catch\"](function (error) {\n        console.log(error.message);\n\n        _this.setState({\n          loading: false\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"storeVehicleDetails\", function () {\n      var userID = _this.state.userID;\n      var dateFormat = _this.state.dateFormat;\n\n      _this.setState({\n        saveLoading: true\n      }, function () {\n        var _firebase$database$re;\n\n        firebase.database().ref(\"vehicles/\".concat(userID)).update((_firebase$database$re = {}, _defineProperty(_firebase$database$re, dateFormat, {\n          color: _this.state.vehicleColor,\n          displayImage: \"driverVehicleDocs/\".concat(userID, \"/\").concat(_this.state.vehicleRandomID, \"/vehicleImage\"),\n          make: _this.state.vehicleMake,\n          model: _this.state.vehicleModel,\n          plateNumber: _this.state.plateNumber,\n          verifyStatus: 'UNVERIFIED',\n          year: _this.state.vehicleYear\n        }), _defineProperty(_firebase$database$re, \"selected\", dateFormat), _firebase$database$re)).then(function () {\n          _this.setState({\n            saveLoading: false\n          });\n        })[\"catch\"](function (error) {\n          _this.setState({\n            error: error.message\n          });\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"nextStage\", function () {\n      firebase.database().ref(\"driverApplications/\".concat(_this.state.userID)).update({\n        stage: 'three',\n        progress: JSON.stringify(['done', 'done', 'ongoing', 'undone', 'undone'])\n      }).then(function () {\n        firebase.database().ref(\"completedDriverApplications\").update(_defineProperty({}, _this.state.userID, 'UNPROCESSED'))[\"catch\"](function (error) {\n          console.log(error.message);\n        });\n      }).then(function () {\n        _this.props.nextStage('three');\n      })[\"catch\"](function (error) {\n        console.log(error.message);\n      });\n    });\n\n    _this.state = {\n      uploadDocs: false,\n      userID: _this.props.userID,\n      vehicleRandomID: '',\n      dateFormat: '',\n      s: [//ORDER IS IMPORTANT FOR SERVER\n      false, // \"Driver's licence\",\n      false, // \"Proof of work eligibility\",\n      false, // \"EPS background check\",\n      false, // \"Vehicle insurance\",\n      false, // \"Vehicle registration\",\n      false, // \"Vehicle inspection\",\n      false, // \"Photo of Vehicle (Must be 4:3)\"\n      false // \"Profile Photo (Must be 1:1)\"\n      ],\n      docList: [\"Driver's licence\", \"Proof of work eligibility\", \"EPS background check\", \"Vehicle insurance\", \"Vehicle registration\", \"Vehicle inspection\", \"Photo of Vehicle (Must be 4:3)\", \"Profile Photo (Must be 1:1)\"],\n      docID: [\"driversLicence\", \"proofOfWorkEligibility\", \"epsBackgroundCheck\", \"vehicleInsurance\", \"vehicleRegistration\", \"vehicleInspection\", \"vehicleImage\", \"profilePicture\"],\n      docNames: [false, // \"Driver's licence\",\n      false, // \"Proof of work eligibility\",\n      false, // \"EPS background check\",\n      false, // \"Vehicle insurance\",\n      false, // \"Vehicle registration\",\n      false, // \"Vehicle inspection\",\n      false, // \"Photo of Vehicle (Must be 4:3)\"\n      false // \"Profile Photo (Must be 1:1)\"\n      ],\n      vehicleMake: '',\n      vehicleModel: '',\n      vehicleYear: '',\n      vehicleColor: '',\n      plateNumber: '',\n      selectedIndex: 0,\n      loading: false,\n      saveLoading: false,\n      errorMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(UploadDocuments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.database().ref(\"driverApplications/\".concat(this.state.userID)).once('value', function (snapshot) {\n        if (snapshot.val().documentsSubmitted) {\n          _this2.setState({\n            s: JSON.parse(snapshot.val().documentsSubmitted),\n            docNames: JSON.parse(snapshot.val().documentsSubmitted)\n          });\n        }\n\n        ;\n        firebase.database().ref(\"vehicles/\".concat(_this2.state.userID, \"/\").concat(snapshot.val().dateFormat)).once('value', function (snap) {\n          if (snap.val()) {\n            var _snap$val = snap.val(),\n                make = _snap$val.make,\n                model = _snap$val.model,\n                plateNumber = _snap$val.plateNumber,\n                year = _snap$val.year,\n                color = _snap$val.color;\n\n            _this2.setState({\n              vehicleMake: make,\n              vehicleModel: model,\n              vehicleYear: year,\n              vehicleColor: color,\n              plateNumber: plateNumber\n            });\n          }\n        });\n\n        _this2.setState({\n          vehicleRandomID: snapshot.val().vehicleRandomID,\n          dateFormat: snapshot.val().dateFormat\n        });\n      })[\"catch\"](function (error) {\n        console.log(error.message);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var requirements = [];\n\n      var _loop = function _loop(i) {\n        requirements.push( /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.driverFAQ_PICDESC,\n          id: styles.driver_APP_TOP_RADIO_CONT_,\n          onClick: function onClick() {\n            _this3.setState({\n              uploadDocs: true,\n              selectedIndex: i,\n              errorMessage: ''\n            });\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: GREY,\n              width: 'initial',\n              margin: '0px',\n              marginLeft: '10px'\n            },\n            children: _this3.state.docList[i]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.driver_APP_RADIO,\n            style: {\n              backgroundColor: _this3.state.s[i] ? colors.GREEN : \"rgba(78, 184, 72,0.5)\"\n            },\n            children: _this3.state.s[i] ? /*#__PURE__*/_jsx(AiOutlineCheck, {\n              color: colors.WHITE,\n              size: '15px'\n            }) : /*#__PURE__*/_jsx(_Fragment, {})\n          })]\n        }));\n      };\n\n      for (var i = 0; i < this.state.docList.length; i++) {\n        _loop(i);\n      }\n\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.cont,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: colors.WHITE,\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.driver_APP_TOPCONT,\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.driver_APP_TOP_TEXT,\n              style: {\n                color: colors.WHITE\n              },\n              children: \"Vehicle Confirmation\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.driver_APP_TOP_TEXT,\n              style: {\n                color: colors.WHITE\n              },\n              children: \"Upload Documents\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.driver_APP_TOP_TEXT,\n              children: \"Application Status\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.driver_APP_TOP_TEXT_NUMB,\n              style: {\n                color: colors.WHITE\n              },\n              children: \"1\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.driver_APP_TOP_TEXT_NUMB,\n              style: {\n                color: colors.WHITE\n              },\n              children: \"2\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.driver_APP_TOP_TEXT_NUMB,\n              children: \"3\"\n            }), /*#__PURE__*/_jsx(\"img\", {\n              src: \"/applicationDashArrow_.svg\",\n              className: styles.applicationDashArrow,\n              style: {\n                width: '69%'\n              }\n            })]\n          }), this.state.uploadDocs ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: BLACK\n              },\n              children: \"Upload your \".concat(this.state.docList[this.state.selectedIndex])\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              className: styles.text,\n              style: {\n                color: GREY\n              },\n              children: [\"Documents should be submitted as a scanned pdf or a photograph of the document.\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"a\", {\n                href: \"/s/articles/procedures_for_taking_a_picture\",\n                style: {\n                  fontFamily: 'Gilroy-Semibold'\n                },\n                children: \"See details for taking vehicle and profile photo's here\"\n              }), /*#__PURE__*/_jsx(\"br\", {}), \"Pictures should be :\", /*#__PURE__*/_jsx(\"br\", {}), \"\\u2022 Taken in a well place \", /*#__PURE__*/_jsx(\"br\", {}), \"\\u2022 Show details clearly\"]\n            }), this.state.s[this.state.selectedIndex] ? /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.uploadDocumentIconCont,\n              onClick: function onClick() {\n                _this3.document.click();\n              },\n              style: {\n                flexDirection: 'column'\n              },\n              children: [/*#__PURE__*/_jsx(\"img\", {\n                src: \"/documentsSubmitted.svg\",\n                className: styles.uploadDocumentPIC,\n                style: {\n                  height: '70%',\n                  marginTop: '10px'\n                }\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.text,\n                style: {\n                  width: 'initial',\n                  fontFamily: 'Gilroy-Semibold',\n                  fontSize: '95%',\n                  color: GREY,\n                  maxWidth: '90%'\n                },\n                children: this.state.s[this.state.selectedIndex].name\n              })]\n            }) : /*#__PURE__*/_jsx(\"div\", {\n              className: styles.uploadDocumentIconCont,\n              onClick: function onClick() {\n                _this3.document.click();\n              },\n              children: /*#__PURE__*/_jsx(\"img\", {\n                src: \"/uploadDocumentIcon.svg\",\n                className: styles.uploadDocumentPIC\n              })\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.em,\n              style: {\n                textAlign: 'initial'\n              },\n              children: this.state.errorMessage\n            })]\n          }) : /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: BLACK\n              },\n              children: \"Upload Documents\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.text,\n              style: {\n                color: GREY\n              },\n              children: \"All that is left to do is to submit the required documents and you\\u2019re on your way to becoming a Perch driver.\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: GREY,\n                fontSize: '95%',\n                marginTop: '20px'\n              },\n              children: \"Required Documents\"\n            }), requirements, /*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: GREY,\n                fontSize: '95%',\n                marginTop: '20px'\n              },\n              children: \"Vehicle details\"\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.driverApplicationTextinput_OUTER,\n              children: [/*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter vehicle make\",\n                className: styles.driverApplicationTextinput_CONT //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n                ,\n                value: this.state.vehicleMake,\n                onChange: function onChange(event) {\n                  _this3.setState({\n                    vehicleMake: event.target.value\n                  });\n                }\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter vehicle model\",\n                className: styles.driverApplicationTextinput_CONT //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n                ,\n                value: this.state.vehicleModel,\n                onChange: function onChange(event) {\n                  _this3.setState({\n                    vehicleModel: event.target.value\n                  });\n                }\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.driverApplicationTextinput_OUTER,\n              children: [/*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter vehicle color\",\n                className: styles.driverApplicationTextinput_CONT //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n                ,\n                value: this.state.vehicleColor,\n                onChange: function onChange(event) {\n                  _this3.setState({\n                    vehicleColor: event.target.value\n                  });\n                }\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter vehicle year (XXXX)\",\n                className: styles.driverApplicationTextinput_CONT //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n                ,\n                value: this.state.vehicleYear,\n                onChange: function onChange(event) {\n                  _this3.setState({\n                    vehicleYear: event.target.value\n                  });\n                }\n              })]\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter plate number\",\n              className: styles.driverApplicationTextinput_CONT,\n              style: {\n                fontFamily: 'Gilroy-Bold',\n                color: colors.GREEN,\n                width: '90%'\n              },\n              value: this.state.plateNumber,\n              onChange: function onChange(event) {\n                _this3.setState({\n                  plateNumber: event.target.value\n                });\n              }\n            }), /*#__PURE__*/_jsx(\"a\", {\n              className: styles.button1,\n              id: styles.sendMessageContactUS,\n              style: {\n                width: '90%',\n                marginTop: '20px',\n                maxWidth: 'initial'\n              },\n              onClick: function onClick() {\n                _this3.storeVehicleDetails();\n              },\n              children: this.state.saveLoading ? /*#__PURE__*/_jsx(Loader, {\n                type: \"TailSpin\",\n                color: colors.WHITE,\n                height: '20px',\n                width: '20px'\n              }) : /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: \"Save Vehicle details\"\n              })\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.em,\n              style: {\n                textAlign: 'initial'\n              },\n              children: this.state.errorMessage\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"file\",\n          ref: function ref(_ref) {\n            return _this3.document = _ref;\n          },\n          accept: \".jpg,.jpeg,.png,.pdf\",\n          className: styles.driverVehicle_INPUT,\n          onChange: function onChange(event) {\n            if (event.target.files.length != 0) {\n              var files = _this3.state.s;\n              var docNames = _this3.state.docNames;\n              var filesize = (event.target.files[0].size / 1024 / 1024).toFixed(4); // MB\n\n              if (filesize > 15) _this3.setState({\n                errorMessage: 'File is too large. A maximum of 15 megabytes is permitted for uploads'\n              });else {\n                files[_this3.state.selectedIndex] = event.target.files[0];\n                docNames[_this3.state.selectedIndex] = {\n                  name: event.target.files[0].name\n                };\n\n                _this3.setState({\n                  s: files,\n                  docNames: docNames,\n                  loading: true\n                }, function () {\n                  _this3.submitDoc();\n                });\n              }\n            }\n          }\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.contactUsLC,\n          style: {\n            marginTop: '15px',\n            marginBottom: '150px'\n          },\n          children: [this.state.uploadDocs ? /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.driverFAQ_PICDESC,\n            style: {\n              width: '100%',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsx(\"a\", {\n              className: styles.button1,\n              id: styles.sendMessageContactUS,\n              onClick: function onClick() {\n                if (!_this3.state.loading) _this3.setState({\n                  uploadDocs: false,\n                  errorMessage: ''\n                });\n              },\n              style: {\n                backgroundColor: RED,\n                width: '48%'\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: \"Cancel\"\n              })\n            }), /*#__PURE__*/_jsx(\"a\", {\n              className: styles.button1,\n              id: styles.sendMessageContactUS,\n              style: {\n                width: '48%'\n              },\n              onClick: function onClick() {\n                if (!_this3.state.loading) {\n                  if (_this3.state.s[_this3.state.selectedIndex]) _this3.setState({\n                    uploadDocs: false,\n                    errorMessage: ''\n                  });else _this3.document.click();\n                }\n              },\n              children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n                type: \"TailSpin\",\n                color: colors.WHITE,\n                height: '20px',\n                width: '20px'\n              }) : /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: this.state.s[this.state.selectedIndex] ? 'Done' : 'Upload'\n              })\n            })]\n          }) : /*#__PURE__*/_jsx(\"a\", {\n            className: styles.button1,\n            id: styles.sendMessageContactUS,\n            onClick: function onClick() {\n              if (_this3.state.docNames.includes(false)) _this3.setState({\n                errorMessage: 'Please upload all the required documents'\n              });else if (_this3.state.vehicleYear.length <= 3 || _this3.state.vehicleColor.length <= 2 || _this3.state.vehicleModel.length <= 3 || _this3.state.vehicleMake.length <= 3 || _this3.state.plateNumber.length <= 3) _this3.setState({\n                errorMessage: 'Please fill the vehicle details completely and correctly.'\n              });else _this3.setState({\n                loading: true\n              }, function () {\n                _this3.nextStage();\n              });\n            },\n            children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n              type: \"TailSpin\",\n              color: colors.WHITE,\n              height: '20px',\n              width: '20px'\n            }) : /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Confirm & Submit\"\n            })\n          }), /*#__PURE__*/_jsxs(\"p\", {\n            className: styles.contactUsLasttext,\n            children: [\"Having issues? \", /*#__PURE__*/_jsx(\"a\", {\n              href: \"/contact_us\",\n              children: /*#__PURE__*/_jsx(\"span\", {\n                id: styles.driver_APP_CU1,\n                children: \"Contact Us\"\n              })\n            }), \".  See \", /*#__PURE__*/_jsx(\"a\", {\n              href: \"/s/articles/procedures_for_taking_a_picture\",\n              children: /*#__PURE__*/_jsx(\"span\", {\n                id: styles.driver_APP_CU1,\n                children: \"guidelines for taking vehicle and profile photos\"\n              })\n            }), \".\", /*#__PURE__*/_jsx(\"br\", {}), \"By clicking Confirm & Submit you confirming that all the information you provided here is accurate and correct.\"]\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            height: '100px',\n            width: '20px',\n            backgroundColor: 'transparent'\n          }\n        })]\n      });\n    }\n  }]);\n\n  return UploadDocuments;\n}(React.Component);\n\nexport { UploadDocuments as default };\n;","map":{"version":3,"sources":["/Users/edokoh9/Documents/PerchWebsite/perch/functions/panels/driverApplicationPanels/uploadDocuments.js"],"names":["firebase","React","AiOutlineCheck","Loader","styles","colors","UploadDocuments","props","userID","state","vehicleRandomID","docID","selectedIndex","toPut","storage","ref","put","s","then","database","update","documentsSubmitted","JSON","stringify","docNames","setState","loading","error","console","log","message","dateFormat","saveLoading","color","vehicleColor","displayImage","make","vehicleMake","model","vehicleModel","plateNumber","verifyStatus","year","vehicleYear","stage","progress","nextStage","uploadDocs","docList","errorMessage","once","snapshot","val","parse","snap","requirements","i","push","driverFAQ_PICDESC","driver_APP_TOP_RADIO_CONT_","text","GREY","width","margin","marginLeft","driver_APP_RADIO","backgroundColor","GREEN","WHITE","length","cont","container","marginTop","driver_APP_TOPCONT","driver_APP_TOP_TEXT","driver_APP_TOP_TEXT_NUMB","applicationDashArrow","title","BLACK","fontFamily","uploadDocumentIconCont","document","click","flexDirection","uploadDocumentPIC","height","fontSize","maxWidth","name","em","textAlign","driverApplicationTextinput_OUTER","driverApplicationTextinput_CONT","event","target","value","button1","sendMessageContactUS","storeVehicleDetails","buttonText1","driverVehicle_INPUT","files","filesize","size","toFixed","submitDoc","contactUsLC","marginBottom","justifyContent","RED","includes","contactUsLasttext","driver_APP_CU1","Component"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport styles from '../panel_layout.module.css';\nimport { colors } from '../../functions';\n\n\n\nexport default class UploadDocuments extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uploadDocs: false,\n            userID: this.props.userID,\n            vehicleRandomID: '',\n            dateFormat: '',\n\n            s: [//ORDER IS IMPORTANT FOR SERVER\n                false, // \"Driver's licence\",\n                false, // \"Proof of work eligibility\",\n                false, // \"EPS background check\",\n                false, // \"Vehicle insurance\",\n                false, // \"Vehicle registration\",\n                false, // \"Vehicle inspection\",\n                false, // \"Photo of Vehicle (Must be 4:3)\"\n                false, // \"Profile Photo (Must be 1:1)\"\n            ],\n            docList: [\n                \"Driver's licence\",\n                \"Proof of work eligibility\",\n                \"EPS background check\",\n                \"Vehicle insurance\",\n                \"Vehicle registration\",\n                \"Vehicle inspection\",\n                \"Photo of Vehicle (Must be 4:3)\",\n                \"Profile Photo (Must be 1:1)\"\n\n            ],\n            docID: [\n                \"driversLicence\",\n                \"proofOfWorkEligibility\",\n                \"epsBackgroundCheck\",\n                \"vehicleInsurance\",\n                \"vehicleRegistration\",\n                \"vehicleInspection\",\n                \"vehicleImage\",\n                \"profilePicture\"\n\n            ],\n            docNames: [\n                false, // \"Driver's licence\",\n                false, // \"Proof of work eligibility\",\n                false, // \"EPS background check\",\n                false, // \"Vehicle insurance\",\n                false, // \"Vehicle registration\",\n                false, // \"Vehicle inspection\",\n                false, // \"Photo of Vehicle (Must be 4:3)\"\n                false, // \"Profile Photo (Must be 1:1)\"\n            ],\n\n            vehicleMake: '',\n            vehicleModel: '',\n            vehicleYear: '',\n            vehicleColor: '',\n            plateNumber: '',\n\n            selectedIndex: 0,\n            loading: false,\n            saveLoading: false,\n            errorMessage: '',\n\n        };\n    };\n    componentDidMount() {\n        firebase.database().ref(`driverApplications/${this.state.userID}`).once('value', snapshot => {\n            if (snapshot.val().documentsSubmitted) {\n                this.setState({ s: JSON.parse(snapshot.val().documentsSubmitted), docNames: JSON.parse(snapshot.val().documentsSubmitted) });\n            };\n            firebase.database().ref(`vehicles/${this.state.userID}/${snapshot.val().dateFormat}`).once('value', snap => {\n                if (snap.val()) {\n                    const { make, model, plateNumber, year, color } = snap.val();\n                    this.setState({\n                        vehicleMake: make,\n                        vehicleModel: model,\n                        vehicleYear: year,\n                        vehicleColor: color,\n                        plateNumber: plateNumber,\n                    })\n                }\n            })\n            this.setState({ vehicleRandomID: snapshot.val().vehicleRandomID, dateFormat: snapshot.val().dateFormat })\n        }).catch(error => { console.log(error.message) });\n    };\n\n    submitDoc = () => {//make position for other arrays item\n        const userID = this.state.userID;\n        const vehicleRandomID = this.state.vehicleRandomID;\n        const docID = this.state.docID[this.state.selectedIndex];\n        let toPut = '';\n        if (docID == 'vehicleInsurance' || docID == 'vehicleRegistration' || docID == 'vehicleInspection' || docID == 'vehicleImage')\n            toPut = `driverVehicleDocs/${userID}/${vehicleRandomID}/${docID}`;\n        else if (docID == 'driversLicence' || docID == 'proofOfWorkEligibility' || docID == 'profilePicture' || docID == 'epsBackgroundCheck')\n            toPut = `driverVehicleDocs/${userID}/driverDetails/${docID}`;//WHERE THE RIVER DETAILS ARE WLONG WITH THE PROFILE PHOTO\n\n        firebase.storage().ref(toPut)\n            .put(this.state.s[this.state.selectedIndex])\n            .then(() => {\n                firebase.database().ref(`driverApplications/${userID}`).update({\n                    documentsSubmitted: JSON.stringify(this.state.docNames),\n                })\n                    .then(() => { this.setState({ loading: false }) })\n                    .catch(error => {\n                        console.log(error.message);\n                        this.setState({ loading: false });\n                    })\n            })\n            .catch(error => {\n                console.log(error.message);\n                this.setState({ loading: false });\n            });\n    };\n    storeVehicleDetails = () => {\n        const userID = this.state.userID;\n        const dateFormat = this.state.dateFormat;\n        this.setState({ saveLoading: true }, () => {\n            firebase.database().ref(`vehicles/${userID}`).update({\n                [dateFormat]: {\n                    color: this.state.vehicleColor,\n                    displayImage: `driverVehicleDocs/${userID}/${this.state.vehicleRandomID}/vehicleImage`,\n                    make: this.state.vehicleMake,\n                    model: this.state.vehicleModel,\n                    plateNumber: this.state.plateNumber,\n                    verifyStatus: 'UNVERIFIED',\n                    year: this.state.vehicleYear,\n                },\n                selected: dateFormat,\n            })\n                .then(() => {\n                    this.setState({ saveLoading: false });\n                })\n                .catch(error => { this.setState({ error: error.message }) })\n        })\n    };\n    nextStage = () => {\n        firebase.database().ref(`driverApplications/${this.state.userID}`).update({\n            stage: 'three',\n            progress: JSON.stringify(['done', 'done', 'ongoing', 'undone', 'undone']),\n        })\n            .then(() => {\n                firebase.database().ref(`completedDriverApplications`).update({\n                    [this.state.userID]: 'UNPROCESSED',\n                }).catch(error => { console.log(error.message) })\n            })\n            .then(() => { this.props.nextStage('three'); })\n            .catch(error => { console.log(error.message) })\n\n    }\n    render() {\n        let requirements = [];\n        for (let i = 0; i < this.state.docList.length; i++)\n            requirements.push(\n                <div className={styles.driverFAQ_PICDESC} id={styles.driver_APP_TOP_RADIO_CONT_}\n                    onClick={() => { this.setState({ uploadDocs: true, selectedIndex: i, errorMessage: '' }) }}>\n                    <p className={styles.text} style={{ color: GREY, width: 'initial', margin: '0px', marginLeft: '10px' }}>{this.state.docList[i]}</p>\n                    <div className={styles.driver_APP_RADIO} style={{ backgroundColor: this.state.s[i] ? colors.GREEN : `rgba(78, 184, 72,0.5)` }}>\n                        {this.state.s[i] ? <AiOutlineCheck color={colors.WHITE} size={'15px'} /> : <></>}\n                    </div>\n                </div>\n            );\n\n        return (\n            <div className={styles.cont}>\n                <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px', }}>\n                    <div className={styles.driver_APP_TOPCONT}>\n                        <p className={styles.driver_APP_TOP_TEXT} style={{ color: colors.WHITE }}>Vehicle Confirmation</p>\n                        <p className={styles.driver_APP_TOP_TEXT} style={{ color: colors.WHITE }}>Upload Documents</p>\n                        <p className={styles.driver_APP_TOP_TEXT}>Application Status</p>\n\n                        <p className={styles.driver_APP_TOP_TEXT_NUMB} style={{ color: colors.WHITE }}>1</p>\n                        <p className={styles.driver_APP_TOP_TEXT_NUMB} style={{ color: colors.WHITE }}>2</p>\n                        <p className={styles.driver_APP_TOP_TEXT_NUMB}>3</p>\n                        <img src=\"/applicationDashArrow_.svg\" className={styles.applicationDashArrow} style={{ width: '69%' }} />\n                    </div>\n                    {\n                        this.state.uploadDocs ?\n                            <>\n                                <p className={styles.title} style={{ color: BLACK }}>{`Upload your ${this.state.docList[this.state.selectedIndex]}`}</p>\n                                <p className={styles.text} style={{ color: GREY }}>\n                                    Documents should be submitted as a scanned pdf or a photograph of the document.<br />\n                                    <a href='/s/articles/procedures_for_taking_a_picture' style={{ fontFamily: 'Gilroy-Semibold' }}>See details for taking vehicle and profile photo's here</a><br />\n                                    Pictures should be :<br />\n                                    • Taken in a well place <br />\n                                    • Show details clearly\n                                </p>\n\n                                {this.state.s[this.state.selectedIndex] ?\n                                    <div\n                                        className={styles.uploadDocumentIconCont}\n                                        onClick={() => { this.document.click() }}\n                                        style={{ flexDirection: 'column' }}>\n                                        <img src=\"/documentsSubmitted.svg\" className={styles.uploadDocumentPIC} style={{ height: '70%', marginTop: '10px' }} />\n                                        <p className={styles.text}\n                                            style={{ width: 'initial', fontFamily: 'Gilroy-Semibold', fontSize: '95%', color: GREY, maxWidth: '90%' }}>\n                                            {this.state.s[this.state.selectedIndex].name}\n                                        </p>\n                                    </div> :\n                                    <div className={styles.uploadDocumentIconCont} onClick={() => { this.document.click() }}>\n                                        <img src='/uploadDocumentIcon.svg' className={styles.uploadDocumentPIC} />\n                                    </div>\n                                }\n                                <p className={styles.em} style={{ textAlign: 'initial' }}>{this.state.errorMessage}</p>\n                            </>\n                            :\n                            <>\n                                <p className={styles.title} style={{ color: BLACK }}>{`Upload Documents`}</p>\n                                <p className={styles.text} style={{ color: GREY }}>\n                                    All that is left to do is to submit the required documents and you’re on your way to becoming a Perch driver.\n                                </p>\n                                <p className={styles.title} style={{ color: GREY, fontSize: '95%', marginTop: '20px' }}>{`Required Documents`}</p>\n                                {requirements}\n                                <p className={styles.title} style={{ color: GREY, fontSize: '95%', marginTop: '20px' }}>{`Vehicle details`}</p>\n                                <div className={styles.driverApplicationTextinput_OUTER}>\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Enter vehicle make\"\n                                        className={styles.driverApplicationTextinput_CONT}\n                                        //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n                                        value={this.state.vehicleMake}\n                                        onChange={event => {\n                                            this.setState({ vehicleMake: event.target.value });\n                                        }}\n                                    />\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Enter vehicle model\"\n                                        className={styles.driverApplicationTextinput_CONT}\n                                        //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n                                        value={this.state.vehicleModel}\n                                        onChange={event => {\n                                            this.setState({ vehicleModel: event.target.value });\n                                        }}\n                                    />\n                                </div>\n                                <div className={styles.driverApplicationTextinput_OUTER}>\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Enter vehicle color\"\n                                        className={styles.driverApplicationTextinput_CONT}\n                                        //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n                                        value={this.state.vehicleColor}\n                                        onChange={event => {\n                                            this.setState({ vehicleColor: event.target.value });\n                                        }}\n                                    />\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Enter vehicle year (XXXX)\"\n                                        className={styles.driverApplicationTextinput_CONT}\n                                        //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n                                        value={this.state.vehicleYear}\n                                        onChange={event => {\n                                            this.setState({ vehicleYear: event.target.value });\n                                        }}\n                                    />\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Enter plate number\"\n                                    className={styles.driverApplicationTextinput_CONT}\n                                    style={{ fontFamily: 'Gilroy-Bold', color: colors.GREEN, width: '90%' }}\n                                    value={this.state.plateNumber}\n                                    onChange={event => {\n                                        this.setState({ plateNumber: event.target.value });\n                                    }}\n                                />\n\n                                <a className={styles.button1} id={styles.sendMessageContactUS}\n                                    style={{ width: '90%', marginTop: '20px', maxWidth: 'initial' }}\n                                    onClick={() => {\n                                        this.storeVehicleDetails();\n                                    }}>\n                                    {this.state.saveLoading ?\n                                        <Loader\n                                            type=\"TailSpin\"\n                                            color={colors.WHITE}\n                                            height={'20px'}\n                                            width={'20px'} /> :\n                                        <p className={styles.buttonText1}>Save Vehicle details</p>}\n                                </a>\n                                <p className={styles.em} style={{ textAlign: 'initial' }}>{this.state.errorMessage}</p>\n                            </>\n                    }\n                </div>\n                <input type='file'\n                    ref={(ref) => this.document = ref}\n                    accept=\".jpg,.jpeg,.png,.pdf\"\n                    className={styles.driverVehicle_INPUT}\n                    onChange={event => {\n                        if (event.target.files.length != 0) {\n                            let files = this.state.s;\n                            let docNames = this.state.docNames;\n                            const filesize = ((event.target.files[0].size / 1024) / 1024).toFixed(4); // MB\n                            if (filesize > 15)\n                                this.setState({ errorMessage: 'File is too large. A maximum of 15 megabytes is permitted for uploads' });\n                            else {\n                                files[this.state.selectedIndex] = event.target.files[0];\n                                docNames[this.state.selectedIndex] = { name: event.target.files[0].name };\n                                this.setState({ s: files, docNames: docNames, loading: true }, () => { this.submitDoc(); });\n                            }\n                        }\n                    }} />\n                <div className={styles.contactUsLC} style={{ marginTop: '15px', marginBottom: '150px' }}>\n                    {this.state.uploadDocs ?\n                        <div className={styles.driverFAQ_PICDESC} style={{ width: '100%', justifyContent: 'space-between' }}>\n                            <a className={styles.button1} id={styles.sendMessageContactUS}\n                                onClick={() => {\n                                    if (!this.state.loading)\n                                        this.setState({ uploadDocs: false, errorMessage: '' })\n                                }}\n                                style={{ backgroundColor: RED, width: '48%' }}>\n                                <p className={styles.buttonText1}>Cancel</p>\n                            </a>\n\n                            <a className={styles.button1}\n                                id={styles.sendMessageContactUS}\n                                style={{ width: '48%' }}\n                                onClick={() => {\n                                    if (!this.state.loading) {\n                                        if (this.state.s[this.state.selectedIndex])\n                                            this.setState({ uploadDocs: false, errorMessage: '' })\n                                        else\n                                            this.document.click();\n                                    }\n                                }}>\n                                {this.state.loading ?\n                                    <Loader\n                                        type=\"TailSpin\"\n                                        color={colors.WHITE}\n                                        height={'20px'}\n                                        width={'20px'} /> :\n                                    <p className={styles.buttonText1}>{this.state.s[this.state.selectedIndex] ? 'Done' : 'Upload'}</p>\n                                }\n                            </a>\n                        </div>\n                        :\n                        <a className={styles.button1} id={styles.sendMessageContactUS}\n                            onClick={() => {\n                                if (this.state.docNames.includes(false))\n                                    this.setState({ errorMessage: 'Please upload all the required documents' });\n                                else if (\n                                    this.state.vehicleYear.length <= 3 ||\n                                    this.state.vehicleColor.length <= 2 ||\n                                    this.state.vehicleModel.length <= 3 ||\n                                    this.state.vehicleMake.length <= 3 ||\n                                    this.state.plateNumber.length <= 3)\n                                    this.setState({ errorMessage: 'Please fill the vehicle details completely and correctly.' });\n                                else\n                                    this.setState({ loading: true }, () => {\n                                        this.nextStage();\n                                    })\n                            }}>\n                            {this.state.loading ?\n                                <Loader\n                                    type=\"TailSpin\"\n                                    color={colors.WHITE}\n                                    height={'20px'}\n                                    width={'20px'} /> :\n                                <p className={styles.buttonText1}>{`Confirm & Submit`}</p>}\n                        </a>}\n                    <p className={styles.contactUsLasttext}>\n                        Having issues? <a href='/contact_us'><span id={styles.driver_APP_CU1}>Contact Us</span></a>.  See <a href='/s/articles/procedures_for_taking_a_picture'><span id={styles.driver_APP_CU1}>guidelines for taking vehicle and profile photos</span></a>.<br />\n                        By clicking Confirm & Submit you confirming that all the information you provided here is accurate and correct.\n                    </p>\n                </div>\n                <div style={{ height: '100px', width: '20px', backgroundColor: 'transparent' }}></div>\n            </div>\n        )\n\n    }\n};"]},"metadata":{},"sourceType":"module"}