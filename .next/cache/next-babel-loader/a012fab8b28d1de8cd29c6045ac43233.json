{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, distanceCalculator, formatDateAllValues, isNumber, M, millisToMinutesAndSeconds } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport GoogleMapReact from 'google-map-react';\n\nconst polyline = require(\"@mapbox/polyline\");\n\nimport { BiCurrentLocation } from 'react-icons/bi';\nimport * as turf from '@turf/turf'; //for encoding polylines\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default class CancelledTrips extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadResult\", () => {\n      firebase.database().ref(`cancelled_UNRESOLVED`).once('value', snapshot => {\n        //console.log(snapshot.val());\n        let r = [];\n\n        for (let key in snapshot.val()) r.push(snapshot.val()[key]);\n\n        this.setState({\n          result: r\n        });\n      }).catch(error => {\n        alert(error.message);\n      });\n    });\n\n    _defineProperty(this, \"getMapBounds\", (map, maps, legs) => {\n      const bounds = new maps.LatLngBounds();\n      const r = [...legs //[this.props.location.latitude, this.props.location.longitude], //USER LOCATION SHOULD BE HERE\n      //[this.props.destination.latitude, this.props.destination.longitude] //DRIVER LOCATION SHOULD BE HERE\n      ];\n      const line = turf.lineString(r);\n      turf.bboxPolygon(turf.bbox(line)).geometry.coordinates[0].forEach(v => {\n        bounds.extend(new maps.LatLng(v[0], v[1]));\n      });\n      map.fitBounds(bounds);\n    });\n\n    _defineProperty(this, \"renderPolylines\", (map, maps, fitToBoundsOnly) => {\n      function geodesicPolyline(polyline_, m, color) {\n        const poly = polyline.decode(polyline_);\n\n        for (let i = 0; i < poly.length; i++) m.push({\n          lat: poly[i][0],\n          lng: poly[i][1]\n        });\n\n        if (!fitToBoundsOnly) {\n          let geodesicPolyliner = new maps.Polyline({\n            path: m,\n            options: {\n              strokeColor: color,\n              strokeOpacity: 1,\n              strokeWeight: 4\n            }\n          });\n          geodesicPolyliner.setMap(map);\n        }\n      }\n\n      ;\n      const {\n        polylines\n      } = this.state.currentData;\n      let markers1 = [],\n          markers2 = [],\n          markers3 = [];\n      if (polylines !== null && polylines !== void 0 && polylines.firstLeg) geodesicPolyline(polylines === null || polylines === void 0 ? void 0 : polylines.firstLeg, markers1, colors.GREEN);\n      if (polylines !== null && polylines !== void 0 && polylines.secondLeg) geodesicPolyline(polylines === null || polylines === void 0 ? void 0 : polylines.secondLeg, markers2, colors.BLUE);\n      if (polylines !== null && polylines !== void 0 && polylines.thirdLeg) geodesicPolyline(polylines === null || polylines === void 0 ? void 0 : polylines.thirdLeg, markers3, colors.PURPLE);\n      let newArray = [...markers1, ...markers2, ...markers3];\n      this.getMapBounds(map, maps, newArray.map(v => {\n        return [v.lat, v.lng];\n      }));\n    });\n\n    _defineProperty(this, \"renderDriverMarkers\", tripDetails => {\n      let driverMarkers = [];\n\n      for (let key in tripDetails) {\n        let image = '';\n\n        switch (key) {\n          case '_1':\n            {\n              image = '/greenCarIcon.svg';\n            }\n            break;\n\n          case '_2':\n            {\n              image = '/blueCarIcon.svg';\n            }\n            break;\n\n          case '_3':\n            {\n              image = '/purpleCarIcon.svg';\n            }\n            break;\n        }\n\n        ;\n        driverMarkers.push( /*#__PURE__*/_jsx(\"img\", {\n          lat: tripDetails[key].location.latitude,\n          lng: tripDetails[key].location.longitude,\n          src: image,\n          className: styles.mapIcon\n        }, key));\n      }\n\n      ;\n      return driverMarkers;\n    });\n\n    this.state = {\n      idRiderSearch: '',\n      idDriverSearch: '',\n      result: [],\n      currentData: null,\n      key: \"\",\n      refundRiderAmount: '',\n      refundRiderPerchKms: '',\n      payFirstDriver: '',\n      paySecondDriver: '',\n      payThirdDriver: ''\n    };\n  }\n\n  componentDidMount() {\n    this.loadResult();\n    firebase.database().ref('GOOGLE_KEY').once('value', key => {\n      this.setState({\n        key: key.val()\n      });\n    }).catch(error => console.log(error.message));\n  }\n\n  renderCurrentDataTripDetails(currentData) {\n    const {\n      tripDetails,\n      userLocation\n    } = currentData;\n    let tripDetailsRender = [];\n    let i = 0;\n\n    for (let key in tripDetails) {\n      i++;\n      let distance = '';\n      const {\n        status\n      } = tripDetails[key];\n      let value = '';\n\n      switch (key) {\n        case '_1':\n          {\n            value = 'First Trip';\n          }\n          break;\n\n        case '_2':\n          {\n            value = 'Second Trip';\n          }\n          break;\n\n        case '_3':\n          {\n            value = 'Third Trip';\n          }\n          break;\n      }\n\n      ;\n\n      if (userLocation) {\n        let d = distanceCalculator(userLocation.latitude, userLocation.longitude, tripDetails[key].location.latitude, tripDetails[key].location.longitude);\n        let unit = d > 1000 ? 'km' : 'meters';\n        d = d > 1000 ? d / 1000 : d;\n        distance = `(${d.toFixed(2)} ${unit} away)`;\n      }\n\n      tripDetailsRender.push( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: value\n        }), /*#__PURE__*/_jsxs(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Medium',\n            margin: 0\n          },\n          children: [status, \" \", /*#__PURE__*/_jsx(\"span\", {\n            style: {\n              color: colors.GREY,\n              fontFamily: 'Gilroy-Semibold'\n            },\n            children: distance\n          })]\n        })]\n      }, key));\n    }\n\n    ;\n    tripDetailsRender.unshift( /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.breakdownSpreadApart,\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        style: {\n          fontFamily: 'Gilroy-Regular',\n          margin: 0\n        },\n        children: \"Trip Number\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        style: {\n          fontFamily: 'Gilroy-Bold',\n          margin: 0\n        },\n        children: i\n      })]\n    }));\n    return tripDetailsRender;\n  }\n\n  renderCurrentDataTripDetailsTime(t1_, startAt) {\n    const t1 = new Date(t1_);\n    const t2 = new Date(startAt.year, M.indexOf(startAt.month), startAt.day, startAt.hour, startAt.min, startAt.sec);\n    const difference = t2.getTime() - t1.getTime();\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: \"Time of trip confirmation\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Medium',\n            margin: 0\n          },\n          children: formatDateAllValues(t1)\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: \"Time of trip cancellation\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Medium',\n            margin: 0\n          },\n          children: formatDateAllValues(t2)\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: \"Duration before trip cancellation\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Medium',\n            margin: 0\n          },\n          children: millisToMinutesAndSeconds(difference)\n        })]\n      })]\n    });\n  }\n\n  renderCurrentDataCost(cost) {\n    const {\n      toDrivers,\n      total\n    } = cost;\n    let v = [];\n    v.push( /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.breakdownSpreadApart,\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        style: {\n          fontFamily: 'Gilroy-Regular',\n          margin: 0\n        },\n        children: \"Total paid\"\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        style: {\n          fontFamily: 'Gilroy-Medium',\n          margin: 0\n        },\n        children: [\"$\", total]\n      })]\n    }, 'top'));\n\n    for (let key in toDrivers) {\n      let value = '';\n\n      switch (key) {\n        case 'firstDriverPay':\n          {\n            value = \"First driver's cut\";\n          }\n          break;\n\n        case 'secondDriverPay':\n          {\n            value = \"Second driver's cut\";\n          }\n          break;\n\n        case 'thirdDriverPay':\n          {\n            value = \"Third driver's cut\";\n          }\n          break;\n      }\n\n      ;\n      if (toDrivers[key]) v.push( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: value\n        }), /*#__PURE__*/_jsxs(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Medium',\n            margin: 0\n          },\n          children: [\"$\", toDrivers[key]]\n        })]\n      }, key));\n    }\n\n    return v;\n  }\n\n  renderCurrentDataRefund(cost) {\n    const {\n      toDrivers,\n      total,\n      usedPerchKms\n    } = cost;\n    let v = [];\n    v.push( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: \"Refund Rider Cash\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          placeholder: \"/////\",\n          className: styles.searchInput,\n          style: {\n            width: '20%',\n            height: '40px'\n          },\n          value: this.state.refundRiderAmount,\n          onChange: event => {\n            const value = event.target.value;\n            console.log(value);\n            if (isNumber(value)) this.setState({\n              refundRiderAmount: value\n            });\n          }\n        })]\n      }, `1`), !!usedPerchKms && /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: \"Refund Rider Perch Kilometers\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          placeholder: \"///\",\n          className: styles.searchInput,\n          style: {\n            width: '20%',\n            height: '40px'\n          },\n          value: this.state.refundRiderPerchKms,\n          onChange: event => {\n            const value = event.target.value;\n            if (isNumber(value)) this.setState({\n              refundRiderPerchKms: value\n            });\n          }\n        })]\n      }, '2')]\n    }));\n\n    for (let key in toDrivers) {\n      let value = '';\n      let toEdit = '';\n\n      switch (key) {\n        case 'firstDriverPay':\n          {\n            value = \"First driver's payment\";\n            toEdit = 'payFirstDriver';\n          }\n          break;\n\n        case 'secondDriverPay':\n          {\n            value = \"Second driver's payment\";\n            toEdit = 'paySecondDriver';\n          }\n          break;\n\n        case 'thirdDriverPay':\n          {\n            value = \"Third driver's payment\";\n            toEdit = 'payThirdDriver';\n          }\n          break;\n      }\n\n      ;\n      if (toDrivers[key]) v.push( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: value\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          placeholder: \"////\",\n          className: styles.searchInput,\n          style: {\n            width: '20%',\n            height: '40px'\n          },\n          value: this.state[toEdit],\n          onChange: event => {\n            const value = event.target.value;\n            if (isNumber(value)) this.setState({\n              [toEdit]: value\n            });\n          }\n        })]\n      }, key));\n    }\n\n    return v;\n  }\n\n  render() {\n    let results = [];\n    const keys = Object.keys(this.state.result).sort((a, b) => b - a);\n\n    for (let k = 0; k < keys.length; k++) {\n      const data = this.state.result[k];\n      const {\n        startAt\n      } = data;\n      const displayDate = formatDateAllValues(new Date(startAt.year, M.indexOf(startAt.month), startAt.day, startAt.hour, startAt.min, startAt.sec));\n      results.push( /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.previousMessageSum,\n          onClick: () => {\n            this.setState({\n              currentData: data\n            });\n          },\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            style: {\n              width: '90px',\n              height: '30px',\n              backgroundColor: data.canceller == 'rider' ? colors.GREEN : colors.BLUE,\n              borderRadius: '5px',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.readOrUnreadText,\n              style: {\n                color: '#ffffff',\n                fontFamily: 'Gilroy-ExtraBold'\n              },\n              children: data.canceller == 'rider' ? 'Rider' : 'Driver'\n            })\n          }), /*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontSize: '105%',\n              fontFamily: 'Gilroy-Bold',\n              color: colors.GREEN\n            },\n            children: /*#__PURE__*/_jsx(\"span\", {\n              style: {\n                color: colors.GREY\n              },\n              children: displayDate\n            })\n          })]\n        }), k == keys.length - 1 ? /*#__PURE__*/_jsx(_Fragment, {}) : /*#__PURE__*/_jsx(\"div\", {\n          className: styles.sharedLine,\n          style: {\n            marginTop: '5px'\n          }\n        })]\n      }));\n    }\n\n    ;\n    const defaultProps = {\n      center: {\n        lat: 0,\n        lng: 0\n      },\n      zoom: 11\n    };\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: styles.cont,\n      children: this.state.currentData ? /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: colors.WHITE,\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: colors.BLACK\n            },\n            children: \"Cancelled Trip\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              width: '90%',\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              marginBottom: '20px'\n            }\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.mapBox,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.mapBoxCenter,\n              onClick: () => {\n                this.renderPolylines(this.map.map_, this.map.maps_, true);\n              },\n              children: /*#__PURE__*/_jsx(BiCurrentLocation, {\n                color: colors.GREEN,\n                size: 25\n              })\n            }), /*#__PURE__*/_jsxs(GoogleMapReact, {\n              ref: map => this.map = map,\n              bootstrapURLKeys: {\n                key: this.state.key\n              },\n              defaultCenter: defaultProps.center,\n              defaultZoom: defaultProps.zoom,\n              options: {\n                fullscreenControl: false,\n                disableDefaultUI: true\n              },\n              onGoogleApiLoaded: ({\n                map,\n                maps\n              }) => this.renderPolylines(map, maps),\n              children: [this.state.currentData.userLocation && /*#__PURE__*/_jsx(\"img\", {\n                lat: this.state.currentData.userLocation.latitude,\n                lng: this.state.currentData.userLocation.longitude,\n                src: '/userIcon.svg',\n                className: styles.mapIcon\n              }), this.renderDriverMarkers(this.state.currentData.tripDetails)]\n            })]\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: colors.GREY,\n              fontFamily: 'Gilroy-SemiBold',\n              marginTop: '40px'\n            },\n            children: \"Breakdown of trip cancellation\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              height: '1px',\n              width: '90%',\n              backgroundColor: colors.GREY,\n              marginTop: '5px'\n            }\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.breakdownSpreadApart,\n            style: {\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              style: {\n                fontFamily: 'Gilroy-Medium',\n                margin: 0\n              },\n              children: \"Canceller\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                width: '90px',\n                height: '30px',\n                backgroundColor: this.state.currentData.canceller == 'rider' ? colors.GREEN : colors.BLUE,\n                borderRadius: '5px',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.readOrUnreadText,\n                style: {\n                  color: '#ffffff',\n                  fontFamily: 'Gilroy-ExtraBold'\n                },\n                children: this.state.currentData.canceller == 'rider' ? 'Rider' : 'Driver'\n              })\n            })]\n          }), this.renderCurrentDataTripDetails(this.state.currentData), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: colors.GREY,\n              fontFamily: 'Gilroy-SemiBold',\n              marginTop: '50px'\n            },\n            children: \"Time details\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              height: '1px',\n              width: '90%',\n              backgroundColor: colors.GREY,\n              marginTop: '5px'\n            }\n          }), this.renderCurrentDataTripDetailsTime(this.state.currentData.time, this.state.currentData.startAt), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: colors.GREY,\n              fontFamily: 'Gilroy-SemiBold',\n              marginTop: '50px'\n            },\n            children: \"Cost Details\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              height: '1px',\n              width: '90%',\n              backgroundColor: colors.GREY,\n              marginTop: '5px'\n            }\n          }), this.renderCurrentDataCost(this.state.currentData.cost), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: colors.GREY,\n              fontFamily: 'Gilroy-SemiBold',\n              marginTop: '50px'\n            },\n            children: \"Refund values\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              height: '1px',\n              width: '90%',\n              backgroundColor: colors.GREY,\n              marginTop: '5px'\n            }\n          }), this.renderCurrentDataRefund(this.state.currentData.cost)]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.enterKilometerDiv,\n          style: {\n            marginTop: '20px',\n            marginBottom: '150px',\n            marginLeft: '2.5%',\n            width: '95%'\n          },\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: styles.button2,\n            style: {\n              backgroundColor: colors.RED\n            },\n            id: styles.buttonBottom,\n            onClick: () => {\n              this.setState({\n                currentData: null\n              });\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Cancel\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.button2,\n            style: {\n              backgroundColor: colors.GREEN\n            },\n            id: styles.buttonBottom,\n            onClick: () => {},\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Refund Amount\"\n            })\n          })]\n        })]\n      }) : /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.container,\n        style: {\n          backgroundColor: colors.WHITE,\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          className: styles.title,\n          style: {\n            color: colors.BLACK\n          },\n          children: \"Cancelled Trips\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            width: '90%',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            marginBottom: '20px'\n          }\n        }), results]\n      })\n    });\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/ugo/Documents/Perch_Projects/Perch-Website/functions/panels/adminPanels/cancelledTrips.js"],"names":["React","colors","distanceCalculator","formatDateAllValues","isNumber","M","millisToMinutesAndSeconds","styles","firebase","GoogleMapReact","polyline","require","BiCurrentLocation","turf","CancelledTrips","Component","constructor","props","database","ref","once","snapshot","r","key","val","push","setState","result","catch","error","alert","message","map","maps","legs","bounds","LatLngBounds","line","lineString","bboxPolygon","bbox","geometry","coordinates","forEach","v","extend","LatLng","fitBounds","fitToBoundsOnly","geodesicPolyline","polyline_","m","color","poly","decode","i","length","lat","lng","geodesicPolyliner","Polyline","path","options","strokeColor","strokeOpacity","strokeWeight","setMap","polylines","state","currentData","markers1","markers2","markers3","firstLeg","GREEN","secondLeg","BLUE","thirdLeg","PURPLE","newArray","getMapBounds","tripDetails","driverMarkers","image","location","latitude","longitude","mapIcon","idRiderSearch","idDriverSearch","refundRiderAmount","refundRiderPerchKms","payFirstDriver","paySecondDriver","payThirdDriver","componentDidMount","loadResult","console","log","renderCurrentDataTripDetails","userLocation","tripDetailsRender","distance","status","value","d","unit","toFixed","breakdownSpreadApart","marginTop","fontFamily","margin","GREY","unshift","renderCurrentDataTripDetailsTime","t1_","startAt","t1","Date","t2","year","indexOf","month","day","hour","min","sec","difference","getTime","renderCurrentDataCost","cost","toDrivers","total","renderCurrentDataRefund","usedPerchKms","searchInput","width","height","event","target","toEdit","render","results","keys","Object","sort","a","b","k","data","displayDate","previousMessageSum","backgroundColor","canceller","borderRadius","display","justifyContent","alignItems","readOrUnreadText","fontSize","sharedLine","defaultProps","center","zoom","cont","container","WHITE","title","BLACK","flexDirection","marginBottom","mapBox","mapBoxCenter","renderPolylines","map_","maps_","fullscreenControl","disableDefaultUI","renderDriverMarkers","text","time","enterKilometerDiv","marginLeft","button2","RED","buttonBottom","buttonText1"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, distanceCalculator, formatDateAllValues, isNumber, M, millisToMinutesAndSeconds } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport GoogleMapReact from 'google-map-react';\nconst polyline = require(\"@mapbox/polyline\");\nimport { BiCurrentLocation } from 'react-icons/bi';\nimport * as turf from '@turf/turf'; //for encoding polylines\n\nexport default class CancelledTrips extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            idRiderSearch: '',\n            idDriverSearch: '',\n            result: [],\n            currentData: null,\n            key: \"\",\n\n            refundRiderAmount: '',\n            refundRiderPerchKms: '',\n            payFirstDriver: '',\n            paySecondDriver: '',\n            payThirdDriver: '',\n        };\n    };\n    componentDidMount() {\n        this.loadResult();\n        firebase.database().ref('GOOGLE_KEY').once('value', key => {\n            this.setState({ key: key.val() })\n        }).catch(error => console.log(error.message));\n    };\n    loadResult = () => {\n        firebase.database().ref(`cancelled_UNRESOLVED`).once('value', snapshot => {\n            //console.log(snapshot.val());\n            let r = [];\n            for (let key in snapshot.val())\n                r.push(snapshot.val()[key]);\n            this.setState({ result: r })\n        }).catch(error => { alert(error.message) })\n    };\n    getMapBounds = (map, maps, legs) => {\n        const bounds = new maps.LatLngBounds();\n        const r = [\n            ...legs,\n            //[this.props.location.latitude, this.props.location.longitude], //USER LOCATION SHOULD BE HERE\n            //[this.props.destination.latitude, this.props.destination.longitude] //DRIVER LOCATION SHOULD BE HERE\n        ];\n        const line = turf.lineString(r);\n        turf.bboxPolygon(turf.bbox(line)).geometry.coordinates[0].forEach((v => {\n            bounds.extend(new maps.LatLng(\n                v[0],\n                v[1],\n            ));\n        }));\n        map.fitBounds(bounds);\n    };\n    renderPolylines = (map, maps, fitToBoundsOnly) => {\n        function geodesicPolyline(polyline_, m, color) {\n            const poly = polyline.decode(polyline_)\n            for (let i = 0; i < poly.length; i++)\n                m.push({\n                    lat: poly[i][0],\n                    lng: poly[i][1],\n                });\n            if (!fitToBoundsOnly) {\n                let geodesicPolyliner = new maps.Polyline({\n                    path: m,\n                    options: {\n                        strokeColor: color,\n                        strokeOpacity: 1,\n                        strokeWeight: 4,\n                    },\n                })\n                geodesicPolyliner.setMap(map);\n            }\n        };\n        const { polylines } = this.state.currentData;\n        let markers1 = [], markers2 = [], markers3 = [];\n\n        if (polylines?.firstLeg)\n            geodesicPolyline(polylines?.firstLeg, markers1, colors.GREEN);\n        if (polylines?.secondLeg)\n            geodesicPolyline(polylines?.secondLeg, markers2, colors.BLUE);\n        if (polylines?.thirdLeg)\n            geodesicPolyline(polylines?.thirdLeg, markers3, colors.PURPLE);\n\n        let newArray = [...markers1, ...markers2, ...markers3];\n        this.getMapBounds(map, maps, newArray.map(v => { return [v.lat, v.lng] }))\n\n    };\n    renderDriverMarkers = (tripDetails) => {\n        let driverMarkers = [];\n        for (let key in tripDetails) {\n            let image = '';\n            switch (key) {\n                case '_1': { image = '/greenCarIcon.svg'; } break;\n                case '_2': { image = '/blueCarIcon.svg'; } break;\n                case '_3': { image = '/purpleCarIcon.svg'; } break;\n            };\n            driverMarkers.push(\n                <img\n                    key={key}\n                    lat={tripDetails[key].location.latitude}\n                    lng={tripDetails[key].location.longitude}\n                    src={image}\n                    className={styles.mapIcon}\n                />);\n        };\n        return driverMarkers;\n    };\n    renderCurrentDataTripDetails(currentData) {\n        const { tripDetails, userLocation } = currentData;\n        let tripDetailsRender = [];\n        let i = 0;\n\n        for (let key in tripDetails) {\n            i++;\n            let distance = '';\n            const { status } = tripDetails[key];\n            let value = '';\n            switch (key) {\n                case '_1': { value = 'First Trip'; } break;\n                case '_2': { value = 'Second Trip'; } break;\n                case '_3': { value = 'Third Trip'; } break;\n            };\n            if (userLocation) {\n                let d = distanceCalculator(userLocation.latitude, userLocation.longitude, tripDetails[key].location.latitude, tripDetails[key].location.longitude);\n                let unit = d > 1000 ? 'km' : 'meters';\n                d = d > 1000 ? (d / 1000) : d;\n                distance = `(${d.toFixed(2)} ${unit} away)`;\n            }\n\n            tripDetailsRender.push(\n                <div\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}\n                    key={key}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>{value}</p>\n                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>{status} <span style={{ color: colors.GREY, fontFamily: 'Gilroy-Semibold' }}>{distance}</span></p>\n                </div>\n            );\n        };\n\n        tripDetailsRender.unshift(\n            <div\n                className={styles.breakdownSpreadApart}\n                style={{ marginTop: 20, }}\n            >\n                <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Trip Number</p>\n                <p style={{ fontFamily: 'Gilroy-Bold', margin: 0 }}>{i}</p>\n            </div>\n        )\n        return tripDetailsRender;\n    };\n    renderCurrentDataTripDetailsTime(t1_, startAt) {\n        const t1 = new Date(t1_);\n        const t2 = new Date(startAt.year, M.indexOf(startAt.month), startAt.day, startAt.hour, startAt.min, startAt.sec);\n        const difference = t2.getTime() - t1.getTime();\n\n\n        return (\n            <>\n                <div\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Time of trip confirmation</p>\n                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>{formatDateAllValues(t1)}</p>\n                </div>\n                <div\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Time of trip cancellation</p>\n                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>{formatDateAllValues(t2)}</p>\n                </div>\n                <div\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Duration before trip cancellation</p>\n                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>{millisToMinutesAndSeconds(difference)}</p>\n                </div>\n            </>\n        );\n    };\n    renderCurrentDataCost(cost) {\n        const { toDrivers, total } = cost;\n        let v = [];\n\n        v.push(\n            <div\n                key='top'\n                className={styles.breakdownSpreadApart}\n                style={{ marginTop: 20, }}>\n                <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Total paid</p>\n                <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>${total}</p>\n            </div>\n        );\n\n        for (let key in toDrivers) {\n            let value = '';\n            switch (key) {\n                case 'firstDriverPay': { value = \"First driver's cut\"; } break;\n                case 'secondDriverPay': { value = \"Second driver's cut\"; } break;\n                case 'thirdDriverPay': { value = \"Third driver's cut\"; } break;\n            };\n            if (toDrivers[key])\n                v.push(\n                    <div\n                        key={key}\n                        className={styles.breakdownSpreadApart}\n                        style={{ marginTop: 15, }}>\n                        <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>{value}</p>\n                        <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>${toDrivers[key]}</p>\n                    </div>\n                );\n        }\n\n        return v;\n    };\n    renderCurrentDataRefund(cost) {\n        const { toDrivers, total, usedPerchKms } = cost;\n        let v = [];\n\n        v.push(\n            <>\n                <div\n                    key={`1`}\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 20, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Refund Rider Cash</p>\n                    <input\n                        type=\"text\"\n                        placeholder=\"/////\"\n                        className={styles.searchInput}\n                        style={{ width: '20%', height: '40px' }}\n                        value={this.state.refundRiderAmount}\n                        onChange={event => {\n                            const value = event.target.value;\n                            console.log(value)\n                            if (isNumber(value))\n                                this.setState({ refundRiderAmount: value });\n                        }}\n                    />\n                </div>\n\n                {!!usedPerchKms && <div\n                    key={'2'}\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Refund Rider Perch Kilometers</p>\n                    <input\n                        type=\"text\"\n                        placeholder=\"///\"\n                        className={styles.searchInput}\n                        style={{ width: '20%', height: '40px' }}\n                        value={this.state.refundRiderPerchKms}\n                        onChange={event => {\n                            const value = event.target.value;\n                            if (isNumber(value))\n                                this.setState({ refundRiderPerchKms: value });\n                        }}\n                    />\n                </div>}\n            </>\n        );\n\n        for (let key in toDrivers) {\n            let value = '';\n            let toEdit = ''\n            switch (key) {\n                case 'firstDriverPay': {\n                    value = \"First driver's payment\";\n                    toEdit = 'payFirstDriver';\n                } break;\n                case 'secondDriverPay': {\n                    value = \"Second driver's payment\";\n                    toEdit = 'paySecondDriver';\n                } break;\n                case 'thirdDriverPay': {\n                    value = \"Third driver's payment\";\n                    toEdit = 'payThirdDriver';\n                } break;\n            };\n            if (toDrivers[key])\n                v.push(\n                    <div\n                        key={key}\n                        className={styles.breakdownSpreadApart}\n                        style={{ marginTop: 15, }}>\n                        <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>{value}</p>\n                        <input\n                            type=\"text\"\n                            placeholder=\"////\"\n                            className={styles.searchInput}\n                            style={{ width: '20%', height: '40px' }}\n                            value={this.state[toEdit]}\n                            onChange={event => {\n                                const value = event.target.value;\n                                if (isNumber(value))\n                                    this.setState({ [toEdit]: value });\n                            }}\n                        />\n                    </div>\n                );\n        }\n\n        return v;\n    };\n    render() {\n        let results = [];\n        const keys = Object.keys(this.state.result).sort((a, b) => b - a);\n        for (let k = 0; k < keys.length; k++) {\n            const data = this.state.result[k];\n            const { startAt } = data;\n            const displayDate = formatDateAllValues(new Date(startAt.year, M.indexOf(startAt.month), startAt.day, startAt.hour, startAt.min, startAt.sec))\n            results.push(\n                <>\n                    <div className={styles.previousMessageSum} onClick={() => {\n                        this.setState({ currentData: data })\n                    }}>\n                        <div style={{ width: '90px', height: '30px', backgroundColor: data.canceller == 'rider' ? colors.GREEN : colors.BLUE, borderRadius: '5px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                            <p className={styles.readOrUnreadText} style={{ color: '#ffffff', fontFamily: 'Gilroy-ExtraBold' }}>{data.canceller == 'rider' ? 'Rider' : 'Driver'}</p>\n                        </div>\n                        <p style={{ fontSize: '105%', fontFamily: 'Gilroy-Bold', color: colors.GREEN }}>\n                            {/* {`$ ${data.cost.total}   `}-  */}\n                            <span style={{ color: colors.GREY }}>{displayDate}</span></p>\n                    </div>\n                    {\n                        k == keys.length - 1 ?\n                            <></> :\n                            <div className={styles.sharedLine} style={{ marginTop: '5px' }}></div>\n                    }\n                </>\n            )\n        };\n\n        const defaultProps = {\n            center: {\n                lat: 0,\n                lng: 0\n            },\n            zoom: 11\n        };\n\n        return (\n            <div className={styles.cont}>\n                {\n                    this.state.currentData ?\n                        <>\n                            <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                                <p className={styles.title} style={{ color: colors.BLACK }}>Cancelled Trip</p>\n                                <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '20px' }}>\n                                </div>\n                                <div className={styles.mapBox}>\n                                    <div className={styles.mapBoxCenter}\n                                        onClick={() => {\n                                            this.renderPolylines(this.map.map_, this.map.maps_, true);\n                                        }}\n                                    >\n                                        <BiCurrentLocation color={colors.GREEN} size={25} />\n                                    </div>\n                                    <GoogleMapReact\n                                        ref={(map) => this.map = map}\n                                        bootstrapURLKeys={{ key: this.state.key }}\n                                        defaultCenter={defaultProps.center}\n                                        defaultZoom={defaultProps.zoom}\n                                        options={{\n                                            fullscreenControl: false,\n                                            disableDefaultUI: true,\n                                        }}\n                                        onGoogleApiLoaded={({ map, maps }) => this.renderPolylines(map, maps)}\n                                    >\n                                        {this.state.currentData.userLocation &&\n                                            <img\n                                                lat={this.state.currentData.userLocation.latitude}\n                                                lng={this.state.currentData.userLocation.longitude}\n                                                src={'/userIcon.svg'}\n                                                className={styles.mapIcon}\n                                            />}\n                                        {this.renderDriverMarkers(this.state.currentData.tripDetails)}\n                                    </GoogleMapReact>\n                                </div>\n                                <p className={styles.text} style={{ color: colors.GREY, fontFamily: 'Gilroy-SemiBold', marginTop: '40px' }}>\n                                    Breakdown of trip cancellation\n                                </p>\n                                <div style={{ height: '1px', width: '90%', backgroundColor: colors.GREY, marginTop: '5px' }}></div>\n                                <div className={styles.breakdownSpreadApart}\n                                    style={{ marginTop: '20px' }}\n                                >\n                                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0 }}>Canceller</p>\n                                    <div style={{ width: '90px', height: '30px', backgroundColor: this.state.currentData.canceller == 'rider' ? colors.GREEN : colors.BLUE, borderRadius: '5px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                        <p className={styles.readOrUnreadText} style={{ color: '#ffffff', fontFamily: 'Gilroy-ExtraBold' }}>{this.state.currentData.canceller == 'rider' ? 'Rider' : 'Driver'}</p>\n                                    </div>\n                                </div>\n                                {this.renderCurrentDataTripDetails(this.state.currentData)}\n\n                                <p className={styles.text} style={{ color: colors.GREY, fontFamily: 'Gilroy-SemiBold', marginTop: '50px' }}>\n                                    Time details\n                                </p>\n                                <div style={{ height: '1px', width: '90%', backgroundColor: colors.GREY, marginTop: '5px' }}></div>\n                                {this.renderCurrentDataTripDetailsTime(this.state.currentData.time, this.state.currentData.startAt)}\n                                <p className={styles.text} style={{ color: colors.GREY, fontFamily: 'Gilroy-SemiBold', marginTop: '50px' }}>\n                                    Cost Details\n                                </p>\n                                <div style={{ height: '1px', width: '90%', backgroundColor: colors.GREY, marginTop: '5px' }}></div>\n                                {this.renderCurrentDataCost(this.state.currentData.cost)}\n                                <p className={styles.text} style={{ color: colors.GREY, fontFamily: 'Gilroy-SemiBold', marginTop: '50px' }}>\n                                    Refund values\n                                </p>\n                                <div style={{ height: '1px', width: '90%', backgroundColor: colors.GREY, marginTop: '5px' }}></div>\n                                {this.renderCurrentDataRefund(this.state.currentData.cost)}\n\n                            </div>\n                            <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                                <div\n                                    className={styles.button2}\n                                    style={{ backgroundColor: colors.RED }}\n                                    id={styles.buttonBottom}\n                                    onClick={() => { this.setState({ currentData: null }) }}>\n                                    <p className={styles.buttonText1}>Cancel</p>\n                                </div>\n                                <div\n                                    className={styles.button2}\n                                    style={{ backgroundColor: colors.GREEN }}\n                                    id={styles.buttonBottom}\n                                    onClick={() => {\n\n                                    }}>\n                                    <p className={styles.buttonText1}>Refund Amount</p>\n                                </div>\n                            </div>\n                        </>\n                        :\n                        <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                            <p className={styles.title} style={{ color: colors.BLACK }}>Cancelled Trips</p>\n                            <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '20px' }}>\n                                {/* <input\n                            type=\"text\"\n                            placeholder=\"Search riders by email / userID\"\n                            className={styles.searchInput}\n                            style={{ width: '48%' }}\n                            value={this.state.idRiderSearch}\n                            onChange={event => {\n                                this.setState({ idRiderSearch: event.target.value });\n                            }}\n                        />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search drivers by email / userID\"\n                            className={styles.searchInput}\n                            style={{ width: '48%' }}\n                            value={this.state.idRiderSearch}\n                            onChange={event => {\n                                this.setState({ idRiderSearch: event.target.value });\n                            }}\n                        /> */}\n                            </div>\n\n                            {results}\n\n                        </div>}\n            </div>\n        );\n    };\n};"]},"metadata":{},"sourceType":"module"}