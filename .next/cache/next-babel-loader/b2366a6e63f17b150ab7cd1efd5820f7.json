{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport EmailEditor from 'react-email-editor';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default class SendAnEmail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadResult\", () => {\n      if (this.state.userDetails) {}\n    });\n\n    _defineProperty(this, \"exportHtml\", () => {\n      this.emailEditor.current.editor.exportHtml(data => {\n        const {\n          design,\n          html\n        } = data;\n        console.log('exportHtml', html);\n      });\n    });\n\n    _defineProperty(this, \"onLoad\", () => {// you can load your template here;\n      // const templateJson = {};\n      // emailEditorRef.current.editor.loadDesign(templateJson);\n    });\n\n    this.state = {\n      email: '',\n      text: ''\n    };\n  }\n\n  componentDidMount() {\n    this.loadResult();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.cont,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.container,\n        style: {\n          backgroundColor: colors.WHITE,\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          className: styles.title,\n          style: {\n            color: colors.BLACK,\n            marginBottom: '30px'\n          },\n          children: \"Send an Email\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.sharedLine\n        }), /*#__PURE__*/_jsx(\"textarea\", {\n          type: \"text\",\n          placeholder: \"Enter your email here\",\n          className: styles.contactUsContent //style={{ width: '100%' }}\n          ,\n          value: this.state.response,\n          onChange: event => {\n            this.setState({\n              text: event.target.value\n            });\n          }\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.enterKilometerDiv,\n        style: {\n          marginTop: '20px',\n          marginBottom: '150px',\n          marginLeft: '2.5%',\n          width: '95%'\n        },\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.button2,\n          style: {\n            backgroundColor: colors.RED\n          },\n          id: styles.buttonBottom,\n          onClick: () => {\n            this.setState({\n              showMessage: false\n            });\n          },\n          children: /*#__PURE__*/_jsx(\"p\", {\n            className: styles.buttonText1,\n            children: \"Cancel\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.button2,\n          style: {\n            backgroundColor: colors.GREEN\n          },\n          id: styles.buttonBottom,\n          onClick: () => {\n            if (this.state.response.length < 10) alert('Please enter a response');else {\n              if (!this.state.showResponse) replyFeedback.call(this, this.state.response, this.state.riderOrDriver, this.state.toShow.senderID, this.state.toShow.timestamp);else alert('Response already sent');\n            }\n          },\n          children: /*#__PURE__*/_jsx(\"p\", {\n            className: styles.buttonText1,\n            children: \"Send response\"\n          })\n        })]\n      })]\n    });\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/edokoh9/Documents/PerchWebsite/perch/functions/panels/adminPanels/sendAnEmail.js"],"names":["React","EmailEditor","colors","styles","SendAnEmail","Component","constructor","props","state","userDetails","emailEditor","current","editor","exportHtml","data","design","html","console","log","email","text","componentDidMount","loadResult","render","cont","container","backgroundColor","WHITE","marginTop","title","color","BLACK","marginBottom","sharedLine","contactUsContent","response","event","setState","target","value","enterKilometerDiv","marginLeft","width","button2","RED","buttonBottom","showMessage","buttonText1","GREEN","length","alert","showResponse","replyFeedback","call","riderOrDriver","toShow","senderID","timestamp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport EmailEditor from 'react-email-editor';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors } from '../../functions';\nimport styles from '../panel_layout.module.css';\n\n\n\nexport default class SendAnEmail extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            text: '',\n        };\n    }\n    componentDidMount() {\n        this.loadResult();\n    }\n    loadResult = () => {\n        if (this.state.userDetails) {\n\n        }\n    };\n    exportHtml = () => {\n        this.emailEditor.current.editor.exportHtml((data) => {\n            const { design, html } = data;\n            console.log('exportHtml', html);\n        });\n    };\n    onLoad = () => {\n        // you can load your template here;\n        // const templateJson = {};\n        // emailEditorRef.current.editor.loadDesign(templateJson);\n    };\n    render() {\n        return (\n            <div className={styles.cont}>\n                <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                    <p className={styles.title} style={{ color: colors.BLACK, marginBottom: '30px' }}>Send an Email</p>\n                    {/* <EmailEditor\n                        ref={(ref) => this.emailEditor = ref}\n                        style={{ width: '80%' }}\n                        onLoad={this.onLoad}\n                    /> */}\n\n                    <div className={styles.sharedLine}></div>\n                    <textarea\n                        type=\"text\"\n                        placeholder=\"Enter your email here\"\n                        className={styles.contactUsContent}\n                        //style={{ width: '100%' }}\n                        value={this.state.response}\n                        onChange={event => { this.setState({ text: event.target.value }) }}\n                    />\n                </div>\n                <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                    <div\n                        className={styles.button2}\n                        style={{ backgroundColor: colors.RED }}\n                        id={styles.buttonBottom}\n                        onClick={() => { this.setState({ showMessage: false }) }}>\n                        <p className={styles.buttonText1}>Cancel</p>\n                    </div>\n                    <div\n                        className={styles.button2}\n                        style={{ backgroundColor: colors.GREEN }}\n                        id={styles.buttonBottom}\n                        onClick={() => {\n                            if (this.state.response.length < 10)\n                                alert('Please enter a response')\n                            else {\n                                if (!this.state.showResponse)\n                                    replyFeedback.call(this, this.state.response, this.state.riderOrDriver, this.state.toShow.senderID, this.state.toShow.timestamp);\n                                else\n                                    alert('Response already sent')\n                            }\n                        }}>\n                        <p className={styles.buttonText1}>Send response</p>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n};"]},"metadata":{},"sourceType":"module"}