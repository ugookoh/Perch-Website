{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BsDot } from 'react-icons/bs';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { replyFeedback } from '../../functions';\nimport styles from './panel_layout.module.css';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar GREEN = '#4EB848',\n    WHITE = '#FFFFFF',\n    GREY = '#959AAC',\n    BLACK = '#000000',\n    RED = '#FF0000',\n    BLUE_TEXT = '#284ED6',\n    BLUE = '#1970A7',\n    PURPLE = '#A031AF',\n    YELLOW = '#F0E23D';\nvar M = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nvar UnreadMessages = /*#__PURE__*/function (_React$Component) {\n  _inherits(UnreadMessages, _React$Component);\n\n  var _super = _createSuper(UnreadMessages);\n\n  function UnreadMessages(props) {\n    var _this;\n\n    _classCallCheck(this, UnreadMessages);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"loadResult\", function () {\n      if (_this.state.userDetails) {\n        var ref = _this.state.riderOrDriver == 'Rider' ? \"analytics/unansweredUserFeedbackMessages\" : \"analytics/unansweredDriverFeedbackMessages\";\n        firebase.database().ref(ref).once('value', function (snapshot) {\n          _this.setState({\n            result: snapshot.val() ? snapshot.val() : {}\n          });\n        });\n      }\n    });\n\n    _this.state = {\n      idSearch: '',\n      result: {},\n      userDetails: _this.props.userDetails,\n      showMessage: false,\n      response: '',\n      riderOrDriver: 'Rider',\n      toShow: null,\n      showResponse: false,\n      responseDate: 0\n    };\n    return _this;\n  }\n\n  _createClass(UnreadMessages, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadResult();\n    }\n  }, {\n    key: \"loadMessage\",\n    value: function loadMessage(path, timestamp, senderID) {\n      var _this2 = this;\n\n      var ref = this.state.riderOrDriver == 'Rider' ? \"userFeedback/\".concat(path) : \"driverFeedback/\".concat(path);\n      firebase.database().ref(ref).once('value', function (snapshot) {\n        _this2.setState({\n          toShow: _objectSpread(_objectSpread({}, snapshot.val()), {}, {\n            timestamp: timestamp,\n            senderID: senderID\n          }),\n          showMessage: true,\n          showResponse: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.userDetails && this.props.userDetails) this.setState({\n        userDetails: this.props.userDetails\n      }, function () {\n        _this3.loadResult();\n      });\n      var results = [];\n      var keys = Object.keys(this.state.result).sort();\n\n      var _loop = function _loop(k) {\n        var path = _this3.state.result[keys[k]].path;\n        var a = path.indexOf('/') + 1;\n        var b = path.length;\n        var timestamp = Number(path.slice(a, b));\n        var senderID = path.slice(0, a - 1);\n        results.push( /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.previousMessageSum,\n            onClick: function onClick() {\n              _this3.loadMessage(_this3.state.result[keys[k]].path, timestamp, senderID);\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              style: {\n                fontSize: '95%'\n              },\n              children: _this3.state.result[keys[k]].subject\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.previousMessageDate,\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                style: {\n                  fontFamily: 'Gilroy-Semibold',\n                  fontSize: '75%',\n                  marginRight: '-10px',\n                  paddingLeft: '10px'\n                },\n                children: dateOfQuery(timestamp)\n              }), /*#__PURE__*/_jsx(BsDot, {\n                size: '55px',\n                color: GREEN\n              })]\n            })]\n          }), k == keys.length - 1 ? /*#__PURE__*/_jsx(_Fragment, {}) : /*#__PURE__*/_jsx(\"div\", {\n            className: styles.sharedLine,\n            style: {\n              marginTop: '5px'\n            }\n          })]\n        }));\n      };\n\n      for (var k = 0; k < keys.length; k++) {\n        _loop(k);\n      }\n\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: styles.cont,\n        children: this.state.showMessage ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.container,\n            style: {\n              backgroundColor: WHITE,\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxs(\"p\", {\n              className: styles.title,\n              style: {\n                color: BLACK,\n                marginBottom: '30px'\n              },\n              children: [this.state.toShow.subject, \": \", /*#__PURE__*/_jsxs(\"span\", {\n                style: {\n                  fontFamily: 'Gilroy-Light',\n                  fontSize: '90%'\n                },\n                children: [\"( Sender ID: \", this.state.toShow.senderID, \" )\"]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.previousMessageC,\n              style: {\n                alignItems: 'flex-start'\n              },\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.previousMessageCol,\n                style: {\n                  backgroundColor: 'rgba(145, 134, 134, 0.5)'\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    fontSize: '95%',\n                    color: BLACK,\n                    lineHeight: '150%',\n                    paddingRight: '10px',\n                    paddingLeft: '10px'\n                  },\n                  children: this.state.toShow.body\n                })\n              }), /*#__PURE__*/_jsx(\"p\", {\n                style: {\n                  fontFamily: 'Gilroy-Semibold',\n                  fontSize: '75%'\n                },\n                children: dateOfQuery(this.state.toShow.timestamp)\n              })]\n            }), this.state.showResponse ? /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.previousMessageC,\n              style: {\n                alignItems: 'flex-end'\n              },\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.previousMessageCol,\n                style: {\n                  backgroundColor: GREEN\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    fontSize: '95%',\n                    color: WHITE,\n                    lineHeight: '150%',\n                    paddingRight: '10px',\n                    paddingLeft: '10px'\n                  },\n                  children: this.state.response\n                })\n              }), /*#__PURE__*/_jsx(\"p\", {\n                style: {\n                  fontFamily: 'Gilroy-Semibold',\n                  fontSize: '75%'\n                },\n                children: dateOfQuery(this.state.responseDate)\n              })]\n            }) : /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.sharedLine\n              }), /*#__PURE__*/_jsx(\"textarea\", {\n                type: \"text\",\n                placeholder: \"Enter your response here\",\n                className: styles.contactUsContent //style={{ width: '100%' }}\n                ,\n                value: this.state.response,\n                onChange: function onChange(event) {\n                  _this3.setState({\n                    response: event.target.value\n                  });\n                }\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            style: {\n              marginTop: '20px',\n              marginBottom: '150px',\n              marginLeft: '2.5%',\n              width: '95%'\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.button2,\n              style: {\n                backgroundColor: RED\n              },\n              id: styles.buttonBottom,\n              onClick: function onClick() {\n                _this3.setState({\n                  showMessage: false\n                });\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: \"Cancel\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.button2,\n              style: {\n                backgroundColor: GREEN\n              },\n              id: styles.buttonBottom,\n              onClick: function onClick() {\n                if (!_this3.state.showResponse) replyFeedback.call(_this3, _this3.state.response, _this3.state.riderOrDriver, _this3.state.toShow.senderID, _this3.state.toShow.timestamp);else alert('Response already sent');\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: \"Send response\"\n              })\n            })]\n          })]\n        }) : /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: WHITE,\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: BLACK\n            },\n            children: \"Unread messages\"\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            style: {\n              width: '90%',\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              style: {\n                width: '90%',\n                height: '10px'\n              }\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.readOrUnreadCont,\n              onClick: function onClick() {\n                _this3.setState({\n                  riderOrDriver: _this3.state.riderOrDriver == 'Rider' ? 'Driver' : 'Rider'\n                }, function () {\n                  _this3.loadResult();\n                });\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.readOrUnreadText,\n                children: this.state.riderOrDriver\n              })\n            })]\n          }), results]\n        })\n      });\n    }\n  }]);\n\n  return UnreadMessages;\n}(React.Component);\n\nexport { UnreadMessages as default };\n;\n\nfunction dateOfQuery(timestamp) {\n  function formatAMPM(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    var strTime = hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n  }\n\n  ;\n  return \"\".concat(formatAMPM(new Date(timestamp)).toUpperCase(), \" \").concat(('0' + new Date(timestamp).getDate()).slice(-2), \"/\").concat(('0' + (new Date(timestamp).getMonth() + 1)).slice(-2), \"/\").concat(new Date(timestamp).getFullYear());\n}\n\n;","map":{"version":3,"sources":["/Users/edokoh9/Documents/PerchWebsite/perch/functions/panels/adminPanels/unreadMessages.js"],"names":["firebase","React","BsDot","replyFeedback","styles","GREEN","WHITE","GREY","BLACK","RED","BLUE_TEXT","BLUE","PURPLE","YELLOW","M","UnreadMessages","props","state","userDetails","ref","riderOrDriver","database","once","snapshot","setState","result","val","idSearch","showMessage","response","toShow","showResponse","responseDate","loadResult","path","timestamp","senderID","results","keys","Object","sort","k","a","indexOf","b","length","Number","slice","push","previousMessageSum","loadMessage","fontSize","subject","previousMessageDate","fontFamily","marginRight","paddingLeft","dateOfQuery","sharedLine","marginTop","cont","container","backgroundColor","title","color","marginBottom","previousMessageC","alignItems","previousMessageCol","lineHeight","paddingRight","body","contactUsContent","event","target","value","enterKilometerDiv","marginLeft","width","button2","buttonBottom","buttonText1","call","alert","display","flexDirection","justifyContent","height","readOrUnreadCont","readOrUnreadText","Component","formatAMPM","date","hours","getHours","minutes","getMinutes","ampm","strTime","Date","toUpperCase","getDate","getMonth","getFullYear"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,4CAAP;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,+DAAP;AACA,SACIC,aADJ,QAEO,iBAFP;AAGA,OAAOC,MAAP,MAAmB,2BAAnB;;;;AAEA,IAAOC,KAAP,GAA2E,SAA3E;AAAA,IAAcC,KAAd,GAAsF,SAAtF;AAAA,IAAqBC,IAArB,GAAiG,SAAjG;AAAA,IAA2BC,KAA3B,GAA4G,SAA5G;AAAA,IAAkCC,GAAlC,GAAuH,SAAvH;AAAA,IAAuCC,SAAvC,GAAkI,SAAlI;AAAA,IAAkDC,IAAlD,GAA6I,SAA7I;AAAA,IAAwDC,MAAxD,GAAwJ,SAAxJ;AAAA,IAAgEC,MAAhE,GAAmK,SAAnK;AACA,IAAMC,CAAC,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAV;;IAEqBC,c;;;;;AACjB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,iEAkBN,YAAM;AACf,UAAI,MAAKC,KAAL,CAAWC,WAAf,EAA4B;AACxB,YAAMC,GAAG,GAAG,MAAKF,KAAL,CAAWG,aAAX,IAA4B,OAA5B,4FAAZ;AACApB,QAAAA,QAAQ,CAACqB,QAAT,GAAoBF,GAApB,CAAwBA,GAAxB,EAA6BG,IAA7B,CAAkC,OAAlC,EAA2C,UAAAC,QAAQ,EAAI;AACnD,gBAAKC,QAAL,CAAc;AAAEC,YAAAA,MAAM,EAAEF,QAAQ,CAACG,GAAT,KAAiBH,QAAQ,CAACG,GAAT,EAAjB,GAAkC;AAA5C,WAAd;AACH,SAFD;AAGH;AACJ,KAzBkB;;AAGf,UAAKT,KAAL,GAAa;AACTU,MAAAA,QAAQ,EAAE,EADD;AAETF,MAAAA,MAAM,EAAE,EAFC;AAGTP,MAAAA,WAAW,EAAE,MAAKF,KAAL,CAAWE,WAHf;AAITU,MAAAA,WAAW,EAAE,KAJJ;AAKTC,MAAAA,QAAQ,EAAE,EALD;AAMTT,MAAAA,aAAa,EAAE,OANN;AAOTU,MAAAA,MAAM,EAAE,IAPC;AAQTC,MAAAA,YAAY,EAAE,KARL;AASTC,MAAAA,YAAY,EAAE;AATL,KAAb;AAHe;AAclB;;;;WACD,6BAAoB;AAChB,WAAKC,UAAL;AACH;;;WASD,qBAAYC,IAAZ,EAAkBC,SAAlB,EAA6BC,QAA7B,EAAuC;AAAA;;AACnC,UAAMjB,GAAG,GAAG,KAAKF,KAAL,CAAWG,aAAX,IAA4B,OAA5B,0BAAsDc,IAAtD,6BAAiFA,IAAjF,CAAZ;AACAlC,MAAAA,QAAQ,CAACqB,QAAT,GAAoBF,GAApB,CAAwBA,GAAxB,EAA6BG,IAA7B,CAAkC,OAAlC,EAA2C,UAAAC,QAAQ,EAAI;AACnD,QAAA,MAAI,CAACC,QAAL,CAAc;AACVM,UAAAA,MAAM,kCACCP,QAAQ,CAACG,GAAT,EADD;AAEFS,YAAAA,SAAS,EAAEA,SAFT;AAGFC,YAAAA,QAAQ,EAAEA;AAHR,YADI;AAMVR,UAAAA,WAAW,EAAE,IANH;AAOVG,UAAAA,YAAY,EAAE;AAPJ,SAAd;AASH,OAVD;AAWH;;;WAED,kBAAS;AAAA;;AACL,UAAI,CAAC,KAAKd,KAAL,CAAWC,WAAZ,IAA2B,KAAKF,KAAL,CAAWE,WAA1C,EACI,KAAKM,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE;AAA1B,OAAd,EAAuD,YAAM;AAAE,QAAA,MAAI,CAACe,UAAL;AAAoB,OAAnF;AAEJ,UAAII,OAAO,GAAG,EAAd;AACA,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY,KAAKrB,KAAL,CAAWQ,MAAvB,EAA+Be,IAA/B,EAAb;;AALK,iCAMIC,CANJ;AAQD,YAAMP,IAAI,GAAG,MAAI,CAACjB,KAAL,CAAWQ,MAAX,CAAkBa,IAAI,CAACG,CAAD,CAAtB,EAA2BP,IAAxC;AACA,YAAMQ,CAAC,GAAGR,IAAI,CAACS,OAAL,CAAa,GAAb,IAAoB,CAA9B;AACA,YAAMC,CAAC,GAAGV,IAAI,CAACW,MAAf;AACA,YAAMV,SAAS,GAAGW,MAAM,CAACZ,IAAI,CAACa,KAAL,CAAWL,CAAX,EAAcE,CAAd,CAAD,CAAxB;AACA,YAAMR,QAAQ,GAAGF,IAAI,CAACa,KAAL,CAAW,CAAX,EAAcL,CAAC,GAAG,CAAlB,CAAjB;AACAL,QAAAA,OAAO,CAACW,IAAR,eACI;AAAA,kCACI;AAAK,YAAA,SAAS,EAAE5C,MAAM,CAAC6C,kBAAvB;AAA2C,YAAA,OAAO,EAAE,mBAAM;AACtD,cAAA,MAAI,CAACC,WAAL,CAAiB,MAAI,CAACjC,KAAL,CAAWQ,MAAX,CAAkBa,IAAI,CAACG,CAAD,CAAtB,EAA2BP,IAA5C,EAAkDC,SAAlD,EAA6DC,QAA7D;AACH,aAFD;AAAA,oCAGI;AAAG,cAAA,KAAK,EAAE;AAAEe,gBAAAA,QAAQ,EAAE;AAAZ,eAAV;AAAA,wBAAgC,MAAI,CAAClC,KAAL,CAAWQ,MAAX,CAAkBa,IAAI,CAACG,CAAD,CAAtB,EAA2BW;AAA3D,cAHJ,eAII;AAAK,cAAA,SAAS,EAAEhD,MAAM,CAACiD,mBAAvB;AAAA,sCACI;AAAG,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,UAAU,EAAE,iBAAd;AAAiCH,kBAAAA,QAAQ,EAAE,KAA3C;AAAkDI,kBAAAA,WAAW,EAAE,OAA/D;AAAwEC,kBAAAA,WAAW,EAAE;AAArF,iBAAV;AAAA,0BACKC,WAAW,CAACtB,SAAD;AADhB,gBADJ,eAII,KAAC,KAAD;AAAO,gBAAA,IAAI,EAAE,MAAb;AAAqB,gBAAA,KAAK,EAAE9B;AAA5B,gBAJJ;AAAA,cAJJ;AAAA,YADJ,EAaQoC,CAAC,IAAIH,IAAI,CAACO,MAAL,GAAc,CAAnB,gBACI,mBADJ,gBAEI;AAAK,YAAA,SAAS,EAAEzC,MAAM,CAACsD,UAAvB;AAAmC,YAAA,KAAK,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAb;AAA1C,YAfZ;AAAA,UADJ;AAbC;;AAML,WAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACO,MAAzB,EAAiCJ,CAAC,EAAlC,EAAsC;AAAA,cAA7BA,CAA6B;AA2BrC;;AAED,0BACI;AAAK,QAAA,SAAS,EAAErC,MAAM,CAACwD,IAAvB;AAAA,kBACK,KAAK3C,KAAL,CAAWW,WAAX,gBACG;AAAA,kCACI;AAAK,YAAA,SAAS,EAAExB,MAAM,CAACyD,SAAvB;AAAkC,YAAA,KAAK,EAAE;AAAEC,cAAAA,eAAe,EAAExD,KAAnB;AAA0BqD,cAAAA,SAAS,EAAE;AAArC,aAAzC;AAAA,oCACI;AAAG,cAAA,SAAS,EAAEvD,MAAM,CAAC2D,KAArB;AAA4B,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAExD,KAAT;AAAgByD,gBAAAA,YAAY,EAAE;AAA9B,eAAnC;AAAA,yBACK,KAAKhD,KAAL,CAAWa,MAAX,CAAkBsB,OADvB,qBACiC;AAAM,gBAAA,KAAK,EAAE;AAAEE,kBAAAA,UAAU,EAAE,cAAd;AAA8BH,kBAAAA,QAAQ,EAAE;AAAxC,iBAAb;AAAA,4CAA4E,KAAKlC,KAAL,CAAWa,MAAX,CAAkBM,QAA9F;AAAA,gBADjC;AAAA,cADJ,eAKI;AAAK,cAAA,SAAS,EAAEhC,MAAM,CAAC8D,gBAAvB;AAAyC,cAAA,KAAK,EAAE;AAAEC,gBAAAA,UAAU,EAAE;AAAd,eAAhD;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAE/D,MAAM,CAACgE,kBAAvB;AAA2C,gBAAA,KAAK,EAAE;AAAEN,kBAAAA,eAAe,EAAE;AAAnB,iBAAlD;AAAA,uCACI;AAAG,kBAAA,KAAK,EAAE;AAAEX,oBAAAA,QAAQ,EAAE,KAAZ;AAAmBa,oBAAAA,KAAK,EAAExD,KAA1B;AAAiC6D,oBAAAA,UAAU,EAAE,MAA7C;AAAqDC,oBAAAA,YAAY,EAAE,MAAnE;AAA2Ed,oBAAAA,WAAW,EAAE;AAAxF,mBAAV;AAAA,4BACK,KAAKvC,KAAL,CAAWa,MAAX,CAAkByC;AADvB;AADJ,gBADJ,eAMI;AAAG,gBAAA,KAAK,EAAE;AAAEjB,kBAAAA,UAAU,EAAE,iBAAd;AAAiCH,kBAAAA,QAAQ,EAAE;AAA3C,iBAAV;AAAA,0BACKM,WAAW,CAAC,KAAKxC,KAAL,CAAWa,MAAX,CAAkBK,SAAnB;AADhB,gBANJ;AAAA,cALJ,EAeK,KAAKlB,KAAL,CAAWc,YAAX,gBACG;AAAK,cAAA,SAAS,EAAE3B,MAAM,CAAC8D,gBAAvB;AAAyC,cAAA,KAAK,EAAE;AAAEC,gBAAAA,UAAU,EAAE;AAAd,eAAhD;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAE/D,MAAM,CAACgE,kBAAvB;AAA2C,gBAAA,KAAK,EAAE;AAAEN,kBAAAA,eAAe,EAAEzD;AAAnB,iBAAlD;AAAA,uCACI;AAAG,kBAAA,KAAK,EAAE;AAAE8C,oBAAAA,QAAQ,EAAE,KAAZ;AAAmBa,oBAAAA,KAAK,EAAE1D,KAA1B;AAAiC+D,oBAAAA,UAAU,EAAE,MAA7C;AAAqDC,oBAAAA,YAAY,EAAE,MAAnE;AAA2Ed,oBAAAA,WAAW,EAAE;AAAxF,mBAAV;AAAA,4BACK,KAAKvC,KAAL,CAAWY;AADhB;AADJ,gBADJ,eAMI;AAAG,gBAAA,KAAK,EAAE;AAAEyB,kBAAAA,UAAU,EAAE,iBAAd;AAAiCH,kBAAAA,QAAQ,EAAE;AAA3C,iBAAV;AAAA,0BACKM,WAAW,CAAC,KAAKxC,KAAL,CAAWe,YAAZ;AADhB,gBANJ;AAAA,cADH,gBAWG;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAE5B,MAAM,CAACsD;AAAvB,gBADJ,eAEI;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,WAAW,EAAC,0BAFhB;AAGI,gBAAA,SAAS,EAAEtD,MAAM,CAACoE,gBAHtB,CAII;AAJJ;AAKI,gBAAA,KAAK,EAAE,KAAKvD,KAAL,CAAWY,QALtB;AAMI,gBAAA,QAAQ,EAAE,kBAAA4C,KAAK,EAAI;AAAE,kBAAA,MAAI,CAACjD,QAAL,CAAc;AAAEK,oBAAAA,QAAQ,EAAE4C,KAAK,CAACC,MAAN,CAAaC;AAAzB,mBAAd;AAAiD;AAN1E,gBAFJ;AAAA,cA1BR;AAAA,YADJ,eA0CI;AAAK,YAAA,SAAS,EAAEvE,MAAM,CAACwE,iBAAvB;AAA0C,YAAA,KAAK,EAAE;AAAEjB,cAAAA,SAAS,EAAE,MAAb;AAAqBM,cAAAA,YAAY,EAAE,OAAnC;AAA4CY,cAAAA,UAAU,EAAE,MAAxD;AAAgEC,cAAAA,KAAK,EAAE;AAAvE,aAAjD;AAAA,oCACI;AACI,cAAA,SAAS,EAAE1E,MAAM,CAAC2E,OADtB;AAEI,cAAA,KAAK,EAAE;AAAEjB,gBAAAA,eAAe,EAAErD;AAAnB,eAFX;AAGI,cAAA,EAAE,EAAEL,MAAM,CAAC4E,YAHf;AAII,cAAA,OAAO,EAAE,mBAAM;AAAE,gBAAA,MAAI,CAACxD,QAAL,CAAc;AAAEI,kBAAAA,WAAW,EAAE;AAAf,iBAAd;AAAuC,eAJ5D;AAAA,qCAKI;AAAG,gBAAA,SAAS,EAAExB,MAAM,CAAC6E,WAArB;AAAA;AAAA;AALJ,cADJ,eAQI;AACI,cAAA,SAAS,EAAE7E,MAAM,CAAC2E,OADtB;AAEI,cAAA,KAAK,EAAE;AAAEjB,gBAAAA,eAAe,EAAEzD;AAAnB,eAFX;AAGI,cAAA,EAAE,EAAED,MAAM,CAAC4E,YAHf;AAII,cAAA,OAAO,EAAE,mBAAM;AACX,oBAAI,CAAC,MAAI,CAAC/D,KAAL,CAAWc,YAAhB,EACI5B,aAAa,CAAC+E,IAAd,CAAmB,MAAnB,EAAyB,MAAI,CAACjE,KAAL,CAAWY,QAApC,EAA8C,MAAI,CAACZ,KAAL,CAAWG,aAAzD,EAAwE,MAAI,CAACH,KAAL,CAAWa,MAAX,CAAkBM,QAA1F,EAAoG,MAAI,CAACnB,KAAL,CAAWa,MAAX,CAAkBK,SAAtH,EADJ,KAGIgD,KAAK,CAAC,uBAAD,CAAL;AACP,eATL;AAAA,qCAUI;AAAG,gBAAA,SAAS,EAAE/E,MAAM,CAAC6E,WAArB;AAAA;AAAA;AAVJ,cARJ;AAAA,YA1CJ;AAAA,UADH,gBAkEG;AAAK,UAAA,SAAS,EAAE7E,MAAM,CAACyD,SAAvB;AAAkC,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAExD,KAAnB;AAA0BqD,YAAAA,SAAS,EAAE;AAArC,WAAzC;AAAA,kCACI;AAAG,YAAA,SAAS,EAAEvD,MAAM,CAAC2D,KAArB;AAA4B,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAExD;AAAT,aAAnC;AAAA;AAAA,YADJ,eAEI;AAAK,YAAA,KAAK,EAAE;AAAEsE,cAAAA,KAAK,EAAE,KAAT;AAAgBM,cAAAA,OAAO,EAAE,MAAzB;AAAiCC,cAAAA,aAAa,EAAE,KAAhD;AAAuDC,cAAAA,cAAc,EAAE;AAAvE,aAAZ;AAAA,oCAYI;AAAK,cAAA,KAAK,EAAE;AAAER,gBAAAA,KAAK,EAAE,KAAT;AAAgBS,gBAAAA,MAAM,EAAE;AAAxB;AAAZ,cAZJ,eAaI;AACI,cAAA,SAAS,EAAEnF,MAAM,CAACoF,gBADtB;AAEI,cAAA,OAAO,EAAE,mBAAM;AACX,gBAAA,MAAI,CAAChE,QAAL,CAAc;AAAEJ,kBAAAA,aAAa,EAAE,MAAI,CAACH,KAAL,CAAWG,aAAX,IAA4B,OAA5B,GAAsC,QAAtC,GAAiD;AAAlE,iBAAd,EAA2F,YAAM;AAC7F,kBAAA,MAAI,CAACa,UAAL;AACH,iBAFD;AAGH,eANL;AAAA,qCAOI;AAAG,gBAAA,SAAS,EAAE7B,MAAM,CAACqF,gBAArB;AAAA,0BAAwC,KAAKxE,KAAL,CAAWG;AAAnD;AAPJ,cAbJ;AAAA,YAFJ,EAyBKiB,OAzBL;AAAA;AAnER,QADJ;AAiGH;;;;EA9KuCpC,KAAK,CAACyF,S;;SAA7B3E,c;AA+KpB;;AAED,SAAS0C,WAAT,CAAqBtB,SAArB,EAAgC;AAC5B,WAASwD,UAAT,CAAoBC,IAApB,EAA0B;AACtB,QAAIC,KAAK,GAAGD,IAAI,CAACE,QAAL,EAAZ;AACA,QAAIC,OAAO,GAAGH,IAAI,CAACI,UAAL,EAAd;AACA,QAAIC,IAAI,GAAGJ,KAAK,IAAI,EAAT,GAAc,IAAd,GAAqB,IAAhC;AACAA,IAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;AACAA,IAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAW,EAAxB,CALsB,CAKM;;AAC5BE,IAAAA,OAAO,GAAGA,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAAzC;AACA,QAAIG,OAAO,GAAGL,KAAK,GAAG,GAAR,GAAcE,OAAd,GAAwB,GAAxB,GAA8BE,IAA5C;AACA,WAAOC,OAAP;AACH;;AAAA;AAED,mBAAUP,UAAU,CAAC,IAAIQ,IAAJ,CAAShE,SAAT,CAAD,CAAV,CAAgCiE,WAAhC,EAAV,cAA2D,CAAC,MAAM,IAAID,IAAJ,CAAShE,SAAT,EAAoBkE,OAApB,EAAP,EAAsCtD,KAAtC,CAA4C,CAAC,CAA7C,CAA3D,cAA8G,CAAC,OAAO,IAAIoD,IAAJ,CAAShE,SAAT,EAAoBmE,QAApB,KAAiC,CAAxC,CAAD,EAA6CvD,KAA7C,CAAmD,CAAC,CAApD,CAA9G,cAAwK,IAAIoD,IAAJ,CAAShE,SAAT,EAAoBoE,WAApB,EAAxK;AACH;;AAAA","sourcesContent":["import firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BsDot } from 'react-icons/bs';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport {\n    replyFeedback\n} from '../../functions';\nimport styles from './panel_layout.module.css';\n\nconst [GREEN, WHITE, GREY, BLACK, RED, BLUE_TEXT, BLUE, PURPLE, YELLOW] = ['#4EB848', '#FFFFFF', '#959AAC', '#000000', '#FF0000', '#284ED6', '#1970A7', '#A031AF', '#F0E23D'];\nconst M = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nexport default class UnreadMessages extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            idSearch: '',\n            result: {},\n            userDetails: this.props.userDetails,\n            showMessage: false,\n            response: '',\n            riderOrDriver: 'Rider',\n            toShow: null,\n            showResponse: false,\n            responseDate: 0,\n        };\n    }\n    componentDidMount() {\n        this.loadResult();\n    }\n    loadResult = () => {\n        if (this.state.userDetails) {\n            const ref = this.state.riderOrDriver == 'Rider' ? `analytics/unansweredUserFeedbackMessages` : `analytics/unansweredDriverFeedbackMessages`;\n            firebase.database().ref(ref).once('value', snapshot => {\n                this.setState({ result: snapshot.val() ? snapshot.val() : {} });\n            })\n        }\n    };\n    loadMessage(path, timestamp, senderID) {\n        const ref = this.state.riderOrDriver == 'Rider' ? `userFeedback/${path}` : `driverFeedback/${path}`;\n        firebase.database().ref(ref).once('value', snapshot => {\n            this.setState({\n                toShow: {\n                    ...snapshot.val(),\n                    timestamp: timestamp,\n                    senderID: senderID\n                },\n                showMessage: true,\n                showResponse: false,\n            });\n        });\n    };\n\n    render() {\n        if (!this.state.userDetails && this.props.userDetails)\n            this.setState({ userDetails: this.props.userDetails }, () => { this.loadResult(); });\n\n        let results = [];\n        const keys = Object.keys(this.state.result).sort();\n        for (let k = 0; k < keys.length; k++) {\n\n            const path = this.state.result[keys[k]].path;\n            const a = path.indexOf('/') + 1;\n            const b = path.length;\n            const timestamp = Number(path.slice(a, b));\n            const senderID = path.slice(0, a - 1);\n            results.push(\n                <>\n                    <div className={styles.previousMessageSum} onClick={() => {\n                        this.loadMessage(this.state.result[keys[k]].path, timestamp, senderID)\n                    }}>\n                        <p style={{ fontSize: '95%' }}>{this.state.result[keys[k]].subject}</p>\n                        <div className={styles.previousMessageDate}>\n                            <p style={{ fontFamily: 'Gilroy-Semibold', fontSize: '75%', marginRight: '-10px', paddingLeft: '10px' }}>\n                                {dateOfQuery(timestamp)}\n                            </p>\n                            <BsDot size={'55px'} color={GREEN} />\n                        </div>\n                    </div>\n                    {\n                        k == keys.length - 1 ?\n                            <></> :\n                            <div className={styles.sharedLine} style={{ marginTop: '5px' }}></div>\n                    }\n                </>\n            )\n        }\n\n        return (\n            <div className={styles.cont}>\n                {this.state.showMessage ?\n                    <>\n                        <div className={styles.container} style={{ backgroundColor: WHITE, marginTop: '20px' }}>\n                            <p className={styles.title} style={{ color: BLACK, marginBottom: '30px' }}>\n                                {this.state.toShow.subject}: <span style={{ fontFamily: 'Gilroy-Light', fontSize: '90%' }}>( Sender ID: {this.state.toShow.senderID} )</span>\n                            </p>\n\n                            <div className={styles.previousMessageC} style={{ alignItems: 'flex-start' }}>\n                                <div className={styles.previousMessageCol} style={{ backgroundColor: 'rgba(145, 134, 134, 0.5)' }}>\n                                    <p style={{ fontSize: '95%', color: BLACK, lineHeight: '150%', paddingRight: '10px', paddingLeft: '10px' }}>\n                                        {this.state.toShow.body}\n                                    </p>\n                                </div>\n                                <p style={{ fontFamily: 'Gilroy-Semibold', fontSize: '75%', }}>\n                                    {dateOfQuery(this.state.toShow.timestamp)}\n                                </p>\n                            </div>\n                            {this.state.showResponse ?\n                                <div className={styles.previousMessageC} style={{ alignItems: 'flex-end' }}>\n                                    <div className={styles.previousMessageCol} style={{ backgroundColor: GREEN }}>\n                                        <p style={{ fontSize: '95%', color: WHITE, lineHeight: '150%', paddingRight: '10px', paddingLeft: '10px' }}>\n                                            {this.state.response}\n                                        </p>\n                                    </div>\n                                    <p style={{ fontFamily: 'Gilroy-Semibold', fontSize: '75%', }}>\n                                        {dateOfQuery(this.state.responseDate)}\n                                    </p>\n                                </div> :\n                                <>\n                                    <div className={styles.sharedLine}></div>\n                                    <textarea\n                                        type=\"text\"\n                                        placeholder=\"Enter your response here\"\n                                        className={styles.contactUsContent}\n                                        //style={{ width: '100%' }}\n                                        value={this.state.response}\n                                        onChange={event => { this.setState({ response: event.target.value }) }}\n                                    />\n                                </>\n                            }\n\n                        </div>\n\n                        <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                            <div\n                                className={styles.button2}\n                                style={{ backgroundColor: RED }}\n                                id={styles.buttonBottom}\n                                onClick={() => { this.setState({ showMessage: false }) }}>\n                                <p className={styles.buttonText1}>Cancel</p>\n                            </div>\n                            <div\n                                className={styles.button2}\n                                style={{ backgroundColor: GREEN }}\n                                id={styles.buttonBottom}\n                                onClick={() => {\n                                    if (!this.state.showResponse)\n                                        replyFeedback.call(this, this.state.response, this.state.riderOrDriver, this.state.toShow.senderID, this.state.toShow.timestamp);\n                                    else\n                                        alert('Response already sent')\n                                }}>\n                                <p className={styles.buttonText1}>Send response</p>\n                            </div>\n                        </div>\n\n                    </> :\n                    <div className={styles.container} style={{ backgroundColor: WHITE, marginTop: '20px' }}>\n                        <p className={styles.title} style={{ color: BLACK }}>Unread messages</p>\n                        <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n\n                            {/* <input\n                                type=\"text\"\n                                placeholder=\"Search by email / userID\"\n                                className={styles.searchInput}\n                                //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n                                value={this.state.idSearch}\n                                onChange={event => {\n                                    this.setState({ idSearch: event.target.value });\n                                }}\n                            /> */}\n                            <div style={{ width: '90%', height: '10px' }}></div>\n                            <div\n                                className={styles.readOrUnreadCont}\n                                onClick={() => {\n                                    this.setState({ riderOrDriver: this.state.riderOrDriver == 'Rider' ? 'Driver' : 'Rider' }, () => {\n                                        this.loadResult();\n                                    })\n                                }}>\n                                <p className={styles.readOrUnreadText}>{this.state.riderOrDriver}</p>\n                            </div>\n                        </div>\n                        {results}\n                    </div>}\n            </div>\n        );\n    };\n};\n\nfunction dateOfQuery(timestamp) {\n    function formatAMPM(date) {\n        var hours = date.getHours();\n        var minutes = date.getMinutes();\n        var ampm = hours >= 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        hours = hours ? hours : 12; // the hour '0' should be '12'\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        var strTime = hours + ':' + minutes + ' ' + ampm;\n        return strTime;\n    };\n\n    return `${formatAMPM(new Date(timestamp)).toUpperCase()} ${('0' + new Date(timestamp).getDate()).slice(-2)}/${('0' + (new Date(timestamp).getMonth() + 1)).slice(-2)}/${new Date(timestamp).getFullYear()}`\n};"]},"metadata":{},"sourceType":"module"}