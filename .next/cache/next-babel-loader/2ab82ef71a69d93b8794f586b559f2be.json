{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this6 = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState } from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineClose, AiOutlineRight } from 'react-icons/ai';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, storeCard, deleteCard, buyKilometers } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport { loadStripe } from '@stripe/stripe-js';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar stripePromise = loadStripe('pk_test_RjADdW2vGwFAgOOk7ws1juNB002JV727O8');\n\nvar PerchWallet = /*#__PURE__*/function (_React$Component) {\n  _inherits(PerchWallet, _React$Component);\n\n  var _super = _createSuper(PerchWallet);\n\n  function PerchWallet(props) {\n    var _this;\n\n    _classCallCheck(this, PerchWallet);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"loadCards\", function () {\n      var userID = _this.state.userDetails.userID;\n      firebase.database().ref(\"cards/\".concat(userID)).once('value', function (snapshot) {\n        if (!!snapshot) {\n          var arrayOfLast4 = [],\n              i = 0;\n\n          for (var key in snapshot.val()) {\n            if (key != 'selected') arrayOfLast4[i] = {\n              last4: snapshot.val()[key].card.last4,\n              brand: snapshot.val()[key].card.brand,\n              cardId: snapshot.val()[key].card.cardId\n            };else if (key == 'selected') _this.setState({\n              selected: snapshot.val()[key]\n            });\n            i++;\n          }\n\n          _this.setState({\n            cards: arrayOfLast4\n          });\n        }\n\n        ;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSelected\", function (value) {\n      var userID = _this.state.userDetails.userID;\n      firebase.database().ref(\"cards/\".concat(userID)).update({\n        selected: value\n      }).then(function () {\n        _this.setState({\n          selected: value\n        });\n      })[\"catch\"](function (error) {\n        _this.setState({\n          errorMessage: error.message\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeCard\", function (index) {\n      var cards = _this.state.cards;\n      cards.splice(index, 1);\n\n      _this.setState({\n        cards: cards\n      });\n    });\n\n    _this.state = {\n      buyKilometers: false,\n      addCard: false,\n      userDetails: _this.props.userDetails,\n      quantity: 0,\n      cards: [],\n      selected: null,\n      index: 0,\n      name: '',\n      cardNumber: '',\n      expiryDate: '',\n      ccv: '',\n      errorMessage: '',\n      loading: false,\n      rate: 0,\n      kms: '',\n      cost: 0,\n      paymentLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(PerchWallet, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var userID = this.state.userDetails.userID;\n      firebase.database().ref(\"perchKilometers/\".concat(userID, \"/quantity\")).on('value', function (snapshot) {\n        if (!!snapshot) _this2.setState({\n          quantity: snapshot.val()\n        });\n      });\n      firebase.database().ref(\"costPerPerchKM\").on('value', function (snapshot) {\n        _this2.setState({\n          rate: snapshot.val()\n        });\n      });\n      this.loadCards();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _this$state$rate,\n          _this$state$cost;\n\n      var cards = [];\n\n      for (var i = 0; i < this.state.cards.length; i++) {\n        cards.push( /*#__PURE__*/_jsx(PaymentCard, {\n          userID: this.state.userDetails.userID,\n          card: this.state.cards[i],\n          index: i,\n          removeCard: this.removeCard,\n          setSelected: this.setSelected,\n          selectedCard: this.state.selected,\n          selected: this.state.selected === this.state.cards[i].last4,\n          type: this.state.buyKilometers ? 'pickPayment' : 'listOfCards'\n        }, this.state.cards[i].last4));\n      }\n\n      return /*#__PURE__*/_jsx(Elements, {\n        stripe: stripePromise,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: styles.cont,\n          children: this.state.buyKilometers ? //buy kilometers\n          this.state.paymentLoading ? /*#__PURE__*/_jsx(_Fragment, {\n            children: /*#__PURE__*/_jsx(ProcessPayment, {\n              goBack: function goBack() {\n                _this3.setState({\n                  buyKilometers: false,\n                  addCard: false,\n                  kms: '',\n                  errorMessage: '',\n                  paymentLoading: false\n                });\n              },\n              toSend: {\n                cardId: this.state.cards[this.state.index].cardId,\n                customerID: this.state.userDetails.stripeCustomerID,\n                quantity: Number(this.state.kms),\n                userID: this.state.userDetails.userID,\n                timestamp: new Date().getTime(),\n                isAutomatic: true\n              }\n            })\n          }) : /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: styles.container,\n              style: {\n                backgroundColor: colors.WHITE,\n                marginTop: '20px'\n              },\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  color: colors.BLACK\n                },\n                children: \"Enter the amount of kilometers you would like to purchase\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter amount of kilometers\",\n                value: this.state.kms,\n                onChange: function onChange(e) {\n                  var value = e.target.value;\n\n                  if (value.length <= 3) {\n                    var cost = Number(value) * _this3.state.rate;\n\n                    _this3.setState({\n                      kms: value,\n                      cost: cost\n                    });\n                  }\n                },\n                className: styles.inputPaymentPanel\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.enterKilometerDiv,\n                style: {\n                  marginTop: '20px'\n                },\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    width: 'initial',\n                    margin: '0px',\n                    fontFamily: 'Gilroy-Medium',\n                    color: colors.GREY\n                  },\n                  className: styles.text,\n                  children: \"Cost per kilometer\"\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    width: 'initial',\n                    margin: '0px',\n                    fontFamily: 'Gilroy-Medium'\n                  },\n                  className: styles.text,\n                  children: \"$ \".concat((_this$state$rate = this.state.rate) === null || _this$state$rate === void 0 ? void 0 : _this$state$rate.toFixed(2))\n                })]\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.sharedLine,\n                style: {\n                  marginTop: '20px',\n                  width: '90%'\n                }\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.enterKilometerDiv,\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    width: 'initial',\n                    margin: '0px',\n                    fontFamily: 'Gilroy-Bold',\n                    fontSize: '120%'\n                  },\n                  className: styles.text,\n                  children: \"Total\"\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    width: 'initial',\n                    margin: '0px',\n                    fontFamily: 'Gilroy-Bold',\n                    color: colors.GREEN,\n                    fontSize: '120%'\n                  },\n                  className: styles.text,\n                  children: \"$ \".concat((_this$state$cost = this.state.cost) === null || _this$state$cost === void 0 ? void 0 : _this$state$cost.toFixed(2))\n                })]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.container,\n              style: {\n                backgroundColor: colors.WHITE,\n                marginTop: '20px'\n              },\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  color: colors.BLACK\n                },\n                children: \"Payment Methods\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.text,\n                style: {\n                  color: colors.GREY,\n                  marginBottom: '20px'\n                },\n                children: \"List of available payment methods. New payment methods can also be added.\"\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.paymentCont,\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.paymentItem,\n                  children: [cards, /*#__PURE__*/_jsxs(\"div\", {\n                    className: styles.paymentRow,\n                    id: styles.addCardPayment,\n                    onClick: function onClick() {\n                      _this3.setState({\n                        addCard: true,\n                        buyKilometers: false,\n                        errorMessage: ''\n                      });\n                    },\n                    children: [/*#__PURE__*/_jsxs(\"div\", {\n                      style: {\n                        flexDirection: 'row',\n                        display: 'flex',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsx(\"img\", {\n                        src: \"/addPaymentCardIcon.svg\",\n                        alt: \"Perch Payment\",\n                        className: styles.visaIcon,\n                        style: {\n                          marginRight: '15px'\n                        }\n                      }), /*#__PURE__*/_jsx(\"p\", {\n                        className: styles.paymentCardNumber,\n                        id: styles.paymentCardNumber_,\n                        children: \"Add Debit / Credit Card\"\n                      })]\n                    }), /*#__PURE__*/_jsx(AiOutlineRight, {\n                      color: colors.BLACK\n                    })]\n                  })]\n                })\n              }), this.state.errorMessage && /*#__PURE__*/_jsx(\"p\", {\n                className: styles.em,\n                style: {\n                  textAlign: 'initial'\n                },\n                children: this.state.errorMessage\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.enterKilometerDiv,\n              style: {\n                marginTop: '20px',\n                marginBottom: '150px',\n                marginLeft: '2.5%',\n                width: '95%'\n              },\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.button2,\n                style: {\n                  backgroundColor: colors.RED\n                },\n                id: styles.buttonBottom,\n                onClick: function onClick() {\n                  _this3.setState({\n                    buyKilometers: false,\n                    addCard: false,\n                    errorMessage: ''\n                  });\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  children: \"Cancel\"\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                onClick: function onClick() {\n                  if (_this3.state.kms < 20) _this3.setState({\n                    errorMessage: 'You can get a minimum of 20 kilometers'\n                  });else if (_this3.state.kms > 100) _this3.setState({\n                    errorMessage: 'You can get a maximum of 100 kilometers'\n                  });else if (_this3.state.selected) {\n                    for (var _i = 0; _i < _this3.state.cards.length; _i++) {\n                      if (_this3.state.selected === _this3.state.cards[_i].last4) _this3.setState({\n                        index: _i,\n                        paymentLoading: true\n                      });\n                    } // buyKilometers.call(this, {\n                    //     cardId: this.state.cards[i].cardId,\n                    //     customerID: this.state.userDetails.stripeCustomerID,\n                    //     quantity: Number(this.state.kms),\n                    //     userID: this.state.userDetails.userID,\n                    //     timestamp: new Date().getTime(),\n                    // })\n\n                  } else _this3.setState({\n                    errorMessage: 'Please select or add a payment method'\n                  });\n                },\n                className: styles.button2,\n                style: {\n                  backgroundColor: colors.GREEN\n                },\n                id: styles.buttonBottom,\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  children: \"Buy Kilometers\"\n                })\n              })]\n            })]\n          }) : this.state.addCard ?\n          /*#__PURE__*/\n          //add card\n          _jsx(_Fragment, {\n            children: /*#__PURE__*/_jsx(AddCardForm, {\n              userID: this.state.userDetails.userID,\n              cancel: function cancel() {\n                _this3.loadCards();\n\n                _this3.setState({\n                  errorMessage: '',\n                  addCard: false,\n                  buyKilometers: false\n                });\n              }\n            })\n          }) :\n          /*#__PURE__*/\n          //main page\n          _jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: styles.container,\n              style: {\n                backgroundColor: colors.WHITE,\n                marginTop: '20px'\n              },\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  color: colors.BLACK\n                },\n                children: \"Kilometers\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.text,\n                style: {\n                  color: colors.GREY\n                },\n                children: \"You can make kilometer purchases from this panel. Also remember that sharing your code with friends who book their first ride automatically gives you free kilometers.\"\n              }), /*#__PURE__*/_jsx(\"img\", {\n                src: \"/walletImage.svg\",\n                alt: \"Purchase Perch Kilometers\",\n                className: styles.walletImage\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  width: 'initial',\n                  marginTop: '20px'\n                },\n                children: \"\".concat(this.state.quantity.toFixed(1), \" kilometers\")\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.button1,\n                style: {},\n                onClick: function onClick() {\n                  _this3.setState({\n                    buyKilometers: true,\n                    addCard: false,\n                    errorMessage: ''\n                  });\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  children: \"Buy kilometers\"\n                })\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.container,\n              style: {\n                backgroundColor: colors.WHITE,\n                marginTop: '20px',\n                marginBottom: '150px'\n              },\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  color: colors.BLACK\n                },\n                children: \"Payment Methods\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.text,\n                style: {\n                  color: colors.GREY,\n                  marginBottom: '20px'\n                },\n                children: \"List of available payment methods. New payment methods can also be added.\"\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.paymentCont,\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.paymentItem,\n                  children: [cards, /*#__PURE__*/_jsxs(\"div\", {\n                    className: styles.paymentRow,\n                    id: styles.addCardPayment,\n                    onClick: function onClick() {\n                      _this3.setState({\n                        addCard: true,\n                        buyKilometers: false,\n                        errorMessage: ''\n                      });\n                    },\n                    children: [/*#__PURE__*/_jsxs(\"div\", {\n                      style: {\n                        flexDirection: 'row',\n                        display: 'flex',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsx(\"img\", {\n                        src: \"/addPaymentCardIcon.svg\",\n                        alt: \"Perch Payment\",\n                        className: styles.visaIcon,\n                        style: {\n                          marginRight: '15px'\n                        }\n                      }), /*#__PURE__*/_jsx(\"p\", {\n                        className: styles.paymentCardNumber,\n                        id: styles.paymentCardNumber_,\n                        children: \"Add Debit / Credit Card\"\n                      })]\n                    }), /*#__PURE__*/_jsx(AiOutlineRight, {\n                      color: colors.BLACK\n                    })]\n                  })]\n                })\n              })]\n            })]\n          })\n        })\n      });\n    }\n  }]);\n\n  return PerchWallet;\n}(React.Component);\n\nexport { PerchWallet as default };\n;\n\nvar PaymentCard = /*#__PURE__*/function (_React$Component2) {\n  _inherits(PaymentCard, _React$Component2);\n\n  var _super2 = _createSuper(PaymentCard);\n\n  function PaymentCard(props) {\n    var _this4;\n\n    _classCallCheck(this, PaymentCard);\n\n    _this4 = _super2.call(this, props);\n    _this4.state = {\n      deleteCard: false,\n      loading: false\n    };\n    return _this4;\n  }\n\n  _createClass(PaymentCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props = this.props,\n          selected = _this$props.selected,\n          setSelected = _this$props.setSelected,\n          card = _this$props.card,\n          userID = _this$props.userID,\n          removeCard = _this$props.removeCard,\n          index = _this$props.index,\n          selectedCard = _this$props.selectedCard;\n      var last4 = card.last4,\n          brand = card.brand;\n      if (this.props.type == 'listOfCards') return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.paymentRow,\n          id: styles.paymentRow_,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            style: {\n              flexDirection: 'row',\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsx(\"img\", {\n              src: brand == 'Visa' ? \"/visaIcon.svg\" : brand == 'Mastercard' ? '/mastercardIcon.svg' : '/addPaymentCardIcon.svg',\n              alt: \"Perch Payment\",\n              className: brand == 'Visa' ? styles.visaIcon : brand == 'Mastercard' ? styles.masterCardIcon : styles.genericCard\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              className: styles.paymentCardNumber,\n              id: styles.paymentCardNumber_,\n              children: [\"XXXX XXXX XXXX \", last4]\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            id: styles.paymentRowButton,\n            children: this.state.deleteCard ? /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.button2,\n                style: {\n                  backgroundColor: colors.RED,\n                  width: '80%'\n                },\n                onClick: function onClick() {\n                  deleteCard.call(_this5, userID, last4, selectedCard);\n                  removeCard(index);\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.paymentCardNumber_,\n                  children: \"Delete this card?\"\n                })\n              }), /*#__PURE__*/_jsx(AiOutlineClose, {\n                className: styles.closeDeletePayment,\n                onClick: function onClick() {\n                  _this5.setState({\n                    deleteCard: false\n                  });\n                }\n              })]\n            }) : /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: selected ? styles.buttonSelected : styles.button2,\n                style: {\n                  backgroundColor: colors.GREEN\n                },\n                onClick: function onClick() {\n                  setSelected(last4);\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.paymentCardNumber_,\n                  children: selected ? 'Selected' : 'Select card'\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.button2,\n                style: {\n                  backgroundColor: colors.RED\n                },\n                onClick: function onClick() {\n                  _this5.setState({\n                    deleteCard: true\n                  });\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.paymentCardNumber_,\n                  children: \"Delete Card\"\n                })\n              })]\n            })\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.sharedLine,\n          style: {\n            marginTop: '20px',\n            width: '100%'\n          }\n        })]\n      });else if (this.props.type == 'pickPayment') return (\n        /*#__PURE__*/\n        //TO MAKE A SELECTED ONE, THE PARENT COMPONENT SHOULD HAVE A SELECTED ITEM ID AND WE COMPARE ID HERE TO SHOW IF IT IS CONFIRMED OR NOT\n        _jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.paymentRow,\n            id: styles.addCardPayment_,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              style: {\n                flexDirection: 'row',\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsx(\"img\", {\n                src: brand == 'Visa' ? \"/visaIcon.svg\" : brand == 'Mastercard' ? '/mastercardIcon.svg' : '/addPaymentCardIcon.svg',\n                alt: \"Perch Payment\",\n                className: brand == 'Visa' ? styles.visaIcon : brand == 'Mastercard' ? styles.masterCardIcon : styles.genericCard\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                className: styles.paymentCardNumber,\n                id: styles.paymentCardNumber_,\n                children: [\"\\u2022\\u2022\\u2022\\u2022 \", last4]\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.pickPaymentSelected,\n              id: selected ? styles.selectedID : styles.selectID,\n              style: {\n                backgroundColor: colors.GREEN\n              },\n              onClick: function onClick() {\n                setSelected(last4);\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                id: styles.paymentCardNumber_,\n                children: selected ? 'Selected' : 'Select'\n              })\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.sharedLine,\n            style: {\n              marginTop: '0px',\n              width: '100%'\n            }\n          })]\n        })\n      );\n    }\n  }]);\n\n  return PaymentCard;\n}(React.Component);\n\n;\n\nvar AddCardForm = function AddCardForm(_ref) {\n  var cancel = _ref.cancel,\n      userID = _ref.userID;\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(''),\n      errorMessage = _useState2[0],\n      setErrorMessage = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var createTokenWithCard = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var cardElement, _yield$stripe$createT, error, token;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n\n              if (!(!stripe || !elements)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              ; // Get a reference to a mounted CardElement. Elements knows how\n              // to find your CardElement because there can only ever be one of\n              // each type of element.\n\n              cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n              _context.next = 7;\n              return stripe.createToken(cardElement);\n\n            case 7:\n              _yield$stripe$createT = _context.sent;\n              error = _yield$stripe$createT.error;\n              token = _yield$stripe$createT.token;\n\n              if (error) {\n                setErrorMessage(error.message);\n                setLoading(false);\n              } else {\n                storeCard.call(_this6, userID, token, setLoading, setErrorMessage, cancel);\n              }\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createTokenWithCard() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.container,\n      style: {\n        backgroundColor: colors.WHITE,\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        className: styles.title,\n        style: {\n          color: colors.BLACK\n        },\n        children: \"Add card\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"Name on Card\",\n        className: styles.inputPaymentPanel,\n        id: styles.inputPaymentPanel_ADD,\n        style: {\n          marginTop: '10px'\n        },\n        value: name,\n        onChange: function onChange(e) {\n          var value = e.target.value;\n          setName(value);\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.inputPaymentPanel,\n        children: /*#__PURE__*/_jsx(CardElement, {\n          options: {\n            hidePostalCode: true,\n            style: {\n              base: {\n                color: '#303238',\n                fontSize: '16px',\n                fontFamily: '\"Gill Sans\", sans-serif',\n                fontSmoothing: 'antialiased',\n                '::placeholder': {\n                  color: '#757575'\n                }\n              },\n              invalid: {\n                color: '#e5424d',\n                ':focus': {\n                  color: '#303238'\n                }\n              }\n            }\n          }\n        })\n      }), errorMessage && /*#__PURE__*/_jsx(\"p\", {\n        className: styles.em,\n        style: {\n          textAlign: 'initial'\n        },\n        children: errorMessage\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.enterKilometerDiv,\n      style: {\n        marginTop: '20px',\n        marginBottom: '150px',\n        marginLeft: '2.5%',\n        width: '95%'\n      },\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: styles.button2,\n        style: {\n          backgroundColor: colors.RED\n        },\n        id: styles.buttonBottom,\n        onClick: cancel,\n        children: /*#__PURE__*/_jsx(\"p\", {\n          className: styles.buttonText1,\n          children: \"Cancel\"\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.button2,\n        style: {\n          backgroundColor: colors.GREEN\n        },\n        id: styles.buttonBottom,\n        onClick: function onClick() {\n          if (name.length <= 3) setErrorMessage('Please enter the full name on the card');else createTokenWithCard();\n        },\n        children: loading ? /*#__PURE__*/_jsx(Loader, {\n          type: \"TailSpin\",\n          color: colors.WHITE,\n          height: '20px',\n          width: '20px'\n        }) : /*#__PURE__*/_jsx(\"p\", {\n          className: styles.buttonText1,\n          children: \"Add Card\"\n        })\n      })]\n    })]\n  });\n};\n\nvar ProcessPayment = function ProcessPayment(_ref3) {\n  var goBack = _ref3.goBack,\n      toSend = _ref3.toSend;\n\n  var _useState4 = useState(false),\n      paymentError = _useState4[0],\n      setPaymentError = _useState4[1];\n\n  var _useState5 = useState(false),\n      paymentCompleted = _useState5[0],\n      setPaymentCompleted = _useState5[1];\n\n  var _useState6 = useState(''),\n      paymentErrorMessage = _useState6[0],\n      setPaymentErrorMessage = _useState6[1];\n\n  var stripe = useStripe(); //const elements = useElements();\n\n  var startPayment = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (stripe) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 2:\n              axios.post(\"https://us-central1-perch-01.cloudfunctions.net/buyPerchKilometers\", _objectSpread(_objectSpread({}, toSend), {}, {\n                status: 'initial'\n              })).then(function (result) {\n                var _result$data = result.data,\n                    status = _result$data.status,\n                    client_secret = _result$data.client_secret,\n                    id = _result$data.id;\n                toSend.paymentIntentId = id;\n                toSend.status = 'confirm_payment';\n\n                if (status == 'succeeded') {\n                  setPaymentCompleted(true);\n                } else if (status == 'requires_action') {\n                  stripe.confirmCardPayment(client_secret).then(function (data) {\n                    if (data.paymentIntent.status == 'succeeded') {\n                      axios.post(\"https://us-central1-perch-01.cloudfunctions.net/buyPerchKilometers\", _objectSpread(_objectSpread({}, toSend), {}, {\n                        nativePayType: 'Debit/Credit Card from website',\n                        paymentIntentId: id,\n                        status: 'payment_completed_on_client'\n                      })).then(function () {\n                        setPaymentCompleted(true);\n                      })[\"catch\"](function (error) {\n                        setPaymentError(true);\n                        setPaymentErrorMessage(error.message);\n                      });\n                    }\n                  })[\"catch\"](function (error) {\n                    setPaymentError(true);\n                    setPaymentErrorMessage(error.message);\n                  });\n                }\n              })[\"catch\"](function (error) {\n                setPaymentError(true);\n                setPaymentErrorMessage(error.message);\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function startPayment() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    startPayment();\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    style: {\n      backgroundColor: colors.WHITE,\n      marginTop: '20px'\n    },\n    children: [!paymentCompleted && !paymentError && /*#__PURE__*/_jsx(Loader, {\n      type: \"TailSpin\",\n      color: colors.GREEN,\n      height: '100px',\n      width: '100px',\n      style: {\n        marginTop: 25\n      }\n    }), /*#__PURE__*/_jsx(\"p\", {\n      className: styles.title,\n      style: {\n        color: colors.GREY,\n        width: 'initial',\n        marginTop: 20,\n        marginBottom: 30,\n        paddingRight: 15,\n        paddingLeft: 15,\n        textAlign: 'center'\n      },\n      children: paymentCompleted ? \"Your payment has been processed. Thank you.\" : paymentError ? \"Your payment failed. Please contact your bank or try again later\" : \"Your payment is currently processing. Please wait.\"\n    }), (paymentCompleted || paymentError) && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.button1,\n      style: {\n        marginTop: 0\n      },\n      onClick: goBack,\n      children: /*#__PURE__*/_jsx(\"p\", {\n        className: styles.buttonText1,\n        children: \"Go back\"\n      })\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}