{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, distanceCalculator, formatDateAllValues, isNumber, M, millisToMinutesAndSeconds, cancelledTripResolver } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport GoogleMapReact from 'google-map-react';\n\nconst polyline = require(\"@mapbox/polyline\");\n\nimport { BiCurrentLocation } from 'react-icons/bi';\nimport * as turf from '@turf/turf'; //for encoding polylines\n\nimport Loader from 'react-loader-spinner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default class CancelledTrips extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadResult\", () => {\n      firebase.database().ref(`cancelled_UNRESOLVED`).once('value', snapshot => {\n        this.setState({\n          result: snapshot.val() ? snapshot.val() : {}\n        });\n      }).catch(error => {\n        alert(error.message);\n      });\n    });\n\n    _defineProperty(this, \"getMapBounds\", (map, maps, legs) => {\n      const bounds = new maps.LatLngBounds();\n      const r = [...legs //[this.props.location.latitude, this.props.location.longitude], //USER LOCATION SHOULD BE HERE\n      //[this.props.destination.latitude, this.props.destination.longitude] //DRIVER LOCATION SHOULD BE HERE\n      ];\n      const line = turf.lineString(r);\n      turf.bboxPolygon(turf.bbox(line)).geometry.coordinates[0].forEach(v => {\n        bounds.extend(new maps.LatLng(v[0], v[1]));\n      });\n      map.fitBounds(bounds);\n    });\n\n    _defineProperty(this, \"renderPolylines\", (map, maps, fitToBoundsOnly) => {\n      function geodesicPolyline(polyline_, m, color) {\n        const poly = polyline.decode(polyline_);\n\n        for (let i = 0; i < poly.length; i++) m.push({\n          lat: poly[i][0],\n          lng: poly[i][1]\n        });\n\n        if (!fitToBoundsOnly) {\n          let geodesicPolyliner = new maps.Polyline({\n            path: m,\n            options: {\n              strokeColor: color,\n              strokeOpacity: 1,\n              strokeWeight: 4\n            }\n          });\n          geodesicPolyliner.setMap(map);\n        }\n      }\n\n      ;\n      const {\n        polylines\n      } = this.state.currentData;\n      let markers1 = [],\n          markers2 = [],\n          markers3 = [];\n      if (polylines !== null && polylines !== void 0 && polylines.firstLeg) geodesicPolyline(polylines === null || polylines === void 0 ? void 0 : polylines.firstLeg, markers1, colors.GREEN);\n      if (polylines !== null && polylines !== void 0 && polylines.secondLeg) geodesicPolyline(polylines === null || polylines === void 0 ? void 0 : polylines.secondLeg, markers2, colors.BLUE);\n      if (polylines !== null && polylines !== void 0 && polylines.thirdLeg) geodesicPolyline(polylines === null || polylines === void 0 ? void 0 : polylines.thirdLeg, markers3, colors.PURPLE);\n      let newArray = [...markers1, ...markers2, ...markers3];\n      this.getMapBounds(map, maps, newArray.map(v => {\n        return [v.lat, v.lng];\n      }));\n    });\n\n    _defineProperty(this, \"renderDriverMarkers\", tripDetails => {\n      let driverMarkers = [];\n\n      for (let key in tripDetails) {\n        let image = '';\n\n        switch (key) {\n          case '_1':\n            {\n              image = '/greenCarIcon.svg';\n            }\n            break;\n\n          case '_2':\n            {\n              image = '/blueCarIcon.svg';\n            }\n            break;\n\n          case '_3':\n            {\n              image = '/purpleCarIcon.svg';\n            }\n            break;\n        }\n\n        ;\n        driverMarkers.push( /*#__PURE__*/_jsx(\"img\", {\n          lat: tripDetails[key].location.latitude,\n          lng: tripDetails[key].location.longitude,\n          src: image,\n          className: styles.mapIcon\n        }, key));\n      }\n\n      ;\n      return driverMarkers;\n    });\n\n    _defineProperty(this, \"renderCurrentDataCost\", currentData => {\n      const {\n        cost,\n        driverID,\n        tripDetails\n      } = currentData;\n      const {\n        toDrivers,\n        total,\n        usedPerchKms\n      } = cost;\n      let v = [];\n      v.push( /*#__PURE__*/_jsx(_Fragment, {\n        children: !!usedPerchKms && /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.breakdownSpreadApart,\n          style: {\n            marginTop: 20\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Regular',\n              margin: 0\n            },\n            children: \"Perch Kilometers paid\"\n          }), /*#__PURE__*/_jsxs(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Medium',\n              margin: 0\n            },\n            children: [usedPerchKms.toFixed(2), \" km\"]\n          })]\n        }, 'second')\n      }));\n      let cut = 0;\n\n      for (let key in toDrivers) {\n        let value = '';\n        let toCkeckIfCanceller = '';\n\n        switch (key) {\n          case 'firstDriverPay':\n            {\n              value = \"First driver's cut\";\n              toCkeckIfCanceller = '_1';\n            }\n            break;\n\n          case 'secondDriverPay':\n            {\n              value = \"Second driver's cut\";\n              toCkeckIfCanceller = '_2';\n            }\n            break;\n\n          case 'thirdDriverPay':\n            {\n              value = \"Third driver's cut\";\n              toCkeckIfCanceller = '_3';\n            }\n            break;\n        }\n\n        ;\n        cut += toDrivers[key];\n        if (toDrivers[key]) v.push( /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.breakdownSpreadApart,\n          style: {\n            marginTop: 15\n          },\n          children: [/*#__PURE__*/_jsxs(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Regular',\n              margin: 0\n            },\n            children: [value, \" \", /*#__PURE__*/_jsx(\"span\", {\n              style: {\n                fontFamily: 'Gilroy-Semibold',\n                color: colors.GREY\n              },\n              children: driverID == tripDetails[toCkeckIfCanceller].driverID ? ' (CANCELLER)' : ''\n            })]\n          }), /*#__PURE__*/_jsxs(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Medium',\n              margin: 0\n            },\n            children: [\"$\", toDrivers[key]]\n          })]\n        }, key));\n      }\n\n      cut = Number(total) - cut;\n      v.unshift( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Semibold',\n            margin: 0\n          },\n          children: \"Admin's cut\"\n        }), /*#__PURE__*/_jsxs(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Bold',\n            margin: 0\n          },\n          children: [\"$\", cut.toFixed(2)]\n        })]\n      }, 'cut'));\n      v.push( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0,\n            color: colors.GREEN\n          },\n          children: \"Total paid\"\n        }), /*#__PURE__*/_jsxs(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Medium',\n            margin: 0,\n            color: colors.GREEN\n          },\n          children: [\"$\", total]\n        })]\n      }, 'top'));\n      return v;\n    });\n\n    _defineProperty(this, \"renderCurrentDataRefund\", cost => {\n      const {\n        toDrivers,\n        total,\n        usedPerchKms\n      } = cost;\n      let v = [];\n      v.push( /*#__PURE__*/_jsx(_Fragment, {\n        children: !!usedPerchKms && /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.breakdownSpreadApart,\n          style: {\n            marginTop: 15\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Regular',\n              margin: 0\n            },\n            children: \"Refund Rider Perch Kilometers\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            placeholder: `$${usedPerchKms}`,\n            className: styles.searchInput,\n            style: {\n              width: '20%',\n              height: '40px'\n            },\n            value: this.state.refundRiderPerchKms,\n            onChange: event => {\n              const value = event.target.value;\n              if (isNumber(value) && Number(value) <= usedPerchKms || !value) this.setState({\n                refundRiderPerchKms: value\n              });\n            }\n          })]\n        }, '2')\n      }));\n      let cut = 0;\n\n      for (let key in toDrivers) {\n        let value = '';\n        let toEdit = '';\n\n        switch (key) {\n          case 'firstDriverPay':\n            {\n              value = \"First driver's payment\";\n              toEdit = 'payFirstDriver';\n            }\n            break;\n\n          case 'secondDriverPay':\n            {\n              value = \"Second driver's payment\";\n              toEdit = 'paySecondDriver';\n            }\n            break;\n\n          case 'thirdDriverPay':\n            {\n              value = \"Third driver's payment\";\n              toEdit = 'payThirdDriver';\n            }\n            break;\n        }\n\n        ;\n        cut += toDrivers[key];\n        if (toDrivers[key]) v.push( /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.breakdownSpreadApart,\n          style: {\n            marginTop: 15\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Regular',\n              margin: 0\n            },\n            children: value\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            placeholder: `$${toDrivers[key]}`,\n            className: styles.searchInput,\n            style: {\n              width: '20%',\n              height: '40px'\n            },\n            value: this.state[toEdit],\n            onChange: event => {\n              const value = event.target.value;\n              if (isNumber(value) && Number(value) <= toDrivers[key] || !value) this.setState({\n                [toEdit]: value\n              });\n            }\n          })]\n        }, key));\n      }\n\n      ;\n      cut = Number(Number(total) - cut).toFixed(2);\n      v.unshift( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: \"Admin's cut\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          placeholder: `$${cut}`,\n          className: styles.searchInput,\n          style: {\n            width: '20%',\n            height: '40px'\n          },\n          value: this.state.adminCut,\n          onChange: event => {\n            const value = event.target.value;\n            if (isNumber(value) && Number(value) <= cut || !value) this.setState({\n              adminCut: value\n            });\n          }\n        })]\n      }, 'cut'));\n      v.push( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: \"Refund Rider Cash\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          placeholder: `$${total}`,\n          className: styles.searchInput,\n          style: {\n            width: '20%',\n            height: '40px'\n          },\n          value: this.state.refundRiderAmount,\n          onChange: event => {\n            const value = event.target.value;\n            if (isNumber(value) && Number(value) <= Number(total) || !value) this.setState({\n              refundRiderAmount: value\n            });\n          }\n        })]\n      }, `1`));\n      return v;\n    });\n\n    _defineProperty(this, \"costIsBalanced\", () => {\n      const {\n        refundRiderAmount,\n        currentData,\n        payFirstDriver,\n        paySecondDriver,\n        payThirdDriver,\n        adminCut,\n        refundRiderPerchKms,\n        costPerPerchKM\n      } = this.state;\n      const refundedCash = Number(Number(refundRiderAmount == \"\" ? 0 : refundRiderAmount).toFixed(2));\n      const refundedPerchCash = Number(Number((refundRiderPerchKms == \"\" ? 0 : refundRiderPerchKms) * costPerPerchKM).toFixed(2));\n      const total = Number(currentData.cost.total);\n      const totalTaken = total;\n      const totalGiven = Number(Number(payFirstDriver == \"\" ? 0 : payFirstDriver).toFixed(2)) + Number(Number(paySecondDriver == \"\" ? 0 : paySecondDriver).toFixed(2)) + Number(Number(payThirdDriver == \"\" ? 0 : payThirdDriver).toFixed(2)) + Number(Number(adminCut == \"\" ? 0 : adminCut).toFixed(2)) + (refundedCash + refundedPerchCash);\n\n      function f(s) {\n        return s != '';\n      }\n\n      ;\n      const allFieldsFilled = f(refundRiderAmount) && f(payFirstDriver) && f(adminCut) && (!!currentData.cost.usedPerchKms ? f(refundRiderPerchKms) : true) && (!!currentData.cost.toDrivers.secondDriverPay ? f(paySecondDriver) : true) && (!!currentData.cost.toDrivers.thirdDriverPay ? f(payThirdDriver) : true);\n      return {\n        totalCollected: totalTaken.toFixed(2),\n        totalAllocated: totalGiven.toFixed(2),\n        totalLeft: (totalTaken - totalGiven).toFixed(2),\n        balancedBool: totalGiven.toFixed(2) === totalTaken.toFixed(2) && allFieldsFilled\n      };\n    });\n\n    this.state = {\n      index: 0,\n      idRiderSearch: '',\n      idDriverSearch: '',\n      result: {},\n      currentData: null,\n      key: \"\",\n      refundRiderAmount: '',\n      refundRiderPerchKms: '',\n      payFirstDriver: '',\n      paySecondDriver: '',\n      payThirdDriver: '',\n      adminCut: '',\n      costPerPerchKM: 0,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadResult();\n    firebase.database().ref('GOOGLE_KEY').once('value', key => {\n      this.setState({\n        key: key.val()\n      });\n    }).catch(error => console.log(error.message));\n    firebase.database().ref('costPerPerchKM').once('value', cost => {\n      this.setState({\n        costPerPerchKM: cost.val()\n      });\n    }).catch(error => console.log(error.message));\n  }\n\n  renderCurrentDataTripDetails(currentData) {\n    const {\n      tripDetails,\n      userLocation,\n      driverID\n    } = currentData;\n    let tripDetailsRender = [];\n    let i = 0;\n\n    for (let key in tripDetails) {\n      i++;\n      let distance = '';\n      const {\n        status\n      } = tripDetails[key];\n      let value = '';\n\n      switch (key) {\n        case '_1':\n          {\n            value = 'First Trip';\n          }\n          break;\n\n        case '_2':\n          {\n            value = 'Second Trip';\n          }\n          break;\n\n        case '_3':\n          {\n            value = 'Third Trip';\n          }\n          break;\n      }\n\n      ;\n\n      if (userLocation) {\n        let d = distanceCalculator(userLocation.latitude, userLocation.longitude, tripDetails[key].location.latitude, tripDetails[key].location.longitude);\n        let unit = d > 1000 ? 'km' : 'meters';\n        d = d > 1000 ? d / 1000 : d;\n        distance = `(${d.toFixed(2)} ${unit} away)`;\n      }\n\n      tripDetailsRender.push( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsxs(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: [value, \" \", /*#__PURE__*/_jsx(\"span\", {\n            style: {\n              fontFamily: 'Gilroy-Semibold',\n              color: colors.GREY\n            },\n            children: driverID == tripDetails[key].driverID ? ' (CANCELLER)' : ''\n          })]\n        }), /*#__PURE__*/_jsxs(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Medium',\n            margin: 0\n          },\n          children: [status, \" \", /*#__PURE__*/_jsx(\"span\", {\n            style: {\n              color: colors.GREY,\n              fontFamily: 'Gilroy-Semibold'\n            },\n            children: distance\n          })]\n        })]\n      }, key));\n    }\n\n    ;\n    tripDetailsRender.unshift( /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.breakdownSpreadApart,\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        style: {\n          fontFamily: 'Gilroy-Regular',\n          margin: 0\n        },\n        children: \"Trip Number\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        style: {\n          fontFamily: 'Gilroy-Bold',\n          margin: 0\n        },\n        children: i\n      })]\n    }));\n    return tripDetailsRender;\n  }\n\n  renderCurrentDataTripDetailsTime(t1_, startAt) {\n    const t1 = new Date(t1_);\n    const t2 = new Date(startAt.year, M.indexOf(startAt.month), startAt.day, startAt.hour, startAt.min, startAt.sec);\n    const difference = t2.getTime() - t1.getTime();\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: \"Time of trip confirmation\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Medium',\n            margin: 0\n          },\n          children: formatDateAllValues(t1)\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: \"Time of trip cancellation\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Medium',\n            margin: 0\n          },\n          children: formatDateAllValues(t2)\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: \"Duration before trip cancellation\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Medium',\n            margin: 0\n          },\n          children: millisToMinutesAndSeconds(difference)\n        })]\n      })]\n    });\n  }\n\n  render() {\n    let results = [];\n    const keys = Object.keys(this.state.result).sort((a, b) => b - a);\n\n    for (let k = 0; k < keys.length; k++) {\n      const data = this.state.result[keys[k]];\n      console.log(keys[this.state.index]);\n      const {\n        startAt\n      } = data;\n      const displayDate = formatDateAllValues(new Date(startAt.year, M.indexOf(startAt.month), startAt.day, startAt.hour, startAt.min, startAt.sec));\n      results.push( /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.previousMessageSum,\n          onClick: () => {\n            this.setState({\n              currentData: data,\n              index: k\n            });\n          },\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            style: {\n              width: '90px',\n              height: '30px',\n              backgroundColor: data.canceller == 'rider' ? colors.GREEN : colors.BLUE,\n              borderRadius: '5px',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.readOrUnreadText,\n              style: {\n                color: '#ffffff',\n                fontFamily: 'Gilroy-ExtraBold'\n              },\n              children: data.canceller == 'rider' ? 'Rider' : 'Driver'\n            })\n          }), /*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontSize: '105%',\n              fontFamily: 'Gilroy-Bold',\n              color: colors.GREEN\n            },\n            children: /*#__PURE__*/_jsx(\"span\", {\n              style: {\n                color: colors.GREY\n              },\n              children: displayDate\n            })\n          })]\n        }), k == keys.length - 1 ? /*#__PURE__*/_jsx(_Fragment, {}) : /*#__PURE__*/_jsx(\"div\", {\n          className: styles.sharedLine,\n          style: {\n            marginTop: '5px'\n          }\n        })]\n      }));\n    }\n\n    ;\n    const defaultProps = {\n      center: {\n        lat: 0,\n        lng: 0\n      },\n      zoom: 11\n    };\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: styles.cont,\n      children: this.state.currentData ? /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: colors.WHITE,\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: colors.BLACK\n            },\n            children: \"Cancelled Trip\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              width: '90%',\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              marginBottom: '20px'\n            }\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.mapBox,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.mapBoxCenter,\n              onClick: () => {\n                this.renderPolylines(this.map.map_, this.map.maps_, true);\n              },\n              children: /*#__PURE__*/_jsx(BiCurrentLocation, {\n                color: colors.GREEN,\n                size: 25\n              })\n            }), /*#__PURE__*/_jsxs(GoogleMapReact, {\n              ref: map => this.map = map,\n              bootstrapURLKeys: {\n                key: this.state.key\n              },\n              defaultCenter: defaultProps.center,\n              defaultZoom: defaultProps.zoom,\n              options: {\n                fullscreenControl: false,\n                disableDefaultUI: true\n              },\n              onGoogleApiLoaded: ({\n                map,\n                maps\n              }) => this.renderPolylines(map, maps),\n              children: [this.state.currentData.userLocation && /*#__PURE__*/_jsx(\"img\", {\n                lat: this.state.currentData.userLocation.latitude,\n                lng: this.state.currentData.userLocation.longitude,\n                src: '/userIcon.svg',\n                className: styles.mapIcon\n              }), this.renderDriverMarkers(this.state.currentData.tripDetails)]\n            })]\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: colors.GREY,\n              fontFamily: 'Gilroy-SemiBold',\n              marginTop: '40px'\n            },\n            children: \"Breakdown of trip cancellation\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              height: '1px',\n              width: '90%',\n              backgroundColor: colors.GREY,\n              marginTop: '5px'\n            }\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.breakdownSpreadApart,\n            style: {\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              style: {\n                fontFamily: 'Gilroy-Medium',\n                margin: 0\n              },\n              children: \"Canceller\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                width: '90px',\n                height: '30px',\n                backgroundColor: this.state.currentData.canceller == 'rider' ? colors.GREEN : colors.BLUE,\n                borderRadius: '5px',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.readOrUnreadText,\n                style: {\n                  color: '#ffffff',\n                  fontFamily: 'Gilroy-ExtraBold'\n                },\n                children: this.state.currentData.canceller == 'rider' ? 'Rider' : 'Driver'\n              })\n            })]\n          }), this.renderCurrentDataTripDetails(this.state.currentData), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: colors.GREY,\n              fontFamily: 'Gilroy-SemiBold',\n              marginTop: '50px'\n            },\n            children: \"Time details\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              height: '1px',\n              width: '90%',\n              backgroundColor: colors.GREY,\n              marginTop: '5px'\n            }\n          }), this.renderCurrentDataTripDetailsTime(this.state.currentData.time, this.state.currentData.startAt), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: colors.GREY,\n              fontFamily: 'Gilroy-SemiBold',\n              marginTop: '50px'\n            },\n            children: \"Cost Details\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              height: '1px',\n              width: '90%',\n              backgroundColor: colors.GREY,\n              marginTop: '5px'\n            }\n          }), this.renderCurrentDataCost(this.state.currentData), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: colors.GREY,\n              fontFamily: 'Gilroy-SemiBold',\n              marginTop: '50px'\n            },\n            children: \"Refund values\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              height: '1px',\n              width: '90%',\n              backgroundColor: colors.GREY,\n              marginTop: '5px'\n            }\n          }), this.renderCurrentDataRefund(this.state.currentData.cost), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              height: '1px',\n              width: '90%',\n              backgroundColor: colors.GREY,\n              marginTop: '25px'\n            }\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.breakdownSpreadApart,\n            style: {\n              marginTop: '10px'\n            },\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: styles.breakdownParter,\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.breakdownTitle,\n                children: \"Total Collected\"\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                className: styles.breakdownCash,\n                style: {\n                  color: colors.GREY\n                },\n                children: [\"$\", this.costIsBalanced().totalCollected]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.breakdownParter,\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.breakdownTitle,\n                children: \"Total Left\"\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                className: styles.breakdownCash,\n                style: {\n                  color: colors.GREY\n                },\n                children: [\"$\", this.costIsBalanced().totalLeft]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.breakdownParter,\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.breakdownTitle,\n                children: \"Total Allocated\"\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                className: styles.breakdownCash,\n                style: {\n                  color: colors.GREEN\n                },\n                children: [\"$\", this.costIsBalanced().totalAllocated]\n              })]\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.enterKilometerDiv,\n          style: {\n            marginTop: '20px',\n            marginBottom: '150px',\n            marginLeft: '2.5%',\n            width: '95%'\n          },\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: styles.button2,\n            style: {\n              backgroundColor: colors.RED\n            },\n            id: styles.buttonBottom,\n            onClick: () => {\n              this.setState({\n                currentData: null,\n                refundRiderAmount: '',\n                refundRiderPerchKms: '',\n                payFirstDriver: '',\n                paySecondDriver: '',\n                payThirdDriver: '',\n                adminCut: ''\n              });\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Cancel\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: this.costIsBalanced().balancedBool ? styles.button2 : styles.buttonSelected,\n            style: {\n              backgroundColor: colors.GREEN\n            },\n            id: styles.buttonBottom,\n            onClick: () => {\n              if (this.costIsBalanced().balancedBool) {\n                cancelledTripResolver.call({\n                  refundRiderAmount: Number(Number(this.state.refundRiderAmount).toFixed(2)),\n                  refundRiderPerchKm: Number(this.state.refundRiderPerchKms),\n                  driverObjects,\n                  //An array of objects containing {driverID,toPay,driverHistoryRef}\n                  userID: this.state.currentData.riderID,\n                  historyRef: this.state.currentData.historyRef,\n                  paymentIntentId: this.state.currentData.cost.paymentIntentId,\n                  cancelled_UNRESOLVED_KEY: this.state\n                });\n              }\n            },\n            children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n              type: \"TailSpin\",\n              color: colors.WHITE,\n              height: '20px',\n              width: '20px'\n            }) : /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Refund Amount\"\n            })\n          })]\n        })]\n      }) : /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.container,\n        style: {\n          backgroundColor: colors.WHITE,\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          className: styles.title,\n          style: {\n            color: colors.BLACK\n          },\n          children: \"Cancelled Trips\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            width: '90%',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            marginBottom: '20px'\n          }\n        }), results]\n      })\n    });\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/ugo/Documents/Perch_Projects/Perch-Website/functions/panels/adminPanels/cancelledTrips.js"],"names":["React","colors","distanceCalculator","formatDateAllValues","isNumber","M","millisToMinutesAndSeconds","cancelledTripResolver","styles","firebase","GoogleMapReact","polyline","require","BiCurrentLocation","turf","Loader","CancelledTrips","Component","constructor","props","database","ref","once","snapshot","setState","result","val","catch","error","alert","message","map","maps","legs","bounds","LatLngBounds","r","line","lineString","bboxPolygon","bbox","geometry","coordinates","forEach","v","extend","LatLng","fitBounds","fitToBoundsOnly","geodesicPolyline","polyline_","m","color","poly","decode","i","length","push","lat","lng","geodesicPolyliner","Polyline","path","options","strokeColor","strokeOpacity","strokeWeight","setMap","polylines","state","currentData","markers1","markers2","markers3","firstLeg","GREEN","secondLeg","BLUE","thirdLeg","PURPLE","newArray","getMapBounds","tripDetails","driverMarkers","key","image","location","latitude","longitude","mapIcon","cost","driverID","toDrivers","total","usedPerchKms","breakdownSpreadApart","marginTop","fontFamily","margin","toFixed","cut","value","toCkeckIfCanceller","GREY","Number","unshift","searchInput","width","height","refundRiderPerchKms","event","target","toEdit","adminCut","refundRiderAmount","payFirstDriver","paySecondDriver","payThirdDriver","costPerPerchKM","refundedCash","refundedPerchCash","totalTaken","totalGiven","f","s","allFieldsFilled","secondDriverPay","thirdDriverPay","totalCollected","totalAllocated","totalLeft","balancedBool","index","idRiderSearch","idDriverSearch","loading","componentDidMount","loadResult","console","log","renderCurrentDataTripDetails","userLocation","tripDetailsRender","distance","status","d","unit","renderCurrentDataTripDetailsTime","t1_","startAt","t1","Date","t2","year","indexOf","month","day","hour","min","sec","difference","getTime","render","results","keys","Object","sort","a","b","k","data","displayDate","previousMessageSum","backgroundColor","canceller","borderRadius","display","justifyContent","alignItems","readOrUnreadText","fontSize","sharedLine","defaultProps","center","zoom","cont","container","WHITE","title","BLACK","flexDirection","marginBottom","mapBox","mapBoxCenter","renderPolylines","map_","maps_","fullscreenControl","disableDefaultUI","renderDriverMarkers","text","time","renderCurrentDataCost","renderCurrentDataRefund","breakdownParter","breakdownTitle","breakdownCash","costIsBalanced","enterKilometerDiv","marginLeft","button2","RED","buttonBottom","buttonText1","buttonSelected","call","refundRiderPerchKm","driverObjects","userID","riderID","historyRef","paymentIntentId","cancelled_UNRESOLVED_KEY"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, distanceCalculator, formatDateAllValues, isNumber, M, millisToMinutesAndSeconds, cancelledTripResolver } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport GoogleMapReact from 'google-map-react';\nconst polyline = require(\"@mapbox/polyline\");\nimport { BiCurrentLocation } from 'react-icons/bi';\nimport * as turf from '@turf/turf'; //for encoding polylines\nimport Loader from 'react-loader-spinner';\n\nexport default class CancelledTrips extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: 0,\n\n            idRiderSearch: '',\n            idDriverSearch: '',\n            result: {},\n            currentData: null,\n            key: \"\",\n\n            refundRiderAmount: '',\n            refundRiderPerchKms: '',\n            payFirstDriver: '',\n            paySecondDriver: '',\n            payThirdDriver: '',\n            adminCut: '',\n\n            costPerPerchKM: 0,\n\n            loading: false,\n        };\n    };\n    componentDidMount() {\n        this.loadResult();\n        firebase.database().ref('GOOGLE_KEY').once('value', key => {\n            this.setState({ key: key.val() })\n        }).catch(error => console.log(error.message));\n        firebase.database().ref('costPerPerchKM').once('value', cost => {\n            this.setState({ costPerPerchKM: cost.val() })\n        }).catch(error => console.log(error.message));\n    };\n    loadResult = () => {\n        firebase.database().ref(`cancelled_UNRESOLVED`).once('value', snapshot => {\n            this.setState({ result: snapshot.val() ? snapshot.val() : {} })\n        }).catch(error => { alert(error.message) })\n    };\n    getMapBounds = (map, maps, legs) => {\n        const bounds = new maps.LatLngBounds();\n        const r = [\n            ...legs,\n            //[this.props.location.latitude, this.props.location.longitude], //USER LOCATION SHOULD BE HERE\n            //[this.props.destination.latitude, this.props.destination.longitude] //DRIVER LOCATION SHOULD BE HERE\n        ];\n        const line = turf.lineString(r);\n        turf.bboxPolygon(turf.bbox(line)).geometry.coordinates[0].forEach((v => {\n            bounds.extend(new maps.LatLng(\n                v[0],\n                v[1],\n            ));\n        }));\n        map.fitBounds(bounds);\n    };\n    renderPolylines = (map, maps, fitToBoundsOnly) => {\n        function geodesicPolyline(polyline_, m, color) {\n            const poly = polyline.decode(polyline_)\n            for (let i = 0; i < poly.length; i++)\n                m.push({\n                    lat: poly[i][0],\n                    lng: poly[i][1],\n                });\n            if (!fitToBoundsOnly) {\n                let geodesicPolyliner = new maps.Polyline({\n                    path: m,\n                    options: {\n                        strokeColor: color,\n                        strokeOpacity: 1,\n                        strokeWeight: 4,\n                    },\n                })\n                geodesicPolyliner.setMap(map);\n            }\n        };\n        const { polylines } = this.state.currentData;\n        let markers1 = [], markers2 = [], markers3 = [];\n\n        if (polylines?.firstLeg)\n            geodesicPolyline(polylines?.firstLeg, markers1, colors.GREEN);\n        if (polylines?.secondLeg)\n            geodesicPolyline(polylines?.secondLeg, markers2, colors.BLUE);\n        if (polylines?.thirdLeg)\n            geodesicPolyline(polylines?.thirdLeg, markers3, colors.PURPLE);\n\n        let newArray = [...markers1, ...markers2, ...markers3];\n        this.getMapBounds(map, maps, newArray.map(v => { return [v.lat, v.lng] }))\n\n    };\n    renderDriverMarkers = (tripDetails) => {\n        let driverMarkers = [];\n        for (let key in tripDetails) {\n            let image = '';\n            switch (key) {\n                case '_1': { image = '/greenCarIcon.svg'; } break;\n                case '_2': { image = '/blueCarIcon.svg'; } break;\n                case '_3': { image = '/purpleCarIcon.svg'; } break;\n            };\n            driverMarkers.push(\n                <img\n                    key={key}\n                    lat={tripDetails[key].location.latitude}\n                    lng={tripDetails[key].location.longitude}\n                    src={image}\n                    className={styles.mapIcon}\n                />);\n        };\n        return driverMarkers;\n    };\n    renderCurrentDataTripDetails(currentData) {\n        const { tripDetails, userLocation, driverID } = currentData;\n        let tripDetailsRender = [];\n        let i = 0;\n\n        for (let key in tripDetails) {\n            i++;\n            let distance = '';\n            const { status } = tripDetails[key];\n            let value = '';\n            switch (key) {\n                case '_1': { value = 'First Trip'; } break;\n                case '_2': { value = 'Second Trip'; } break;\n                case '_3': { value = 'Third Trip'; } break;\n            };\n            if (userLocation) {\n                let d = distanceCalculator(userLocation.latitude, userLocation.longitude, tripDetails[key].location.latitude, tripDetails[key].location.longitude);\n                let unit = d > 1000 ? 'km' : 'meters';\n                d = d > 1000 ? (d / 1000) : d;\n                distance = `(${d.toFixed(2)} ${unit} away)`;\n            }\n\n            tripDetailsRender.push(\n                <div\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}\n                    key={key}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>{value} <span style={{ fontFamily: 'Gilroy-Semibold', color: colors.GREY }}>{driverID == tripDetails[key].driverID ? ' (CANCELLER)' : ''}</span></p>\n                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>{status} <span style={{ color: colors.GREY, fontFamily: 'Gilroy-Semibold' }}>{distance}</span></p>\n                </div>\n            );\n        };\n\n        tripDetailsRender.unshift(\n            <div\n                className={styles.breakdownSpreadApart}\n                style={{ marginTop: 20, }}\n            >\n                <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Trip Number</p>\n                <p style={{ fontFamily: 'Gilroy-Bold', margin: 0 }}>{i}</p>\n            </div>\n        )\n        return tripDetailsRender;\n    };\n    renderCurrentDataTripDetailsTime(t1_, startAt) {\n        const t1 = new Date(t1_);\n        const t2 = new Date(startAt.year, M.indexOf(startAt.month), startAt.day, startAt.hour, startAt.min, startAt.sec);\n        const difference = t2.getTime() - t1.getTime();\n\n\n        return (\n            <>\n                <div\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Time of trip confirmation</p>\n                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>{formatDateAllValues(t1)}</p>\n                </div>\n                <div\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Time of trip cancellation</p>\n                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>{formatDateAllValues(t2)}</p>\n                </div>\n                <div\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Duration before trip cancellation</p>\n                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>{millisToMinutesAndSeconds(difference)}</p>\n                </div>\n            </>\n        );\n    };\n    renderCurrentDataCost = (currentData) => {\n        const { cost, driverID, tripDetails } = currentData;\n        const { toDrivers, total, usedPerchKms } = cost;\n        let v = [];\n\n        v.push(\n            <>\n                {!!usedPerchKms && <div\n                    key='second'\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 20, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Perch Kilometers paid</p>\n                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>{usedPerchKms.toFixed(2)} km</p>\n                </div>}\n            </>\n        );\n\n        let cut = 0;\n        for (let key in toDrivers) {\n            let value = '';\n            let toCkeckIfCanceller = '';\n            switch (key) {\n                case 'firstDriverPay': {\n                    value = \"First driver's cut\";\n                    toCkeckIfCanceller = '_1';\n                } break;\n                case 'secondDriverPay': {\n                    value = \"Second driver's cut\";\n                    toCkeckIfCanceller = '_2';\n                } break;\n                case 'thirdDriverPay': {\n                    value = \"Third driver's cut\";\n                    toCkeckIfCanceller = '_3';\n                } break;\n            };\n            cut += toDrivers[key];\n            if (toDrivers[key])\n                v.push(\n                    <div\n                        key={key}\n                        className={styles.breakdownSpreadApart}\n                        style={{ marginTop: 15, }}>\n                        <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>{value} <span style={{ fontFamily: 'Gilroy-Semibold', color: colors.GREY }}>{driverID == tripDetails[toCkeckIfCanceller].driverID ? ' (CANCELLER)' : ''}</span></p>\n                        <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>${toDrivers[key]}</p>\n                    </div>\n                );\n        }\n        cut = Number(total) - cut;\n        v.unshift(\n            <div\n                key={'cut'}\n                className={styles.breakdownSpreadApart}\n                style={{ marginTop: 15, }}>\n                <p style={{ fontFamily: 'Gilroy-Semibold', margin: 0, }}>Admin's cut</p>\n                <p style={{ fontFamily: 'Gilroy-Bold', margin: 0, }}>${cut.toFixed(2)}</p>\n            </div>\n        );\n        v.push(\n            <div\n                key='top'\n                className={styles.breakdownSpreadApart}\n                style={{ marginTop: 20, }}>\n                <p style={{ fontFamily: 'Gilroy-Regular', margin: 0, color: colors.GREEN }}>Total paid</p>\n                <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, color: colors.GREEN }}>${total}</p>\n            </div>\n        )\n        return v;\n    };\n    renderCurrentDataRefund = (cost) => {\n        const { toDrivers, total, usedPerchKms } = cost;\n        let v = [];\n\n        v.push(\n            <>\n                {!!usedPerchKms && <div\n                    key={'2'}\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Refund Rider Perch Kilometers</p>\n                    <input\n                        type=\"text\"\n                        placeholder={`$${usedPerchKms}`}\n                        className={styles.searchInput}\n                        style={{ width: '20%', height: '40px' }}\n                        value={this.state.refundRiderPerchKms}\n                        onChange={event => {\n                            const value = event.target.value;\n                            if ((isNumber(value) && Number(value) <= usedPerchKms) || !value)\n                                this.setState({ refundRiderPerchKms: value });\n                        }}\n                    />\n                </div>}\n            </>\n        );\n        let cut = 0;\n        for (let key in toDrivers) {\n            let value = '';\n            let toEdit = '';\n\n            switch (key) {\n                case 'firstDriverPay': {\n                    value = \"First driver's payment\";\n                    toEdit = 'payFirstDriver';\n                } break;\n                case 'secondDriverPay': {\n                    value = \"Second driver's payment\";\n                    toEdit = 'paySecondDriver';\n                } break;\n                case 'thirdDriverPay': {\n                    value = \"Third driver's payment\";\n                    toEdit = 'payThirdDriver';\n                } break;\n            };\n            cut += toDrivers[key];\n            if (toDrivers[key])\n                v.push(\n                    <div\n                        key={key}\n                        className={styles.breakdownSpreadApart}\n                        style={{ marginTop: 15, }}>\n                        <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>{value}</p>\n                        <input\n                            type=\"text\"\n                            placeholder={`$${toDrivers[key]}`}\n                            className={styles.searchInput}\n                            style={{ width: '20%', height: '40px' }}\n                            value={this.state[toEdit]}\n                            onChange={event => {\n                                const value = event.target.value;\n                                if ((isNumber(value) && Number(value) <= toDrivers[key]) || !value)\n                                    this.setState({ [toEdit]: value });\n                            }}\n                        />\n                    </div>\n                );\n        };\n        cut = Number(Number(total) - cut).toFixed(2);\n        v.unshift(\n            <div\n                key={'cut'}\n                className={styles.breakdownSpreadApart}\n                style={{ marginTop: 15, }}>\n                <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Admin's cut</p>\n                <input\n                    type=\"text\"\n                    placeholder={`$${cut}`}\n                    className={styles.searchInput}\n                    style={{ width: '20%', height: '40px' }}\n                    value={this.state.adminCut}\n                    onChange={event => {\n                        const value = event.target.value;\n                        if ((isNumber(value) && Number(value) <= cut) || !value)\n                            this.setState({ adminCut: value });\n                    }}\n                />\n            </div>\n        )\n        v.push(\n            <div\n                key={`1`}\n                className={styles.breakdownSpreadApart}\n                style={{ marginTop: 20, }}>\n                <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Refund Rider Cash</p>\n                <input\n                    type=\"text\"\n                    placeholder={`$${total}`}\n                    className={styles.searchInput}\n                    style={{ width: '20%', height: '40px' }}\n                    value={this.state.refundRiderAmount}\n                    onChange={event => {\n                        const value = event.target.value;\n                        if ((isNumber(value) && Number(value) <= Number(total)) || !value)\n                            this.setState({ refundRiderAmount: value });\n                    }}\n                />\n            </div>\n        )\n        return v;\n    };\n    costIsBalanced = () => {\n        const {\n            refundRiderAmount,\n            currentData,\n            payFirstDriver,\n            paySecondDriver,\n            payThirdDriver,\n            adminCut,\n            refundRiderPerchKms,\n            costPerPerchKM,\n        } = this.state;\n        const refundedCash = Number(Number(refundRiderAmount == \"\" ? 0 : refundRiderAmount).toFixed(2));\n        const refundedPerchCash = Number(Number(((refundRiderPerchKms == \"\" ? 0 : refundRiderPerchKms) * costPerPerchKM)).toFixed(2));\n        const total = Number(currentData.cost.total);\n\n        const totalTaken = total;\n\n        const totalGiven =\n            Number(Number(payFirstDriver == \"\" ? 0 : payFirstDriver).toFixed(2))\n            + Number(Number(paySecondDriver == \"\" ? 0 : paySecondDriver).toFixed(2))\n            + Number(Number(payThirdDriver == \"\" ? 0 : payThirdDriver).toFixed(2))\n            + Number(Number(adminCut == \"\" ? 0 : adminCut).toFixed(2))\n            + (refundedCash + refundedPerchCash);\n        function f(s) {\n            return s != '';\n        };\n        const allFieldsFilled =\n            f(refundRiderAmount) &&\n            f(payFirstDriver) &&\n            f(adminCut) &&\n            (!!currentData.cost.usedPerchKms ? f(refundRiderPerchKms) : true) &&\n            (!!currentData.cost.toDrivers.secondDriverPay ? f(paySecondDriver) : true) &&\n            (!!currentData.cost.toDrivers.thirdDriverPay ? f(payThirdDriver) : true);\n\n        return {\n            totalCollected: totalTaken.toFixed(2),\n            totalAllocated: totalGiven.toFixed(2),\n            totalLeft: (totalTaken - totalGiven).toFixed(2),\n            balancedBool: (totalGiven.toFixed(2) === totalTaken.toFixed(2)) && allFieldsFilled,\n        };\n\n\n    };\n    render() {\n        let results = [];\n        const keys = Object.keys(this.state.result).sort((a, b) => b - a);\n        for (let k = 0; k < keys.length; k++) {\n            const data = this.state.result[keys[k]];\n            console.log(keys[this.state.index])\n            const { startAt } = data;\n            const displayDate = formatDateAllValues(new Date(startAt.year, M.indexOf(startAt.month), startAt.day, startAt.hour, startAt.min, startAt.sec))\n            results.push(\n                <>\n                    <div className={styles.previousMessageSum} onClick={() => {\n                        this.setState({ currentData: data, index: k })\n                    }}>\n                        <div style={{ width: '90px', height: '30px', backgroundColor: data.canceller == 'rider' ? colors.GREEN : colors.BLUE, borderRadius: '5px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                            <p className={styles.readOrUnreadText} style={{ color: '#ffffff', fontFamily: 'Gilroy-ExtraBold' }}>{data.canceller == 'rider' ? 'Rider' : 'Driver'}</p>\n                        </div>\n                        <p style={{ fontSize: '105%', fontFamily: 'Gilroy-Bold', color: colors.GREEN }}>\n                            {/* {`$ ${data.cost.total}   `}-  */}\n                            <span style={{ color: colors.GREY }}>{displayDate}</span></p>\n                    </div>\n                    {\n                        k == keys.length - 1 ?\n                            <></> :\n                            <div className={styles.sharedLine} style={{ marginTop: '5px' }}></div>\n                    }\n                </>\n            )\n        };\n\n        const defaultProps = {\n            center: {\n                lat: 0,\n                lng: 0\n            },\n            zoom: 11\n        };\n\n        return (\n            <div className={styles.cont}>\n                {\n                    this.state.currentData ?\n                        <>\n                            <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                                <p className={styles.title} style={{ color: colors.BLACK }}>Cancelled Trip</p>\n                                <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '20px' }}>\n                                </div>\n                                <div className={styles.mapBox}>\n                                    <div className={styles.mapBoxCenter}\n                                        onClick={() => {\n                                            this.renderPolylines(this.map.map_, this.map.maps_, true);\n                                        }}\n                                    >\n                                        <BiCurrentLocation color={colors.GREEN} size={25} />\n                                    </div>\n                                    <GoogleMapReact\n                                        ref={(map) => this.map = map}\n                                        bootstrapURLKeys={{ key: this.state.key }}\n                                        defaultCenter={defaultProps.center}\n                                        defaultZoom={defaultProps.zoom}\n                                        options={{\n                                            fullscreenControl: false,\n                                            disableDefaultUI: true,\n                                        }}\n                                        onGoogleApiLoaded={({ map, maps }) => this.renderPolylines(map, maps)}\n                                    >\n                                        {this.state.currentData.userLocation &&\n                                            <img\n                                                lat={this.state.currentData.userLocation.latitude}\n                                                lng={this.state.currentData.userLocation.longitude}\n                                                src={'/userIcon.svg'}\n                                                className={styles.mapIcon}\n                                            />}\n                                        {this.renderDriverMarkers(this.state.currentData.tripDetails)}\n                                    </GoogleMapReact>\n                                </div>\n                                <p className={styles.text} style={{ color: colors.GREY, fontFamily: 'Gilroy-SemiBold', marginTop: '40px' }}>\n                                    Breakdown of trip cancellation\n                                </p>\n                                <div style={{ height: '1px', width: '90%', backgroundColor: colors.GREY, marginTop: '5px' }}></div>\n                                <div className={styles.breakdownSpreadApart}\n                                    style={{ marginTop: '20px' }}\n                                >\n                                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0 }}>Canceller</p>\n                                    <div style={{ width: '90px', height: '30px', backgroundColor: this.state.currentData.canceller == 'rider' ? colors.GREEN : colors.BLUE, borderRadius: '5px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                        <p className={styles.readOrUnreadText} style={{ color: '#ffffff', fontFamily: 'Gilroy-ExtraBold' }}>{this.state.currentData.canceller == 'rider' ? 'Rider' : 'Driver'}</p>\n                                    </div>\n                                </div>\n                                {this.renderCurrentDataTripDetails(this.state.currentData)}\n\n                                <p className={styles.text} style={{ color: colors.GREY, fontFamily: 'Gilroy-SemiBold', marginTop: '50px' }}>\n                                    Time details\n                                </p>\n                                <div style={{ height: '1px', width: '90%', backgroundColor: colors.GREY, marginTop: '5px' }}></div>\n                                {this.renderCurrentDataTripDetailsTime(this.state.currentData.time, this.state.currentData.startAt)}\n                                <p className={styles.text} style={{ color: colors.GREY, fontFamily: 'Gilroy-SemiBold', marginTop: '50px' }}>\n                                    Cost Details\n                                </p>\n                                <div style={{ height: '1px', width: '90%', backgroundColor: colors.GREY, marginTop: '5px' }}></div>\n                                {this.renderCurrentDataCost(this.state.currentData)}\n                                <p className={styles.text} style={{ color: colors.GREY, fontFamily: 'Gilroy-SemiBold', marginTop: '50px' }}>\n                                    Refund values\n                                </p>\n                                <div style={{ height: '1px', width: '90%', backgroundColor: colors.GREY, marginTop: '5px' }}></div>\n                                {this.renderCurrentDataRefund(this.state.currentData.cost)}\n                                <div style={{ height: '1px', width: '90%', backgroundColor: colors.GREY, marginTop: '25px' }}></div>\n                                <div\n                                    className={styles.breakdownSpreadApart}\n                                    style={{ marginTop: '10px', }}\n                                >\n                                    <div className={styles.breakdownParter}>\n                                        <p className={styles.breakdownTitle}>Total Collected</p>\n                                        <p className={styles.breakdownCash} style={{ color: colors.GREY }}>${this.costIsBalanced().totalCollected}</p>\n                                    </div>\n                                    <div className={styles.breakdownParter}>\n                                        <p className={styles.breakdownTitle}>Total Left</p>\n                                        <p className={styles.breakdownCash} style={{ color: colors.GREY }}>${this.costIsBalanced().totalLeft}</p>\n                                    </div>\n                                    <div className={styles.breakdownParter}>\n                                        <p className={styles.breakdownTitle}>Total Allocated</p>\n                                        <p className={styles.breakdownCash} style={{ color: colors.GREEN }}>${this.costIsBalanced().totalAllocated}</p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                                <div\n                                    className={styles.button2}\n                                    style={{ backgroundColor: colors.RED }}\n                                    id={styles.buttonBottom}\n                                    onClick={() => {\n                                        this.setState({\n                                            currentData: null,\n                                            refundRiderAmount: '',\n                                            refundRiderPerchKms: '',\n                                            payFirstDriver: '',\n                                            paySecondDriver: '',\n                                            payThirdDriver: '',\n                                            adminCut: '',\n                                        })\n                                    }}>\n                                    <p className={styles.buttonText1}>Cancel</p>\n                                </div>\n                                <div\n                                    className={this.costIsBalanced().balancedBool ? styles.button2 : styles.buttonSelected}\n                                    style={{ backgroundColor: colors.GREEN }}\n                                    id={styles.buttonBottom}\n                                    onClick={() => {\n                                        if (this.costIsBalanced().balancedBool) {\n                                            cancelledTripResolver.call({\n                                                refundRiderAmount: Number(Number(this.state.refundRiderAmount).toFixed(2)),\n                                                refundRiderPerchKm: Number(this.state.refundRiderPerchKms),\n                                                driverObjects, //An array of objects containing {driverID,toPay,driverHistoryRef}\n                                                userID: this.state.currentData.riderID,\n                                                historyRef: this.state.currentData.historyRef,\n                                                paymentIntentId: this.state.currentData.cost.paymentIntentId,\n                                                cancelled_UNRESOLVED_KEY: this.state,\n                                            })\n                                        }\n                                    }}>\n                                    {this.state.loading ?\n                                        <Loader\n                                            type=\"TailSpin\"\n                                            color={colors.WHITE}\n                                            height={'20px'}\n                                            width={'20px'} /> :\n                                        <p className={styles.buttonText1}>Refund Amount</p>}\n                                </div>\n                            </div>\n                        </>\n                        :\n                        <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                            <p className={styles.title} style={{ color: colors.BLACK }}>Cancelled Trips</p>\n                            <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '20px' }}>\n                                {/* <input\n                            type=\"text\"\n                            placeholder=\"Search riders by email / userID\"\n                            className={styles.searchInput}\n                            style={{ width: '48%' }}\n                            value={this.state.idRiderSearch}\n                            onChange={event => {\n                                this.setState({ idRiderSearch: event.target.value });\n                            }}\n                        />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search drivers by email / userID\"\n                            className={styles.searchInput}\n                            style={{ width: '48%' }}\n                            value={this.state.idRiderSearch}\n                            onChange={event => {\n                                this.setState({ idRiderSearch: event.target.value });\n                            }}\n                        /> */}\n                            </div>\n\n                            {results}\n\n                        </div>}\n            </div>\n        );\n    };\n};"]},"metadata":{},"sourceType":"module"}