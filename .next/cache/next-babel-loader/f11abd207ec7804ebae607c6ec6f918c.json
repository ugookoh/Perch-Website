{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BsDot } from 'react-icons/bs';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { replyFeedback, dateOfQuery, colors } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default class UnreadMessages extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadResult\", () => {\n      if (this.state.userDetails) {\n        const ref = this.state.riderOrDriver == 'Rider' ? `analytics/unansweredUserFeedbackMessages` : `analytics/unansweredDriverFeedbackMessages`;\n        firebase.database().ref(ref).once('value', snapshot => {\n          this.setState({\n            result: snapshot.val() ? snapshot.val() : {}\n          });\n        });\n      }\n    });\n\n    this.state = {\n      idSearch: '',\n      result: {},\n      userDetails: this.props.userDetails,\n      showMessage: false,\n      response: '',\n      riderOrDriver: 'Rider',\n      toShow: null,\n      showResponse: false,\n      responseDate: 0\n    };\n  }\n\n  componentDidMount() {\n    this.loadResult();\n  }\n\n  loadMessage(path, timestamp, senderID) {\n    const ref = this.state.riderOrDriver == 'Rider' ? `userFeedback/${path}` : `driverFeedback/${path}`;\n    firebase.database().ref(ref).once('value', snapshot => {\n      this.setState({\n        toShow: _objectSpread(_objectSpread({}, snapshot.val()), {}, {\n          timestamp: timestamp,\n          senderID: senderID\n        }),\n        showMessage: true,\n        showResponse: false\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.userDetails && this.props.userDetails) this.setState({\n      userDetails: this.props.userDetails\n    }, () => {\n      this.loadResult();\n    });\n    let results = [];\n    const keys = Object.keys(this.state.result).sort();\n\n    for (let k = 0; k < keys.length; k++) {\n      const path = this.state.result[keys[k]].path;\n      const a = path.indexOf('/') + 1;\n      const b = path.length;\n      const timestamp = Number(path.slice(a, b));\n      const senderID = path.slice(0, a - 1);\n      results.push( /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.previousMessageSum,\n          onClick: () => {\n            this.loadMessage(this.state.result[keys[k]].path, timestamp, senderID);\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontSize: '95%'\n            },\n            children: this.state.result[keys[k]].subject\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.previousMessageDate,\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              style: {\n                fontFamily: 'Gilroy-Semibold',\n                fontSize: '75%',\n                marginRight: '-10px',\n                paddingLeft: '10px'\n              },\n              children: dateOfQuery(timestamp)\n            }), /*#__PURE__*/_jsx(BsDot, {\n              size: '55px',\n              color: colors.GREEN\n            })]\n          })]\n        }), k == keys.length - 1 ? /*#__PURE__*/_jsx(_Fragment, {}) : /*#__PURE__*/_jsx(\"div\", {\n          className: styles.sharedLine,\n          style: {\n            marginTop: '5px'\n          }\n        })]\n      }));\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: styles.cont,\n      children: this.state.showMessage ? /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: colors.WHITE,\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxs(\"p\", {\n            className: styles.title,\n            style: {\n              color: colors.BLACK,\n              marginBottom: '30px'\n            },\n            children: [this.state.toShow.subject, \": \", /*#__PURE__*/_jsxs(\"span\", {\n              style: {\n                fontFamily: 'Gilroy-Light',\n                fontSize: '90%'\n              },\n              children: [\"( Sender ID: \", this.state.toShow.senderID, \" )\"]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.previousMessageC,\n            style: {\n              alignItems: 'flex-start'\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.previousMessageCol,\n              style: {\n                backgroundColor: 'rgba(145, 134, 134, 0.5)'\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                style: {\n                  fontSize: '95%',\n                  color: colors.BLACK,\n                  lineHeight: '150%',\n                  paddingRight: '10px',\n                  paddingLeft: '10px'\n                },\n                children: this.state.toShow.body\n              })\n            }), /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                fontFamily: 'Gilroy-Semibold',\n                fontSize: '75%'\n              },\n              children: dateOfQuery(this.state.toShow.timestamp)\n            })]\n          }), this.state.showResponse ? /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.previousMessageC,\n            style: {\n              alignItems: 'flex-end'\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.previousMessageCol,\n              style: {\n                backgroundColor: colors.GREEN\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                style: {\n                  fontSize: '95%',\n                  color: colors.WHITE,\n                  lineHeight: '150%',\n                  paddingRight: '10px',\n                  paddingLeft: '10px'\n                },\n                children: this.state.response\n              })\n            }), /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                fontFamily: 'Gilroy-Semibold',\n                fontSize: '75%'\n              },\n              children: dateOfQuery(this.state.responseDate)\n            })]\n          }) : /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.sharedLine\n            }), /*#__PURE__*/_jsx(\"textarea\", {\n              type: \"text\",\n              placeholder: \"Enter your response here\",\n              className: styles.contactUsContent //style={{ width: '100%' }}\n              ,\n              value: this.state.response,\n              onChange: event => {\n                this.setState({\n                  response: event.target.value\n                });\n              }\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.enterKilometerDiv,\n          style: {\n            marginTop: '20px',\n            marginBottom: '150px',\n            marginLeft: '2.5%',\n            width: '95%'\n          },\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: styles.button2,\n            style: {\n              backgroundColor: colors.RED\n            },\n            id: styles.buttonBottom,\n            onClick: () => {\n              this.setState({\n                showMessage: false\n              });\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Cancel\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.button2,\n            style: {\n              backgroundColor: colors.GREEN\n            },\n            id: styles.buttonBottom,\n            onClick: () => {\n              if (!this.state.showResponse) replyFeedback.call(this, this.state.response, this.state.riderOrDriver, this.state.toShow.senderID, this.state.toShow.timestamp);else alert('Response already sent');\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Send response\"\n            })\n          })]\n        })]\n      }) : /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.container,\n        style: {\n          backgroundColor: colors.WHITE,\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          className: styles.title,\n          style: {\n            color: colors.BLACK\n          },\n          children: \"Unread messages\"\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            width: '90%',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            style: {\n              width: '90%',\n              height: '10px'\n            }\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.readOrUnreadCont,\n            onClick: () => {\n              this.setState({\n                riderOrDriver: this.state.riderOrDriver == 'Rider' ? 'Driver' : 'Rider'\n              }, () => {\n                this.loadResult();\n              });\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.readOrUnreadText,\n              children: this.state.riderOrDriver\n            })\n          })]\n        }), results]\n      })\n    });\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/edokoh9/Documents/PerchWebsite/perch/functions/panels/adminPanels/unreadMessages.js"],"names":["firebase","React","BsDot","replyFeedback","dateOfQuery","colors","styles","UnreadMessages","Component","constructor","props","state","userDetails","ref","riderOrDriver","database","once","snapshot","setState","result","val","idSearch","showMessage","response","toShow","showResponse","responseDate","componentDidMount","loadResult","loadMessage","path","timestamp","senderID","render","results","keys","Object","sort","k","length","a","indexOf","b","Number","slice","push","previousMessageSum","fontSize","subject","previousMessageDate","fontFamily","marginRight","paddingLeft","GREEN","sharedLine","marginTop","cont","container","backgroundColor","WHITE","title","color","BLACK","marginBottom","previousMessageC","alignItems","previousMessageCol","lineHeight","paddingRight","body","contactUsContent","event","target","value","enterKilometerDiv","marginLeft","width","button2","RED","buttonBottom","buttonText1","call","alert","display","flexDirection","justifyContent","height","readOrUnreadCont","readOrUnreadText"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BsDot } from 'react-icons/bs';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport {\n    replyFeedback,\n    dateOfQuery,\n    colors\n} from '../../functions';\nimport styles from '../panel_layout.module.css';\n\n\n\nexport default class UnreadMessages extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            idSearch: '',\n            result: {},\n            userDetails: this.props.userDetails,\n            showMessage: false,\n            response: '',\n            riderOrDriver: 'Rider',\n            toShow: null,\n            showResponse: false,\n            responseDate: 0,\n        };\n    }\n    componentDidMount() {\n        this.loadResult();\n    }\n    loadResult = () => {\n        if (this.state.userDetails) {\n            const ref = this.state.riderOrDriver == 'Rider' ? `analytics/unansweredUserFeedbackMessages` : `analytics/unansweredDriverFeedbackMessages`;\n            firebase.database().ref(ref).once('value', snapshot => {\n                this.setState({ result: snapshot.val() ? snapshot.val() : {} });\n            })\n        }\n    };\n    loadMessage(path, timestamp, senderID) {\n        const ref = this.state.riderOrDriver == 'Rider' ? `userFeedback/${path}` : `driverFeedback/${path}`;\n        firebase.database().ref(ref).once('value', snapshot => {\n            this.setState({\n                toShow: {\n                    ...snapshot.val(),\n                    timestamp: timestamp,\n                    senderID: senderID\n                },\n                showMessage: true,\n                showResponse: false,\n            });\n        });\n    };\n\n    render() {\n        if (!this.state.userDetails && this.props.userDetails)\n            this.setState({ userDetails: this.props.userDetails }, () => { this.loadResult(); });\n\n        let results = [];\n        const keys = Object.keys(this.state.result).sort();\n        for (let k = 0; k < keys.length; k++) {\n\n            const path = this.state.result[keys[k]].path;\n            const a = path.indexOf('/') + 1;\n            const b = path.length;\n            const timestamp = Number(path.slice(a, b));\n            const senderID = path.slice(0, a - 1);\n            results.push(\n                <>\n                    <div className={styles.previousMessageSum} onClick={() => {\n                        this.loadMessage(this.state.result[keys[k]].path, timestamp, senderID)\n                    }}>\n                        <p style={{ fontSize: '95%' }}>{this.state.result[keys[k]].subject}</p>\n                        <div className={styles.previousMessageDate}>\n                            <p style={{ fontFamily: 'Gilroy-Semibold', fontSize: '75%', marginRight: '-10px', paddingLeft: '10px' }}>\n                                {dateOfQuery(timestamp)}\n                            </p>\n                            <BsDot size={'55px'} color={colors.GREEN} />\n                        </div>\n                    </div>\n                    {\n                        k == keys.length - 1 ?\n                            <></> :\n                            <div className={styles.sharedLine} style={{ marginTop: '5px' }}></div>\n                    }\n                </>\n            )\n        }\n\n        return (\n            <div className={styles.cont}>\n                {this.state.showMessage ?\n                    <>\n                        <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                            <p className={styles.title} style={{ color: colors.BLACK, marginBottom: '30px' }}>\n                                {this.state.toShow.subject}: <span style={{ fontFamily: 'Gilroy-Light', fontSize: '90%' }}>( Sender ID: {this.state.toShow.senderID} )</span>\n                            </p>\n\n                            <div className={styles.previousMessageC} style={{ alignItems: 'flex-start' }}>\n                                <div className={styles.previousMessageCol} style={{ backgroundColor: 'rgba(145, 134, 134, 0.5)' }}>\n                                    <p style={{ fontSize: '95%', color: colors.BLACK, lineHeight: '150%', paddingRight: '10px', paddingLeft: '10px' }}>\n                                        {this.state.toShow.body}\n                                    </p>\n                                </div>\n                                <p style={{ fontFamily: 'Gilroy-Semibold', fontSize: '75%', }}>\n                                    {dateOfQuery(this.state.toShow.timestamp)}\n                                </p>\n                            </div>\n                            {this.state.showResponse ?\n                                <div className={styles.previousMessageC} style={{ alignItems: 'flex-end' }}>\n                                    <div className={styles.previousMessageCol} style={{ backgroundColor: colors.GREEN }}>\n                                        <p style={{ fontSize: '95%', color: colors.WHITE, lineHeight: '150%', paddingRight: '10px', paddingLeft: '10px' }}>\n                                            {this.state.response}\n                                        </p>\n                                    </div>\n                                    <p style={{ fontFamily: 'Gilroy-Semibold', fontSize: '75%', }}>\n                                        {dateOfQuery(this.state.responseDate)}\n                                    </p>\n                                </div> :\n                                <>\n                                    <div className={styles.sharedLine}></div>\n                                    <textarea\n                                        type=\"text\"\n                                        placeholder=\"Enter your response here\"\n                                        className={styles.contactUsContent}\n                                        //style={{ width: '100%' }}\n                                        value={this.state.response}\n                                        onChange={event => { this.setState({ response: event.target.value }) }}\n                                    />\n                                </>\n                            }\n\n                        </div>\n\n                        <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                            <div\n                                className={styles.button2}\n                                style={{ backgroundColor: colors.RED }}\n                                id={styles.buttonBottom}\n                                onClick={() => { this.setState({ showMessage: false }) }}>\n                                <p className={styles.buttonText1}>Cancel</p>\n                            </div>\n                            <div\n                                className={styles.button2}\n                                style={{ backgroundColor: colors.GREEN }}\n                                id={styles.buttonBottom}\n                                onClick={() => {\n                                    if (!this.state.showResponse)\n                                        replyFeedback.call(this, this.state.response, this.state.riderOrDriver, this.state.toShow.senderID, this.state.toShow.timestamp);\n                                    else\n                                        alert('Response already sent')\n                                }}>\n                                <p className={styles.buttonText1}>Send response</p>\n                            </div>\n                        </div>\n\n                    </> :\n                    <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                        <p className={styles.title} style={{ color: colors.BLACK }}>Unread messages</p>\n                        <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n\n                            {/* <input\n                                type=\"text\"\n                                placeholder=\"Search by email / userID\"\n                                className={styles.searchInput}\n                                //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n                                value={this.state.idSearch}\n                                onChange={event => {\n                                    this.setState({ idSearch: event.target.value });\n                                }}\n                            /> */}\n                            <div style={{ width: '90%', height: '10px' }}></div>\n                            <div\n                                className={styles.readOrUnreadCont}\n                                onClick={() => {\n                                    this.setState({ riderOrDriver: this.state.riderOrDriver == 'Rider' ? 'Driver' : 'Rider' }, () => {\n                                        this.loadResult();\n                                    })\n                                }}>\n                                <p className={styles.readOrUnreadText}>{this.state.riderOrDriver}</p>\n                            </div>\n                        </div>\n                        {results}\n                    </div>}\n            </div>\n        );\n    };\n};"]},"metadata":{},"sourceType":"module"}