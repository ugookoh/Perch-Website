{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { GiClick } from 'react-icons/gi';\nimport { RiShieldCheckFill } from 'react-icons/ri';\nimport Loader from 'react-loader-spinner';\nimport { colors } from '../../functions';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { changePassword, deleteAccount, sendVerification } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst [GREEN, WHITE, GREY, BLACK, RED, BLUE_TEXT, BLUE, PURPLE, YELLOW] = ['#4EB848', '#FFFFFF', '#959AAC', '#000000', '#FF0000', '#284ED6', '#1970A7', '#A031AF', '#F0E23D'];\nexport default class Settings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"setImage\", photoRef => {\n      firebase.storage().ref(`${photoRef}`).getDownloadURL().then(result => {\n        this.setState({\n          url: result\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n    });\n\n    _defineProperty(this, \"sendVerificationCode\", type => {\n      this.setState({\n        timer: 60\n      }, () => {\n        const time = setInterval(() => {\n          if (this.state.timer == 0) clearInterval(time);else this.setState({\n            timer: this.state.timer - 1\n          });\n        }, 1000);\n      });\n      if (this.state.timer == 0) switch (type) {\n        case 'email':\n          {\n            sendVerification(this.state.userDetails.userID, 'email', 'storeAndSend', '', '', this.state.newEmail, this.state.userDetails.firstName);\n            this.setState({\n              toShow: 'verify',\n              toVerify: 'email'\n            });\n          }\n          break;\n\n        case 'phoneNumber':\n          {\n            sendVerification(this.state.userDetails.userID, 'phoneNumber', 'storeAndSend', '', this.state.newPhoneNumber, '', this.state.userDetails.firstName);\n            this.setState({\n              toShow: 'verify',\n              toVerify: 'phone number'\n            });\n          }\n          break;\n      }\n      ;\n    });\n\n    this.state = {\n      toShow: 'default',\n      //default, changePassword, verify, whyDeleteAccount,logInToDeleteAccount,\n      toVerify: '',\n      url: null,\n      userDetails: this.props.userDetails,\n      newEmail: this.props.userDetails ? this.props.userDetails.email : '',\n      newPhoneNumber: this.props.userDetails ? this.props.userDetails.phoneNumber : '',\n      currentPassword: '',\n      newPassword: '',\n      confirmNewPassword: '',\n      loading: false,\n      errorMessage: '',\n      deleteAccountReason: '',\n      email1: '',\n      password1: '',\n      timer: 0,\n      emailVerified: false,\n      phoneVerified: true,\n      verifyText: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setImage(this.state.userDetails.photoRef);\n    firebase.database().ref(`users/${this.state.userDetails.userID}/summarizedHistory`).on('value', snap => {\n      if (snap.val()) this.setState({\n        emailVerified: snap.val().emailVerified,\n        phoneVerified: snap.val().phoneVerified\n      });\n    });\n  }\n\n  render() {\n    let content = /*#__PURE__*/_jsx(_Fragment, {});\n\n    if (!this.state.userDetails && this.props.userDetails) this.setState({\n      userDetails: this.props.userDetails,\n      newEmail: this.props.userDetails.email,\n      newPhoneNumber: this.props.userDetails.phoneNumber\n    }, () => {\n      this.setImage(this.state.userDetails.photoRef);\n    });\n\n    switch (this.state.toShow) {\n      case 'default':\n        {\n          content = /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: BLACK,\n                marginBottom: '15px'\n              },\n              children: `User details`\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.enterKilometerDiv,\n              style: {\n                margin: '0px',\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"First Name\",\n                className: styles.inputPaymentPanel,\n                id: styles.inputSettings,\n                style: {\n                  width: '49%',\n                  margin: '0px'\n                },\n                value: this.state.userDetails ? this.state.userDetails.firstName : 'First Name',\n                disabled: true\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Last Name\",\n                className: styles.inputPaymentPanel,\n                id: styles.inputSettings,\n                style: {\n                  width: '49%',\n                  margin: '0px'\n                },\n                value: this.state.userDetails ? this.state.userDetails.lastName : 'Last Name',\n                disabled: true\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.enterKilometerDiv,\n              id: styles.inputSettingCont_,\n              children: [/*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Email Address\",\n                className: styles.inputPaymentPanel,\n                value: this.state.newEmail,\n                onChange: event => {\n                  this.setState({\n                    newEmail: event.target.value\n                  });\n                },\n                id: styles.inputSettingCont_L\n              }), this.state.emailVerified && this.state.userDetails.email == this.state.newEmail ? /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.pickPaymentSelected,\n                style: {\n                  backgroundColor: this.props.type == 'Driver' ? '#39A2E5' : '#5EEF56'\n                },\n                id: styles.inputSettingCont_R,\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.settingsVerifyOrNot,\n                  children: \"Verified\"\n                }), /*#__PURE__*/_jsx(RiShieldCheckFill, {\n                  className: styles.settingsVerifyOrNotIcon,\n                  color: WHITE\n                })]\n              }) : /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.pickPaymentSelected,\n                style: {\n                  backgroundColor: '#FF4040'\n                },\n                id: styles.inputSettingCont_R_VERIFYNOW,\n                onClick: () => {\n                  this.sendVerificationCode('email');\n                },\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.settingsVerifyOrNot,\n                  children: \"Verify Now\"\n                }), /*#__PURE__*/_jsx(GiClick, {\n                  className: styles.settingsVerifyOrNotIcon,\n                  color: WHITE\n                })]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.enterKilometerDiv,\n              id: styles.inputSettingCont_,\n              children: [/*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Phone Number\",\n                className: styles.inputPaymentPanel,\n                value: this.state.newPhoneNumber,\n                onChange: event => {\n                  this.setState({\n                    newPhoneNumber: event.target.value\n                  });\n                },\n                id: styles.inputSettingCont_L\n              }), this.state.phoneVerified && this.state.userDetails.phoneNumber == this.state.newPhoneNumber ? /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.pickPaymentSelected,\n                style: {\n                  backgroundColor: this.props.type == 'Driver' ? '#39A2E5' : '#5EEF56'\n                },\n                id: styles.inputSettingCont_R,\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.settingsVerifyOrNot,\n                  children: \"Verified\"\n                }), /*#__PURE__*/_jsx(RiShieldCheckFill, {\n                  className: styles.settingsVerifyOrNotIcon,\n                  color: WHITE\n                })]\n              }) : /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.pickPaymentSelected,\n                style: {\n                  backgroundColor: '#FF4040'\n                },\n                id: styles.inputSettingCont_R_VERIFYNOW,\n                onClick: () => {\n                  axios.post(`https://us-central1-perch-01.cloudfunctions.net/checkIfPhoneNumberIsFree`, {\n                    phoneNumber: this.state.newPhoneNumber\n                  }).then(r => {\n                    if (r.data) {\n                      this.sendVerificationCode('phoneNumber');\n                    } else this.setState({\n                      error: true,\n                      errorMessage: 'Phone number already in use by another account'\n                    });\n                  }).catch(error => {\n                    this.setState({\n                      error: true,\n                      errorMessage: error.message\n                    });\n                  });\n                },\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.settingsVerifyOrNot,\n                  children: \"Verify Now\"\n                }), /*#__PURE__*/_jsx(GiClick, {\n                  className: styles.settingsVerifyOrNotIcon,\n                  color: WHITE\n                })]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.enterKilometerDiv,\n              id: styles.inputSettingCont__,\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                onClick: () => {\n                  this.setState({\n                    toShow: 'changePassword'\n                  });\n                },\n                className: styles.changePasswordButton,\n                style: this.props.type ? {\n                  color: BLUE\n                } : {},\n                children: \"Change Password\"\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.button1,\n                id: styles.deleteAccountButton_,\n                style: {\n                  backgroundColor: RED,\n                  maxWidth: 'initial',\n                  height: '40px',\n                  minHeight: 'initial',\n                  margin: '0px'\n                },\n                onClick: () => {\n                  this.setState({\n                    toShow: 'whyDeleteAccount'\n                  });\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.deleteAccountButton,\n                  children: \"Delete Account\"\n                })\n              })]\n            })]\n          });\n        }\n        break;\n\n      case 'changePassword':\n        {\n          content = /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: BLACK\n              },\n              children: \"Change Password\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.enterKilometerDiv,\n              id: styles.inputSettingCont_,\n              children: /*#__PURE__*/_jsx(\"input\", {\n                type: \"password\",\n                placeholder: \"Current Password\",\n                className: styles.inputPaymentPanel,\n                id: styles.inputSettingCont_L,\n                value: this.state.currentPassword,\n                onChange: event => {\n                  this.setState({\n                    currentPassword: event.target.value\n                  });\n                },\n                style: {\n                  width: '100%'\n                }\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.enterKilometerDiv,\n              id: styles.inputSettingCont_,\n              children: /*#__PURE__*/_jsx(\"input\", {\n                type: \"password\",\n                placeholder: \"New Password\",\n                className: styles.inputPaymentPanel,\n                id: styles.inputSettingCont_L,\n                value: this.state.newPassword,\n                onChange: event => {\n                  this.setState({\n                    newPassword: event.target.value\n                  });\n                },\n                style: {\n                  width: '100%'\n                }\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.enterKilometerDiv,\n              id: styles.inputSettingCont_,\n              children: /*#__PURE__*/_jsx(\"input\", {\n                type: \"password\",\n                placeholder: \"Confirm New Password\",\n                className: styles.inputPaymentPanel,\n                id: styles.inputSettingCont_L,\n                style: {\n                  width: '100%'\n                },\n                value: this.state.confirmNewPassword,\n                onChange: event => {\n                  this.setState({\n                    confirmNewPassword: event.target.value\n                  });\n                }\n              })\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.em,\n              children: this.state.errorMessage\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.enterKilometerDiv,\n              id: styles.inputSettingCont__,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.button1,\n                id: styles.deleteAccountButton_,\n                style: {\n                  backgroundColor: RED,\n                  maxWidth: 'initial',\n                  height: '40px',\n                  minHeight: 'initial',\n                  margin: '0px',\n                  width: '49%'\n                },\n                onClick: () => {\n                  if (!this.state.loading) this.setState({\n                    toShow: 'default',\n                    errorMessage: '',\n                    currentPassword: '',\n                    newPassword: '',\n                    confirmNewPassword: ''\n                  });\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.deleteAccountButton,\n                  children: \"Cancel\"\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.button1,\n                id: styles.deleteAccountButton_,\n                style: {\n                  backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN,\n                  maxWidth: 'initial',\n                  height: '40px',\n                  minHeight: 'initial',\n                  margin: '0px',\n                  width: '49%'\n                },\n                onClick: () => {\n                  if (!this.state.loading) {\n                    if (this.state.newPassword == '') this.setState({\n                      errorMessage: 'Please enter a new password'\n                    });else if (this.state.newPassword != this.state.confirmNewPassword) this.setState({\n                      errorMessage: 'New password and confirm new password do not match'\n                    });else changePassword.call(this, this.state.userDetails.email, this.state.currentPassword, this.state.newPassword);\n                  }\n                },\n                children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n                  type: \"TailSpin\",\n                  color: WHITE,\n                  height: '20px',\n                  width: '20px'\n                }) : /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.deleteAccountButton,\n                  children: \"Change Password\"\n                })\n              })]\n            })]\n          });\n        }\n        break;\n\n      case 'verify':\n        {\n          content = /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: BLACK\n              },\n              children: `Verify your ${this.state.toVerify}`\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              className: styles.text,\n              style: {\n                color: BLACK\n              },\n              children: [\"Enter the code sent to \", /*#__PURE__*/_jsx(\"span\", {\n                style: {\n                  color: this.props.type == 'Driver' ? BLUE : GREEN\n                },\n                children: this.state.toVerify == 'email' ? this.state.newEmail : this.state.newPhoneNumber\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.enterKilometerDiv,\n              id: styles.inputSettingCont_,\n              children: /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter Code\",\n                className: styles.inputPaymentPanel,\n                id: styles.inputSettingCont_L,\n                style: {\n                  width: '100%'\n                },\n                value: this.state.verifyText,\n                onChange: v => {\n                  this.setState({\n                    verifyText: v.target.value\n                  });\n                }\n              })\n            }), this.state.timer == 0 ? /*#__PURE__*/_jsxs(\"p\", {\n              className: styles.text,\n              style: {\n                color: BLACK,\n                fontSize: '80%'\n              },\n              children: [\"Didn't get a code yet? \", /*#__PURE__*/_jsx(\"span\", {\n                id: styles.resendCodeSettings,\n                onClick: () => {\n                  this.sendVerificationCode(this.state.toVerify == 'email' ? 'email' : 'phoneNumber');\n                },\n                style: {\n                  color: BLUE_TEXT\n                },\n                children: \"Resend\"\n              })]\n            }) : /*#__PURE__*/_jsxs(\"p\", {\n              className: styles.text,\n              style: {\n                color: BLACK,\n                fontSize: '80%'\n              },\n              children: [\"Resend in \", /*#__PURE__*/_jsx(\"span\", {\n                style: {\n                  color: BLUE_TEXT\n                },\n                children: ` 0:${('0' + this.state.timer).slice(-2)}`\n              })]\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.em,\n              children: this.state.errorMessage\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.enterKilometerDiv,\n              id: styles.inputSettingCont__,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.button1,\n                id: styles.deleteAccountButton_,\n                style: {\n                  backgroundColor: RED,\n                  maxWidth: 'initial',\n                  height: '40px',\n                  minHeight: 'initial',\n                  margin: '0px',\n                  width: '49%'\n                },\n                onClick: () => {\n                  this.setState({\n                    toShow: 'default',\n                    errorMessage: ''\n                  });\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.deleteAccountButton,\n                  children: \"Cancel\"\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.button1,\n                id: styles.deleteAccountButton_,\n                style: {\n                  backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN,\n                  maxWidth: 'initial',\n                  height: '40px',\n                  minHeight: 'initial',\n                  margin: '0px',\n                  width: '49%'\n                },\n                onClick: () => {\n                  const code = this.state.verifyText;\n\n                  if (code.length != 6) {\n                    this.setState({\n                      errorMessage: 'Verification code must be 6 characters long'\n                    });\n                  } else {\n                    this.setState({\n                      loading: true\n                    }, () => {\n                      const type = this.state.toVerify == 'email' ? 'email' : 'phoneNumber';\n\n                      switch (type) {\n                        case 'email':\n                          {\n                            axios.post(`https://us-central1-perch-01.cloudfunctions.net/sendVerificationCode`, {\n                              userID: this.state.userDetails.userID,\n                              type: type,\n                              action: 'check',\n                              code: code,\n                              phoneNumber: '',\n                              email: this.state.newEmail,\n                              name: this.state.userDetails.firstName\n                            }).then(r => {\n                              if (r.data) {\n                                axios.post(`https://us-central1-perch-01.cloudfunctions.net/changeEmailAndPhoneNumberAfterVerifying`, {\n                                  userID: this.state.userDetails.userID,\n                                  type: type,\n                                  phoneNumber: '',\n                                  email: this.state.newEmail\n                                }).then(() => {\n                                  let userDetails = this.state.userDetails;\n                                  userDetails.email = this.state.newEmail;\n                                  this.setState({\n                                    toShow: 'default',\n                                    loading: false,\n                                    userDetails: userDetails,\n                                    errorMessage: ''\n                                  });\n                                }).catch(error => {\n                                  this.setState({\n                                    errorMessage: error.message,\n                                    loading: false\n                                  });\n                                });\n                              } else this.setState({\n                                errorMessage: 'Validation code is not valid',\n                                loading: false\n                              });\n                            }).catch(error => {\n                              this.setState({\n                                errorMessage: error.message,\n                                loading: false\n                              });\n                            });\n                          }\n                          break;\n\n                        case 'phoneNumber':\n                          {\n                            axios.post(`https://us-central1-perch-01.cloudfunctions.net/sendVerificationCode`, {\n                              userID: this.state.userDetails.userID,\n                              type: type,\n                              action: 'check',\n                              code: code,\n                              phoneNumber: this.state.newPhoneNumber,\n                              email: '',\n                              name: this.state.userDetails.firstName\n                            }).then(r => {\n                              if (r.data) {\n                                axios.post(`https://us-central1-perch-01.cloudfunctions.net/changeEmailAndPhoneNumberAfterVerifying`, {\n                                  userID: this.state.userDetails.userID,\n                                  type: type,\n                                  phoneNumber: '',\n                                  email: this.state.newEmail\n                                }).then(() => {\n                                  let userDetails = this.state.userDetails;\n                                  userDetails.phoneNumber = this.state.newPhoneNumber;\n                                  this.setState({\n                                    toShow: 'default',\n                                    loading: false,\n                                    userDetails: userDetails,\n                                    errorMessage: ''\n                                  });\n                                }).catch(error => {\n                                  this.setState({\n                                    errorMessage: error.message,\n                                    loading: false\n                                  });\n                                });\n                              } else this.setState({\n                                errorMessage: 'Validation code is not valid',\n                                loading: false\n                              });\n                            }).catch(error => {\n                              this.setState({\n                                errorMessage: error.message,\n                                loading: false\n                              });\n                            });\n                          }\n                          break;\n                      }\n                    });\n                  }\n                },\n                children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n                  type: \"TailSpin\",\n                  color: WHITE,\n                  height: '20px',\n                  width: '20px'\n                }) : /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.deleteAccountButton,\n                  children: \"Verify\"\n                })\n              })]\n            })]\n          });\n        }\n        break;\n\n      case 'whyDeleteAccount':\n        {\n          content = /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: BLACK\n              },\n              children: \"Are you sure you would like to delete your account?\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.text,\n              style: {\n                color: BLACK\n              },\n              children: \"Please describe briefly why you would like to delete your account\"\n            }), /*#__PURE__*/_jsx(\"textarea\", {\n              type: \"text\",\n              placeholder: \"Enter your message here\",\n              className: styles.contactUsContent,\n              style: {\n                width: '100%'\n              },\n              value: this.state.deleteAccountReason,\n              onChange: event => {\n                this.setState({\n                  deleteAccountReason: event.target.value\n                });\n              }\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.em,\n              children: this.state.errorMessage\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.enterKilometerDiv,\n              id: styles.inputSettingCont__,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.button1,\n                id: styles.deleteAccountButton_,\n                style: {\n                  backgroundColor: RED,\n                  maxWidth: 'initial',\n                  height: '40px',\n                  minHeight: 'initial',\n                  margin: '0px',\n                  width: '49%'\n                },\n                onClick: () => {\n                  if (this.state.deleteAccountReason == '') this.setState({\n                    errorMessage: 'Please enter a reason to delete your account'\n                  });else if (this.state.deleteAccountReason.length < 15) this.setState({\n                    errorMessage: 'Please enter a reason longer than 15 characters'\n                  });else this.setState({\n                    toShow: 'logInToDeleteAccount',\n                    errorMessage: ''\n                  });\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.deleteAccountButton,\n                  children: \"Delete Account\"\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.button1,\n                id: styles.deleteAccountButton_,\n                style: {\n                  backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN,\n                  maxWidth: 'initial',\n                  height: '40px',\n                  minHeight: 'initial',\n                  margin: '0px',\n                  width: '49%'\n                },\n                onClick: () => {\n                  this.setState({\n                    toShow: 'default',\n                    errorMessage: '',\n                    deleteAccountReason: ''\n                  });\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.deleteAccountButton,\n                  children: \"Cancel\"\n                })\n              })]\n            })]\n          });\n        }\n        break;\n\n      case 'logInToDeleteAccount':\n        {\n          content = /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: BLACK\n              },\n              children: \"We are sorry to see you leave Perch\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.text,\n              style: {\n                color: BLACK\n              },\n              children: \"Please describe briefly why you would like to delete your account\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.enterKilometerDiv,\n              id: styles.inputSettingCont_,\n              children: /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Email\",\n                className: styles.inputPaymentPanel,\n                id: styles.inputSettingCont_L,\n                style: {\n                  width: '100%'\n                },\n                value: this.state.email1,\n                autoComplete: 'off',\n                onChange: event => {\n                  this.setState({\n                    email1: event.target.value\n                  });\n                }\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.enterKilometerDiv,\n              id: styles.inputSettingCont_,\n              children: /*#__PURE__*/_jsx(\"input\", {\n                type: \"password\",\n                placeholder: \"Password\",\n                className: styles.inputPaymentPanel,\n                id: styles.inputSettingCont_L,\n                style: {\n                  width: '100%'\n                },\n                value: this.state.password1,\n                autoComplete: 'off',\n                onChange: event => {\n                  this.setState({\n                    password1: event.target.value\n                  });\n                }\n              })\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.em,\n              children: this.state.errorMessage\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.enterKilometerDiv,\n              id: styles.inputSettingCont__,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.button1,\n                id: styles.deleteAccountButton_,\n                style: {\n                  backgroundColor: RED,\n                  maxWidth: 'initial',\n                  height: '40px',\n                  minHeight: 'initial',\n                  margin: '0px',\n                  width: '49%'\n                },\n                onClick: () => {\n                  if (!this.state.loading) deleteAccount.call(this, this.state.email1, this.state.password1);\n                },\n                children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n                  type: \"TailSpin\",\n                  color: WHITE,\n                  height: '20px',\n                  width: '20px'\n                }) : /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.deleteAccountButton,\n                  children: \"Delete Account\"\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.button1,\n                id: styles.deleteAccountButton_,\n                style: {\n                  backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN,\n                  maxWidth: 'initial',\n                  height: '40px',\n                  minHeight: 'initial',\n                  margin: '0px',\n                  width: '49%'\n                },\n                onClick: () => {\n                  this.setState({\n                    toShow: 'default',\n                    errorMessage: '',\n                    email1: '',\n                    password1: ''\n                  });\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.deleteAccountButton,\n                  children: \"Cancel\"\n                })\n              })]\n            })]\n          });\n        }\n        break;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: styles.cont,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.container,\n        style: {\n          backgroundColor: WHITE,\n          marginTop: '20px',\n          marginBottom: '150px'\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          className: styles.title,\n          style: {\n            color: BLACK\n          },\n          children: \"Rider settings\"\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.settingUserDetails,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: styles.displayPicSettings,\n            children: /*#__PURE__*/_jsx(\"img\", {\n              src: this.state.url,\n              className: styles.doggyProfilePicture\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.settingsCont,\n            children: content\n          })]\n        })]\n      })\n    });\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/edokoh9/Documents/PerchWebsite/perch/functions/panels/userPanels/settings.js"],"names":["axios","firebase","React","GiClick","RiShieldCheckFill","Loader","colors","changePassword","deleteAccount","sendVerification","styles","GREEN","WHITE","GREY","BLACK","RED","BLUE_TEXT","BLUE","PURPLE","YELLOW","Settings","Component","constructor","props","photoRef","storage","ref","getDownloadURL","then","result","setState","url","catch","error","console","log","message","type","timer","time","setInterval","state","clearInterval","userDetails","userID","newEmail","firstName","toShow","toVerify","newPhoneNumber","email","phoneNumber","currentPassword","newPassword","confirmNewPassword","loading","errorMessage","deleteAccountReason","email1","password1","emailVerified","phoneVerified","verifyText","componentDidMount","setImage","database","on","snap","val","render","content","title","color","marginBottom","enterKilometerDiv","margin","width","inputPaymentPanel","inputSettings","lastName","inputSettingCont_","event","target","value","inputSettingCont_L","pickPaymentSelected","backgroundColor","inputSettingCont_R","buttonText1","settingsVerifyOrNot","settingsVerifyOrNotIcon","inputSettingCont_R_VERIFYNOW","sendVerificationCode","post","r","data","inputSettingCont__","changePasswordButton","button1","deleteAccountButton_","maxWidth","height","minHeight","deleteAccountButton","em","call","text","v","fontSize","resendCodeSettings","slice","code","length","action","name","contactUsContent","cont","container","marginTop","settingUserDetails","displayPicSettings","doggyProfilePicture","settingsCont"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { GiClick } from 'react-icons/gi';\nimport { RiShieldCheckFill } from 'react-icons/ri';\nimport Loader from 'react-loader-spinner';\nimport { colors } from '../../functions';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport {\n    changePassword,\n    deleteAccount,\n    sendVerification\n} from '../../functions';\nimport styles from '../panel_layout.module.css';\nconst [GREEN, WHITE, GREY, BLACK, RED, BLUE_TEXT, BLUE, PURPLE, YELLOW] = ['#4EB848', '#FFFFFF', '#959AAC', '#000000', '#FF0000', '#284ED6', '#1970A7', '#A031AF', '#F0E23D'];\n\nexport default class Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            toShow: 'default',//default, changePassword, verify, whyDeleteAccount,logInToDeleteAccount,\n            toVerify: '',\n            url: null,\n            userDetails: this.props.userDetails,\n            newEmail: this.props.userDetails ? this.props.userDetails.email : '',\n            newPhoneNumber: this.props.userDetails ? this.props.userDetails.phoneNumber : '',\n            currentPassword: '',\n            newPassword: '',\n            confirmNewPassword: '',\n            loading: false,\n            errorMessage: '',\n            deleteAccountReason: '',\n            email1: '',\n            password1: '',\n            timer: 0,\n\n            emailVerified: false,\n            phoneVerified: true,\n\n            verifyText: '',\n\n        };\n    };\n    componentDidMount() {\n        this.setImage(this.state.userDetails.photoRef);\n\n        firebase.database().ref(`users/${this.state.userDetails.userID}/summarizedHistory`).on('value', snap => {\n            if (snap.val())\n                this.setState({ emailVerified: snap.val().emailVerified, phoneVerified: snap.val().phoneVerified });\n        })\n    }\n    setImage = (photoRef) => {\n        firebase.storage().ref(`${photoRef}`).getDownloadURL()\n            .then(result => {\n                this.setState({ url: result })\n            }).catch(error => { console.log(error.message) });\n    };\n    sendVerificationCode = (type) => {\n        this.setState({ timer: 60 }, () => {\n            const time = setInterval(() => {\n                if (this.state.timer == 0)\n                    clearInterval(time);\n                else\n                    this.setState({ timer: this.state.timer - 1 })\n            }, 1000);\n        });\n        if (this.state.timer == 0)\n            switch (type) {\n                case 'email': {\n                    sendVerification(this.state.userDetails.userID,\n                        'email',\n                        'storeAndSend',\n                        '',\n                        '',\n                        this.state.newEmail,\n                        this.state.userDetails.firstName);\n                    this.setState({ toShow: 'verify', toVerify: 'email' });\n                } break;\n                case 'phoneNumber': {\n                    sendVerification(this.state.userDetails.userID,\n                        'phoneNumber',\n                        'storeAndSend',\n                        '',\n                        this.state.newPhoneNumber,\n                        '',\n                        this.state.userDetails.firstName);\n                    this.setState({ toShow: 'verify', toVerify: 'phone number' });\n                } break;\n            };\n    };\n    render() {\n        let content = <></>;\n        if (!this.state.userDetails && this.props.userDetails)\n            this.setState({\n                userDetails: this.props.userDetails,\n                newEmail: this.props.userDetails.email,\n                newPhoneNumber: this.props.userDetails.phoneNumber,\n            }, () => { this.setImage(this.state.userDetails.photoRef); });\n\n        switch (this.state.toShow) {\n            case 'default': {\n                content = (<>\n                    <p className={styles.title} style={{ color: BLACK, marginBottom: '15px' }}>{`User details`}</p>\n\n                    <div className={styles.enterKilometerDiv} style={{ margin: '0px', width: '100%' }}>\n                        <input type=\"text\"\n                            placeholder=\"First Name\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettings} style={{ width: '49%', margin: '0px' }}\n                            value={this.state.userDetails ? this.state.userDetails.firstName : 'First Name'}\n                            disabled={true}\n                        />\n                        <input type=\"text\"\n                            placeholder=\"Last Name\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettings}\n                            style={{ width: '49%', margin: '0px' }}\n                            value={this.state.userDetails ? this.state.userDetails.lastName : 'Last Name'}\n                            disabled={true}\n                        />\n                    </div>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input type=\"text\"\n                            placeholder=\"Email Address\"\n                            className={styles.inputPaymentPanel}\n                            value={this.state.newEmail}\n                            onChange={(event) => { this.setState({ newEmail: event.target.value }) }}\n                            id={styles.inputSettingCont_L} />\n                        {this.state.emailVerified && this.state.userDetails.email == this.state.newEmail ?\n                            <div className={styles.pickPaymentSelected} style={{ backgroundColor: this.props.type == 'Driver' ? '#39A2E5' : '#5EEF56', }} id={styles.inputSettingCont_R}>\n                                <p className={styles.buttonText1} id={styles.settingsVerifyOrNot}>Verified</p>\n                                <RiShieldCheckFill className={styles.settingsVerifyOrNotIcon} color={WHITE} />\n                            </div> :\n                            <div className={styles.pickPaymentSelected}\n                                style={{ backgroundColor: '#FF4040' }}\n                                id={styles.inputSettingCont_R_VERIFYNOW}\n                                onClick={() => { this.sendVerificationCode('email') }}\n                            >\n                                <p className={styles.buttonText1} id={styles.settingsVerifyOrNot}>Verify Now</p>\n                                <GiClick className={styles.settingsVerifyOrNotIcon} color={WHITE} />\n                            </div>}\n                    </div>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input type=\"text\"\n                            placeholder=\"Phone Number\"\n                            className={styles.inputPaymentPanel}\n                            value={this.state.newPhoneNumber}\n                            onChange={(event) => { this.setState({ newPhoneNumber: event.target.value }) }}\n                            id={styles.inputSettingCont_L} />\n                        {this.state.phoneVerified && this.state.userDetails.phoneNumber == this.state.newPhoneNumber ?\n                            <div className={styles.pickPaymentSelected} style={{ backgroundColor: this.props.type == 'Driver' ? '#39A2E5' : '#5EEF56', }} id={styles.inputSettingCont_R}>\n                                <p className={styles.buttonText1} id={styles.settingsVerifyOrNot}>Verified</p>\n                                <RiShieldCheckFill className={styles.settingsVerifyOrNotIcon} color={WHITE} />\n                            </div> :\n                            <div\n                                className={styles.pickPaymentSelected}\n                                style={{ backgroundColor: '#FF4040' }}\n                                id={styles.inputSettingCont_R_VERIFYNOW}\n                                onClick={() => {\n                                    axios.post(`https://us-central1-perch-01.cloudfunctions.net/checkIfPhoneNumberIsFree`, { phoneNumber: this.state.newPhoneNumber })\n                                        .then((r) => {\n                                            if (r.data) {\n                                                this.sendVerificationCode('phoneNumber')\n                                            }\n                                            else\n                                                this.setState({ error: true, errorMessage: 'Phone number already in use by another account' })\n                                        })\n                                        .catch(error => {\n                                            this.setState({ error: true, errorMessage: error.message })\n                                        })\n                                }}>\n                                <p className={styles.buttonText1} id={styles.settingsVerifyOrNot}>Verify Now</p>\n                                <GiClick className={styles.settingsVerifyOrNotIcon} color={WHITE} />\n                            </div>}\n                    </div>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont__} >\n                        <p\n                            onClick={() => { this.setState({ toShow: 'changePassword' }) }}\n                            className={styles.changePasswordButton}\n                            style={this.props.type ? { color: BLUE } : {}}>Change Password</p>\n                        <div\n                            className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: RED, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px' }}\n                            onClick={() => { this.setState({ toShow: 'whyDeleteAccount' }) }}\n                        >\n                            <p className={styles.buttonText1} id={styles.deleteAccountButton}>Delete Account</p>\n                        </div>\n                    </div>\n                </>);\n            } break;\n            case 'changePassword': {\n                content = (<>\n                    <p className={styles.title} style={{ color: BLACK }}>Change Password</p>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input\n                            type=\"password\"\n                            placeholder=\"Current Password\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettingCont_L}\n                            value={this.state.currentPassword}\n                            onChange={(event) => { this.setState({ currentPassword: event.target.value }) }}\n                            style={{ width: '100%' }} />\n\n                    </div>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input\n                            type=\"password\"\n                            placeholder=\"New Password\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettingCont_L}\n                            value={this.state.newPassword}\n                            onChange={(event) => { this.setState({ newPassword: event.target.value }) }}\n                            style={{ width: '100%' }}\n                        />\n\n                    </div>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input\n                            type=\"password\"\n                            placeholder=\"Confirm New Password\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettingCont_L}\n                            style={{ width: '100%' }}\n                            value={this.state.confirmNewPassword}\n                            onChange={(event) => { this.setState({ confirmNewPassword: event.target.value }) }}\n                        />\n\n                    </div>\n                    <p className={styles.em}>{this.state.errorMessage}</p>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont__} >\n                        <div className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: RED, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => {\n                                if (!this.state.loading)\n                                    this.setState({ toShow: 'default', errorMessage: '', currentPassword: '', newPassword: '', confirmNewPassword: '' });\n                            }}>\n                            <p className={styles.buttonText1} id={styles.deleteAccountButton}>Cancel</p>\n                        </div>\n                        <div\n                            className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => {\n                                if (!this.state.loading) {\n                                    if (this.state.newPassword == '')\n                                        this.setState({ errorMessage: 'Please enter a new password' })\n                                    else if (this.state.newPassword != this.state.confirmNewPassword)\n                                        this.setState({ errorMessage: 'New password and confirm new password do not match' })\n                                    else\n                                        changePassword.call(this,\n                                            this.state.userDetails.email,\n                                            this.state.currentPassword,\n                                            this.state.newPassword);\n                                }\n                            }}\n                        >\n                            {this.state.loading ?\n                                <Loader\n                                    type=\"TailSpin\"\n                                    color={WHITE}\n                                    height={'20px'}\n                                    width={'20px'} /> :\n                                <p className={styles.buttonText1} id={styles.deleteAccountButton}>Change Password</p>\n                            }\n                        </div>\n                    </div>\n                </>);\n            } break;\n            case 'verify': {\n                content = (<>\n                    <p className={styles.title} style={{ color: BLACK }}>{`Verify your ${this.state.toVerify}`}</p>\n                    <p className={styles.text} style={{ color: BLACK }}>\n                        Enter the code sent to <span style={{ color: this.props.type == 'Driver' ? BLUE : GREEN }}>{\n                            this.state.toVerify == 'email' ?\n                                this.state.newEmail :\n                                this.state.newPhoneNumber}</span>\n                    </p>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter Code\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettingCont_L} style={{ width: '100%' }}\n                            value={this.state.verifyText}\n                            onChange={(v) => { this.setState({ verifyText: v.target.value }) }}\n                        />\n                    </div>\n                    {this.state.timer == 0 ?\n                        <p className={styles.text} style={{ color: BLACK, fontSize: '80%' }}>\n                            Didn't get a code yet? <span\n                                id={styles.resendCodeSettings}\n                                onClick={() => { this.sendVerificationCode(this.state.toVerify == 'email' ? 'email' : 'phoneNumber') }}\n                                style={{ color: BLUE_TEXT }}>Resend</span>\n                        </p> :\n                        <p className={styles.text} style={{ color: BLACK, fontSize: '80%' }}>\n                            Resend in <span style={{ color: BLUE_TEXT }}>{` 0:${('0' + this.state.timer).slice(-2)}`}</span>\n                        </p>}\n                    <p className={styles.em}>{this.state.errorMessage}</p>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont__} >\n                        <div className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: RED, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => { this.setState({ toShow: 'default', errorMessage: '' }) }}>\n                            <p className={styles.buttonText1} id={styles.deleteAccountButton}>Cancel</p>\n                        </div>\n                        <div\n                            className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => {\n                                const code = this.state.verifyText;\n                                if (code.length != 6) {\n                                    this.setState({ errorMessage: 'Verification code must be 6 characters long' })\n                                } else {\n                                    this.setState({ loading: true }, () => {\n                                        const type = this.state.toVerify == 'email' ? 'email' : 'phoneNumber';\n                                        switch (type) {\n                                            case 'email': {\n                                                axios.post(`https://us-central1-perch-01.cloudfunctions.net/sendVerificationCode`,\n                                                    {\n                                                        userID: this.state.userDetails.userID,\n                                                        type: type,\n                                                        action: 'check',\n                                                        code: code,\n                                                        phoneNumber: '',\n                                                        email: this.state.newEmail,\n                                                        name: this.state.userDetails.firstName\n                                                    })\n                                                    .then((r) => {\n                                                        if (r.data) {\n                                                            axios.post(`https://us-central1-perch-01.cloudfunctions.net/changeEmailAndPhoneNumberAfterVerifying`, {\n                                                                userID: this.state.userDetails.userID,\n                                                                type: type,\n                                                                phoneNumber: '',\n                                                                email: this.state.newEmail,\n                                                            }).then(() => {\n                                                                let userDetails = this.state.userDetails;\n                                                                userDetails.email = this.state.newEmail;\n                                                                this.setState({ toShow: 'default', loading: false, userDetails: userDetails, errorMessage: '' })\n                                                            }).catch((error) => { this.setState({ errorMessage: error.message, loading: false }) })\n                                                        }\n                                                        else\n                                                            this.setState({ errorMessage: 'Validation code is not valid', loading: false })\n                                                    })\n                                                    .catch((error) => { this.setState({ errorMessage: error.message, loading: false }) })\n\n                                            } break;\n                                            case 'phoneNumber': {\n                                                axios.post(`https://us-central1-perch-01.cloudfunctions.net/sendVerificationCode`,\n                                                    {\n                                                        userID: this.state.userDetails.userID,\n                                                        type: type,\n                                                        action: 'check',\n                                                        code: code,\n                                                        phoneNumber: this.state.newPhoneNumber,\n                                                        email: '',\n                                                        name: this.state.userDetails.firstName\n                                                    })\n                                                    .then((r) => {\n                                                        if (r.data) {\n                                                            axios.post(`https://us-central1-perch-01.cloudfunctions.net/changeEmailAndPhoneNumberAfterVerifying`, {\n                                                                userID: this.state.userDetails.userID,\n                                                                type: type,\n                                                                phoneNumber: '',\n                                                                email: this.state.newEmail,\n                                                            }).then(() => {\n                                                                let userDetails = this.state.userDetails;\n                                                                userDetails.phoneNumber = this.state.newPhoneNumber;\n                                                                this.setState({ toShow: 'default', loading: false, userDetails: userDetails, errorMessage: '' })\n                                                            }).catch((error) => { this.setState({ errorMessage: error.message, loading: false }) })\n                                                        }\n                                                        else\n                                                            this.setState({ errorMessage: 'Validation code is not valid', loading: false })\n                                                    })\n                                                    .catch((error) => { this.setState({ errorMessage: error.message, loading: false }) })\n                                            } break;\n                                        }\n                                    })\n                                }\n                            }}\n                        >\n                            {this.state.loading ?\n                                <Loader\n                                    type=\"TailSpin\"\n                                    color={WHITE}\n                                    height={'20px'}\n                                    width={'20px'} /> :\n                                <p className={styles.buttonText1} id={styles.deleteAccountButton}>Verify</p>}\n                        </div>\n                    </div>\n                </>);\n            } break;\n            case 'whyDeleteAccount': {\n                content = (<>\n                    <p className={styles.title} style={{ color: BLACK }}>Are you sure you would like to delete your account?</p>\n                    <p className={styles.text} style={{ color: BLACK }}>\n                        Please describe briefly why you would like to delete your account\n                    </p>\n                    <textarea\n                        type=\"text\"\n                        placeholder=\"Enter your message here\"\n                        className={styles.contactUsContent}\n                        style={{ width: '100%' }}\n                        value={this.state.deleteAccountReason}\n                        onChange={event => { this.setState({ deleteAccountReason: event.target.value }) }}\n                    />\n\n                    <p className={styles.em}>{this.state.errorMessage}</p>\n\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont__} >\n                        <div\n                            className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: RED, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => {\n                                if (this.state.deleteAccountReason == '')\n                                    this.setState({ errorMessage: 'Please enter a reason to delete your account' });\n                                else if (this.state.deleteAccountReason.length < 15)\n                                    this.setState({ errorMessage: 'Please enter a reason longer than 15 characters' });\n                                else\n                                    this.setState({ toShow: 'logInToDeleteAccount', errorMessage: '' })\n                            }}\n                        >\n                            <p className={styles.buttonText1} id={styles.deleteAccountButton}>Delete Account</p>\n                        </div>\n\n                        <div className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => { this.setState({ toShow: 'default', errorMessage: '', deleteAccountReason: '' }) }}>\n                            <p className={styles.buttonText1} id={styles.deleteAccountButton}>Cancel</p>\n                        </div>\n                    </div>\n                </>);\n            } break;\n            case 'logInToDeleteAccount': {\n                content = (<>\n                    <p className={styles.title} style={{ color: BLACK }}>We are sorry to see you leave Perch</p>\n                    <p className={styles.text} style={{ color: BLACK }}>\n                        Please describe briefly why you would like to delete your account\n                    </p>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input type=\"text\"\n                            placeholder=\"Email\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettingCont_L}\n                            style={{ width: '100%' }}\n                            value={this.state.email1}\n                            autoComplete={'off'}\n                            onChange={(event) => { this.setState({ email1: event.target.value }) }} />\n                    </div>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input type=\"password\"\n                            placeholder=\"Password\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettingCont_L}\n                            style={{ width: '100%' }}\n                            value={this.state.password1}\n                            autoComplete={'off'}\n                            onChange={(event) => { this.setState({ password1: event.target.value }) }} />\n                    </div>\n                    <p className={styles.em}>{this.state.errorMessage}</p>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont__} >\n                        <div className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: RED, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => {\n                                if (!this.state.loading)\n                                    deleteAccount.call(this,\n                                        this.state.email1,\n                                        this.state.password1);\n                            }}>\n                            {this.state.loading ?\n                                <Loader\n                                    type=\"TailSpin\"\n                                    color={WHITE}\n                                    height={'20px'}\n                                    width={'20px'} /> :\n                                <p className={styles.buttonText1} id={styles.deleteAccountButton}>Delete Account</p>\n                            }\n                        </div>\n                        <div\n                            className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => { this.setState({ toShow: 'default', errorMessage: '', email1: '', password1: '' }) }}\n                        >\n                            <p className={styles.buttonText1} id={styles.deleteAccountButton}>Cancel</p>\n                        </div>\n                    </div>\n                </>);\n            } break;\n        }\n        return (\n            <div className={styles.cont}>\n\n                <div className={styles.container} style={{ backgroundColor: WHITE, marginTop: '20px', marginBottom: '150px' }}>\n                    <p className={styles.title} style={{ color: BLACK }}>Rider settings</p>\n                    <div className={styles.settingUserDetails} >\n                        <div className={styles.displayPicSettings}>\n                            <img src={this.state.url} className={styles.doggyProfilePicture} />\n                        </div>\n                        <div className={styles.settingsCont}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n};"]},"metadata":{},"sourceType":"module"}