{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport firebase from 'firebase';\nimport Router from 'next/router';\nimport axios from 'axios';\nexport function signIn(email, password, type) {\n  var _this = this;\n\n  this.setState({\n    error: false,\n    errorMessage: '',\n    loading: true\n  }, function () {\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(function () {\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n        if (type == 'user') {\n          var userID = firebase.auth().currentUser.uid;\n          firebase.database().ref(\"users/\".concat(userID)).once('value', function (snapshot) {\n            if (snapshot.val().summarizedHistory.phoneVerified == true) Router.push('/s/db/udash').then(function () {\n              return window.scrollTo(0, 0);\n            });else _this.setState({\n              displayVerification: true,\n              loading: false,\n              userDetails: snapshot.val(),\n              error: false\n            }, function () {\n              //send a verification phonenumber\n              sendVerification(userID, 'phoneNumber', 'storeAndSend', 'nocode', snapshot.val().phoneNumber, snapshot.val().email, snapshot.val().firstName);\n              firebase.auth().signOut()[\"catch\"](function (error) {\n                console.log(error.message);\n              });\n            });\n          })[\"catch\"](function (error) {\n            _this.setState({\n              error: true,\n              errorMessage: error.message,\n              loading: false\n            });\n          });\n        } else if (type == 'driver') {\n          var _userID = firebase.auth().currentUser.uid;\n          firebase.database().ref(\"users/\".concat(_userID)).once('value', function (snapshot) {\n            if (snapshot.val().summarizedHistory.phoneVerified == true && snapshot.val().summarizedHistory.emailVerified == true) firebase.database().ref(\"users/\".concat(_userID, \"/driverVerified\")).once('value', function (snap) {\n              if (snap.val() == 'VERIFIED') Router.push('/s/db/ddash').then(function () {\n                return window.scrollTo(0, 0);\n              });else Router.push('/s/db/d_app_dash').then(function () {\n                return window.scrollTo(0, 0);\n              });\n            })[\"catch\"](function (error) {\n              console.log(error.message);\n            });else {\n              _this.setState({\n                displayVerification: true,\n                loading: false,\n                userDetails: snapshot.val(),\n                phoneVerified: snapshot.val().summarizedHistory.phoneVerified,\n                emailVerified: snapshot.val().summarizedHistory.emailVerified,\n                error: false\n              }, function () {\n                //send an email or phonenumber verification\n                if (!snapshot.val().summarizedHistory.phoneVerified) sendVerification(_userID, 'phoneNumber', 'storeAndSend', 'nocode', snapshot.val().phoneNumber, snapshot.val().email, snapshot.val().firstName);\n                if (!snapshot.val().summarizedHistory.emailVerified) sendVerification(_userID, 'email', 'storeAndSend', 'nocode', snapshot.val().phoneNumber, snapshot.val().email, snapshot.val().firstName);\n                firebase.auth().signOut()[\"catch\"](function (error) {\n                  console.log(error.message);\n                });\n              });\n            }\n          })[\"catch\"](function (error) {\n            console.log(error.message);\n          });\n        }\n      })[\"catch\"](function (error) {\n        _this.setState({\n          error: true,\n          errorMessage: error.message,\n          loading: false\n        });\n      });\n    })[\"catch\"](function (error) {\n      _this.setState({\n        error: true,\n        errorMessage: error.message,\n        loading: false\n      });\n    });\n  });\n}\n;\nexport function adminSignIn(email, password) {\n  var _this2 = this;\n\n  this.setState({\n    error: false,\n    errorMessage: '',\n    loading: true\n  }, function () {\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION).then(function () {\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n        var userID = firebase.auth().currentUser.uid;\n        firebase.database().ref(\"adminAuthorized/\".concat(userID)).once('value', function (snapshot) {\n          if (snapshot.val()) Router.push('/admin/dash').then(function () {\n            return window.scrollTo(0, 0);\n          });else _this2.setState({\n            error: true,\n            errorMessage: 'You do not have access to this portion of the site. Please contact us for help.',\n            loading: false\n          }, function () {\n            firebase.auth().signOut()[\"catch\"](function (error) {\n              console.log(error.message);\n            });\n          });\n        })[\"catch\"](function (error) {\n          console.log(error.message);\n        });\n      })[\"catch\"](function (error) {\n        _this2.setState({\n          error: true,\n          errorMessage: error.message,\n          loading: false\n        });\n      });\n    })[\"catch\"](function (error) {\n      _this2.setState({\n        error: true,\n        errorMessage: error.message,\n        loading: false\n      });\n    });\n  });\n}\n;\nexport function signUp(firstName, lastName, email, countryCode, phoneNumber, password, isDriver) {\n  var _this3 = this;\n\n  this.setState({\n    error: false,\n    errorMessage: '',\n    loading: true\n  }, function () {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function () {\n      var userID = firebase.auth().currentUser.uid;\n      axios.post('https://us-central1-perch-01.cloudfunctions.net/createUserDetails', {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        phoneNumber: \"+\".concat(countryCode).concat(phoneNumber),\n        userID: userID,\n        isDriver: isDriver\n      }).then(function () {\n        firebase.database().ref(\"users/\".concat(userID)).once('value', function (snapshot) {\n          firebase.auth().signOut()[\"catch\"](function (error) {\n            console.log(error.message);\n          });\n\n          _this3.setState({\n            displayVerification: true,\n            loading: false,\n            error: false,\n            userDetails: snapshot.val()\n          });\n        })[\"catch\"](function (error) {\n          _this3.setState({\n            error: true,\n            errorMessage: error.message\n          });\n        });\n      })[\"catch\"](function (error) {\n        _this3.setState({\n          errorMessage: error.message,\n          loading: false\n        });\n      });\n    })[\"catch\"](function (error) {\n      _this3.setState({\n        error: true,\n        errorMessage: error.message,\n        loading: false\n      });\n    });\n  });\n}\n;\nexport function signOut(doNotReroute) {\n  firebase.auth().signOut().then(function () {\n    if (!doNotReroute) Router.push('/');\n  })[\"catch\"](function (error) {\n    console.log(error.message);\n  });\n}\n;\nexport function sendVerification(userID, type, action, code, phoneNumber, email, name) {\n  var _this4 = this;\n\n  axios.post(\"https://us-central1-perch-01.cloudfunctions.net/sendVerificationCode\", {\n    userID: userID,\n    type: type,\n    action: action,\n    code: code,\n    phoneNumber: phoneNumber,\n    email: email,\n    name: name\n  }).then(function (r) {\n    var result = r.data;\n\n    if (action == 'check') {\n      if (result) {\n        if (type == 'phoneNumber') _this4.setState({\n          phoneVerified: true,\n          verificationPhoneLoader: false\n        });else if (type == 'email') _this4.setState({\n          emailVerified: true,\n          verificationEmailLoader: false\n        });\n      } else {\n        if (type == 'phoneNumber') _this4.setState({\n          verificationPhoneLoader: false\n        });else if (type == 'email') _this4.setState({\n          verificationEmailLoader: false\n        });\n\n        _this4.setState({\n          error: true,\n          errorMessage: 'The verification code was not correct. Please check again or click resend.'\n        });\n      }\n    }\n  }); //.catch((error) => { this.setState({ error: true, errorMessage: error.message }) })\n}\n;\nexport function changeEmailOrPhoneNumber(type, userID, phoneNumber, email) {\n  var _this5 = this;\n\n  axios.post(\"https://us-central1-perch-01.cloudfunctions.net/changeEmailOrPhoneNumber\", {\n    userID: userID,\n    email: email,\n    type: type,\n    phoneNumber: phoneNumber\n  }).then(function (r) {\n    _this5.setState({\n      userDetails: r.data,\n      changeEmail_PhoneNumber: false,\n      error: false,\n      errorMessage: '',\n      changeEmailLoader: false,\n      changePhoneLoader: false\n    });\n  })[\"catch\"](function (error) {\n    _this5.setState({\n      error: true,\n      errorMessage: error.message\n    });\n  });\n}\n;\nexport function sendFeedback() {\n  var _this6 = this;\n\n  if (this.state.topic == 'unselected') this.setState({\n    errorMessage: 'A topic is needed. Please pick a topic to contact us about. If you do not have one, please pick \"Other\"'\n  });else if (this.state.message == '') this.setState({\n    errorMessage: 'Please enter a message'\n  });else {\n    this.setState({\n      loading: true\n    }, function () {\n      if (_this6.state.userDetails) {\n        var ref = _this6.state.userDetails.driverID ? \"driverFeedback/\".concat(_this6.state.userDetails.driverID) : \"userFeedback/\".concat(_this6.state.userDetails.userID);\n        firebase.database().ref(ref).update(_defineProperty({}, new Date().getTime(), {\n          body: _this6.state.message,\n          subject: _this6.state.topic,\n          status: 'UNPROCESSED',\n          date: getDate()\n        })).then(function () {\n          _this6.setState({\n            topic: 'unselected',\n            message: '',\n            loading: false\n          }, function () {\n            _this6.loadResult();\n          });\n        })[\"catch\"](function (error) {\n          console.log(error.message);\n        });\n      } else firebase.database().ref(\"userFeedbackEmail\").update(_defineProperty({}, makeid(5), {\n        body: _this6.state.message,\n        subject: _this6.state.topic,\n        status: 'UNPROCESSED',\n        date: getDate(),\n        email: _this6.state.userEmail\n      })).then(function () {\n        _this6.setState({\n          topic: 'unselected',\n          message: '',\n          loading: false\n        });\n      })[\"catch\"](function (error) {\n        console.log(error.message);\n      });\n    });\n  }\n}\n;\nexport function changePassword(email_, oldPassword, newPassword) {\n  var _this7 = this;\n\n  this.setState({\n    loading: true\n  }, function () {\n    var email = email_;\n    var password = oldPassword;\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n      firebase.auth().currentUser.updatePassword(newPassword).then(function () {\n        _this7.setState({\n          loading: false,\n          toShow: 'default',\n          currentPassword: '',\n          newPassword: '',\n          confirmNewPassword: ''\n        });\n      })[\"catch\"](function (error) {\n        return _this7.setState({\n          errorMessage: error.message,\n          loading: false,\n          newPassword: '',\n          confirmNewPassword: ''\n        });\n      });\n    })[\"catch\"](function (error) {\n      return _this7.setState({\n        errorMessage: error.message,\n        loading: false,\n        newPassword: '',\n        confirmNewPassword: ''\n      });\n    });\n  });\n}\n;\nexport function deleteAccount(email, password) {\n  var _this8 = this;\n\n  this.setState({\n    loading: true\n  }, function () {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n      var user = firebase.auth().currentUser;\n      var userID = user.uid;\n      user[\"delete\"]().then(function () {\n        firebase.database().ref(\"users/\".concat(userID)).remove()[\"catch\"](function (error) {\n          console.log(error.message);\n        });\n        firebase.database().ref(\"deletedAccountReasons\").update(_defineProperty({}, userID, {\n          reason: _this8.state.deleteAccountReason,\n          reviewed: false,\n          userDetails: _this8.state.userDetails\n        }))[\"catch\"](function (error) {\n          console.log(error.message);\n        });\n      })[\"catch\"](function (error) {\n        return _this8.setState({\n          errorMessage: error.message,\n          loading: false,\n          password1: ''\n        });\n      });\n    })[\"catch\"](function (error) {\n      return _this8.setState({\n        errorMessage: error.message,\n        loading: false,\n        password1: ''\n      });\n    });\n  });\n}\n;\nexport function sendPasswordResetLink(email) {\n  var _this9 = this;\n\n  firebase.auth().sendPasswordResetEmail(email).then(function () {\n    _this9.setState({\n      error: false,\n      errorMessage: '',\n      forgotPassword: false\n    });\n  })[\"catch\"](function (error) {\n    _this9.setState({\n      error: true,\n      errorMessage: error.message\n    });\n  });\n}\n;\nexport function sendEmail(name, email, type, subject) {\n  axios.post(\"https://us-central1-perch-01.cloudfunctions.net/sendVerificationEmail\", {\n    name: name,\n    email: email,\n    type: type,\n    subject: subject\n  })[\"catch\"](function (error) {\n    console.log(error.meesage);\n  });\n}\n;\nexport function resetPassword(code, newPassword, email) {\n  var _this10 = this;\n\n  this.setState({\n    errorMessage: '',\n    loading: true\n  }, function () {\n    firebase.auth().confirmPasswordReset(code, newPassword).then(function () {\n      firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(function () {\n        firebase.auth().signInWithEmailAndPassword(email, newPassword).then(function () {\n          var userID = firebase.auth().currentUser.uid;\n          firebase.database().ref(\"users/\".concat(userID, \"/firstName\")).once('value', function (snap) {\n            sendEmail(snap.val(), email, 'passwordHasBeenReset', 'Password has been reset');\n          })[\"catch\"](function (error) {\n            console.log(error.message);\n          });\n        })[\"catch\"](function (error) {\n          console.log(error.message);\n        });\n      })[\"catch\"](function (error) {\n        console.log(error.message);\n      });\n      Router.push('/'); //send an email that password has been set \n    })[\"catch\"](function () {\n      _this10.setState({\n        errorMessage: 'The link is no longer valid, please go to the login page and request a new password reset link',\n        loading: false\n      });\n    });\n  });\n}\n; //MAKE A RANDOMID\n\nexport function makeid(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return \"\".concat(new Date().getTime()).concat(result);\n}\n;\nexport function getDate() {\n  var DAY = new Date().getDate();\n  var MONTH = new Date().getMonth();\n  var YEAR = new Date().getFullYear();\n  var HOUR = new Date().getHours();\n  var MIN = new Date().getMinutes();\n  var SECOND = new Date().getSeconds();\n  return \"\".concat(YEAR, \"-\").concat(MONTH, \"-\").concat(DAY, \"-\").concat(HOUR, \"-\").concat(MIN, \"-\").concat(SECOND);\n}\n;\nexport function dateformat(time) {\n  var slash1 = 0,\n      slash2 = 0,\n      slash3 = 0;\n\n  for (var k = 0; k < time.length; k++) {\n    if (time.charAt(k) == '-') slash1 == 0 ? slash1 = k : slash2 == 0 ? slash2 = k : slash3 = k;\n    if (slash3 != 0) break;\n  }\n\n  ;\n  var y = time.substring(0, slash1);\n  var m = time.substring(slash1 + 1, slash2);\n  var d = time.substring(slash2 + 1, slash3);\n  return \"\".concat(d, \"/\").concat(Number(m) + 1, \"/\").concat(y);\n}\n;\nexport function polylineLenght(data) {\n  var distance = 0;\n\n  for (var k = 0; k < data.length - 1; k++) {\n    distance += distanceCalculator(data[k][0], data[k][1], data[k + 1][0], data[k + 1][1]);\n  }\n\n  return distance;\n}\n;\nexport function distanceCalculator(lat1, lon1, lat2, lon2) {\n  var R = 6371 * 1000; // Radius of the earth in m\n\n  var dLat = deg2rad(lat2 - lat1); // deg2rad below\n\n  var dLon = deg2rad(lon2 - lon1);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c; // Distance in m\n\n  return d;\n}\n;\nexport function emailFormat(email, type) {\n  //@ is stored as -(hyphen)\n  //. is stored as _(underscore)\n  switch (type) {\n    case 'emailToString':\n      {\n        return email.replace('@', '-').replace('.', '_');\n      }\n      break;\n\n    case 'stringToEmail':\n      {\n        return email.replace('-', '@').replace('_', '.');\n      }\n      break;\n  }\n}\n;\n\nfunction deg2rad(deg) {\n  return deg * (Math.PI / 180);\n}\n\n;","map":null,"metadata":{},"sourceType":"module"}