{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, formatDateAllValues, pendingProcessesFunction } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport Loader from 'react-loader-spinner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar PendingProcesses = /*#__PURE__*/function (_React$Component) {\n  _inherits(PendingProcesses, _React$Component);\n\n  var _super = _createSuper(PendingProcesses);\n\n  function PendingProcesses(props) {\n    var _this;\n\n    _classCallCheck(this, PendingProcesses);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"renderList\", function () {\n      var r = [];\n      r.push( /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            width: '90%',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            marginBottom: '0px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.mainText,\n            children: \"\\u2022 User ID - \".concat(_this.state.userID)\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              width: '90px',\n              height: '30px',\n              backgroundColor: _this.state.type == 'rider' ? colors.GREEN : colors.BLUE,\n              borderRadius: '5px',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.readOrUnreadText,\n              style: {\n                color: '#ffffff',\n                fontFamily: 'Gilroy-ExtraBold'\n              },\n              children: _this.state.type == 'rider' ? 'Rider' : 'Driver'\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            width: '90%',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            marginBottom: '0px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.mainText,\n            children: \"\\u2022 Topic - \".concat(_this.state.mainTopic)\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.mainText,\n            children: \"Created at  ( \".concat(formatDateAllValues(new Date(_this.state.timeCreated)), \" )\")\n          })]\n        })]\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loadOldList\", function (data) {\n      var pushID = data.pushID,\n          userID = data.userID,\n          type = data.type,\n          mainTopic = data.mainTopic,\n          timeCreated = data.timeCreated;\n\n      _this.setState({\n        loading: true\n      }, function () {\n        firebase.database().ref(\"pendingProcessesListMessages/\".concat(pushID)).once('value', function (snapshot) {\n          var oldV = [];\n          snapshot.forEach(function (v) {\n            oldV.push(v.val());\n          });\n\n          _this.setState({\n            listOfProcesses: oldV,\n            viewList: true,\n            loading: false,\n            userID: userID,\n            type: type,\n            mainTopic: mainTopic,\n            timeCreated: timeCreated\n          });\n        });\n      });\n    });\n\n    _this.state = {\n      result: {},\n      listOfProcesses: [],\n      loading: false,\n      addProcess: false,\n      isNewProcess: false,\n      viewList: false,\n      userID: '',\n      type: '',\n      mainTopic: '',\n      timeCreated: null,\n      title: '',\n      details: '',\n      errorMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(PendingProcesses, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.database().ref(\"pendingProcessesList\").once('value', function (snapshot) {\n        _this2.setState({\n          result: snapshot.val()\n        });\n      });\n    }\n  }, {\n    key: \"stringIsNotEmpty\",\n    value: function stringIsNotEmpty(s) {\n      return s.length >= 4;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var results = [];\n      var keys = Object.keys(this.state.result).sort(function (a, b) {\n        return b - a;\n      });\n\n      var _loop = function _loop(k) {\n        var data = _this3.state.result[keys[k]];\n        var displayDate = formatDateAllValues(new Date(data.timeCreated));\n        results.push( /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.previousMessageSum,\n            onClick: function onClick() {\n              _this3.loadOldList(data);\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              style: {\n                fontSize: '105%',\n                fontFamily: 'Gilroy-Regular',\n                color: colors.BLACK\n              },\n              children: data.mainTopic\n            }), /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                fontSize: '100%',\n                fontFamily: 'Gilroy-Light',\n                color: colors.GREEN\n              },\n              children: /*#__PURE__*/_jsx(\"span\", {\n                style: {\n                  color: colors.GREY\n                },\n                children: displayDate\n              })\n            })]\n          }), k == keys.length - 1 ? /*#__PURE__*/_jsx(_Fragment, {}) : /*#__PURE__*/_jsx(\"div\", {\n            className: styles.sharedLine,\n            style: {\n              marginTop: '5px'\n            }\n          })]\n        }));\n      };\n\n      for (var k = 0; k < keys.length; k++) {\n        _loop(k);\n      }\n\n      ;\n      var _this$state = this.state,\n          addProcess = _this$state.addProcess,\n          errorMessage = _this$state.errorMessage,\n          isNewProcess = _this$state.isNewProcess,\n          viewList = _this$state.viewList;\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.cont,\n        children: [!addProcess && !isNewProcess && /*#__PURE__*/_jsx(\"div\", {\n          className: styles.enterKilometerDiv,\n          style: {\n            marginTop: '20px',\n            marginBottom: '0px',\n            marginLeft: '2.5%',\n            width: '95%'\n          },\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: styles.button2,\n            style: {\n              backgroundColor: colors.GREEN,\n              width: '100%',\n              maxWidth: 'initial'\n            },\n            id: styles.buttonBottom,\n            onClick: function onClick() {\n              _this3.setState({\n                addProcess: true,\n                isNewProcess: true,\n                userID: '',\n                type: '',\n                mainTopic: '',\n                title: '',\n                details: '',\n                errorMessage: ''\n              });\n            },\n            children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n              type: \"TailSpin\",\n              color: colors.WHITE,\n              height: '20px',\n              width: '20px'\n            }) : /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Add New Process\"\n            })\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: colors.WHITE,\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: colors.BLACK\n            },\n            children: \"List of pending processes\"\n          }), addProcess ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [isNewProcess ? /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                style: {\n                  width: '90%',\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  marginBottom: '0px'\n                },\n                children: [/*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  placeholder: \"User ID\",\n                  className: styles.searchInput,\n                  style: {\n                    width: '67%'\n                  },\n                  value: this.state.userID,\n                  onChange: function onChange(event) {\n                    _this3.setState({\n                      userID: event.target.value\n                    });\n                  }\n                }), /*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Type\",\n                  className: styles.searchInput,\n                  style: {\n                    width: '32%'\n                  },\n                  value: this.state.type,\n                  onChange: function onChange(event) {\n                    _this3.setState({\n                      type: event.target.value.toLowerCase()\n                    });\n                  }\n                })]\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Main topic\",\n                className: styles.searchInput,\n                style: {\n                  width: '90%',\n                  marginTop: '15px'\n                },\n                value: this.state.mainTopic,\n                onChange: function onChange(event) {\n                  _this3.setState({\n                    mainTopic: event.target.value\n                  });\n                }\n              })]\n            }) : /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                style: {\n                  width: '90%',\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  marginBottom: '0px'\n                },\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: styles.mainText,\n                  children: \"\\u2022 User ID - \".concat(this.state.userID)\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  style: {\n                    width: '90px',\n                    height: '30px',\n                    backgroundColor: this.state.type == 'rider' ? colors.GREEN : colors.BLUE,\n                    borderRadius: '5px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                  },\n                  children: /*#__PURE__*/_jsx(\"p\", {\n                    className: styles.readOrUnreadText,\n                    style: {\n                      color: '#ffffff',\n                      fontFamily: 'Gilroy-ExtraBold'\n                    },\n                    children: this.state.type == 'rider' ? 'Rider' : 'Driver'\n                  })\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                style: {\n                  width: '90%',\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  marginBottom: '0px'\n                },\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: styles.mainText,\n                  children: \"\\u2022 Topic - \".concat(this.state.mainTopic)\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.mainText,\n                  children: \"Created at  ( \".concat(formatDateAllValues(new Date(this.state.timeCreated)), \" )\")\n                })]\n              })]\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              placeholder: \"Title\",\n              className: styles.searchInput,\n              style: {\n                width: '90%',\n                marginTop: '15px'\n              },\n              value: this.state.title,\n              onChange: function onChange(event) {\n                _this3.setState({\n                  title: event.target.value\n                });\n              }\n            }), /*#__PURE__*/_jsx(\"textarea\", {\n              type: \"text\",\n              placeholder: \"Details\",\n              className: styles.contactUsContent,\n              style: {\n                width: '90%',\n                marginTop: '15px',\n                fontSize: '100%'\n              },\n              value: this.state.details,\n              onChange: function onChange(event) {\n                _this3.setState({\n                  details: event.target.value\n                });\n              }\n            })]\n          }) : viewList ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              style: {\n                height: '20px',\n                width: '100%'\n              }\n            }), this.renderList()]\n          }) : /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              style: {\n                height: '20px',\n                width: '100%'\n              }\n            }), results]\n          }), errorMessage != '' && /*#__PURE__*/_jsx(\"p\", {\n            className: styles.em,\n            style: {\n              textAlign: 'initial'\n            },\n            children: errorMessage\n          })]\n        }), addProcess && /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.enterKilometerDiv,\n          style: {\n            marginTop: '20px',\n            marginBottom: '150px',\n            marginLeft: '2.5%',\n            width: '95%'\n          },\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: styles.button2,\n            style: {\n              backgroundColor: colors.RED\n            },\n            id: styles.buttonBottom,\n            onClick: function onClick() {\n              if (addProcess) _this3.setState({\n                addProcess: false,\n                isNewProcess: false,\n                userID: '',\n                type: '',\n                mainTopic: '',\n                timeCreated: null,\n                title: '',\n                details: '',\n                errorMessage: ''\n              });\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Cancel\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.button2,\n            style: {\n              backgroundColor: colors.GREEN\n            },\n            id: styles.buttonBottom,\n            onClick: function onClick() {\n              if (addProcess) {\n                if (isNewProcess) {\n                  if (_this3.stringIsNotEmpty(_this3.state.userID) && (_this3.state.type == 'rider' || _this3.state.type == 'driver') && _this3.stringIsNotEmpty(_this3.state.mainTopic) && _this3.stringIsNotEmpty(_this3.state.title) && _this3.stringIsNotEmpty(_this3.state.details)) pendingProcessesFunction.call(_this3, {\n                    userID: _this3.state.userID,\n                    isNewProcess: true,\n                    type: _this3.state.type,\n                    mainTopic: _this3.state.mainTopic,\n                    title: _this3.state.title,\n                    details: _this3.state.details\n                  });else _this3.setState({\n                    errorMessage: 'Please verify all fields are entered correctly and type is either \"driver\" or \"rider\"'\n                  });\n                } else {\n                  if (_this3.stringIsNotEmpty(_this3.state.title) && _this3.stringIsNotEmpty(_this3.state.details)) pendingProcessesFunction.call(_this3, {\n                    isNewProcess: false,\n                    title: _this3.state.title,\n                    details: _this3.state.details\n                  });else _this3.setState({\n                    errorMessage: 'Please verify all fields are entered correctly'\n                  });\n                }\n              }\n            },\n            children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n              type: \"TailSpin\",\n              color: colors.WHITE,\n              height: '20px',\n              width: '20px'\n            }) : /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Add Pending Process\"\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return PendingProcesses;\n}(React.Component);\n\nexport { PendingProcesses as default };\n;","map":{"version":3,"sources":["/Users/ugo/Documents/Perch_Projects/Perch-Website/functions/panels/adminPanels/pendingProcesses.js"],"names":["firebase","React","colors","formatDateAllValues","pendingProcessesFunction","styles","Loader","PendingProcesses","props","r","push","width","display","flexDirection","justifyContent","marginBottom","mainText","state","userID","height","backgroundColor","type","GREEN","BLUE","borderRadius","alignItems","readOrUnreadText","color","fontFamily","mainTopic","Date","timeCreated","data","pushID","setState","loading","database","ref","once","snapshot","oldV","forEach","v","val","listOfProcesses","viewList","result","addProcess","isNewProcess","title","details","errorMessage","s","length","results","keys","Object","sort","a","b","k","displayDate","previousMessageSum","loadOldList","fontSize","BLACK","GREY","sharedLine","marginTop","cont","enterKilometerDiv","marginLeft","button2","maxWidth","buttonBottom","WHITE","buttonText1","container","searchInput","event","target","value","toLowerCase","contactUsContent","renderList","em","textAlign","RED","stringIsNotEmpty","call","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,4CAAP;AACA,OAAO,+DAAP;AACA,SAASC,MAAT,EAAiBC,mBAAjB,EAAsCC,wBAAtC,QAAsE,iBAAtE;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;;;IACqBC,gB;;;;;AACjB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,iEA4BN,YAAM;AACf,UAAIC,CAAC,GAAG,EAAR;AACAA,MAAAA,CAAC,CAACC,IAAF,eACI;AAAA,gCACI;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,KAAT;AAAgBC,YAAAA,OAAO,EAAE,MAAzB;AAAiCC,YAAAA,aAAa,EAAE,KAAhD;AAAuDC,YAAAA,cAAc,EAAE,eAAvE;AAAwFC,YAAAA,YAAY,EAAE;AAAtG,WAAZ;AAAA,kCACI;AAAG,YAAA,SAAS,EAAEV,MAAM,CAACW,QAArB;AAAA,iDAA+C,MAAKC,KAAL,CAAWC,MAA1D;AAAA,YADJ,eAEI;AAAK,YAAA,KAAK,EAAE;AAAEP,cAAAA,KAAK,EAAE,MAAT;AAAiBQ,cAAAA,MAAM,EAAE,MAAzB;AAAiCC,cAAAA,eAAe,EAAE,MAAKH,KAAL,CAAWI,IAAX,IAAmB,OAAnB,GAA6BnB,MAAM,CAACoB,KAApC,GAA4CpB,MAAM,CAACqB,IAArG;AAA2GC,cAAAA,YAAY,EAAE,KAAzH;AAAgIZ,cAAAA,OAAO,EAAE,MAAzI;AAAiJE,cAAAA,cAAc,EAAE,QAAjK;AAA2KW,cAAAA,UAAU,EAAE;AAAvL,aAAZ;AAAA,mCACI;AAAG,cAAA,SAAS,EAAEpB,MAAM,CAACqB,gBAArB;AAAuC,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAE,SAAT;AAAoBC,gBAAAA,UAAU,EAAE;AAAhC,eAA9C;AAAA,wBAAqG,MAAKX,KAAL,CAAWI,IAAX,IAAmB,OAAnB,GAA6B,OAA7B,GAAuC;AAA5I;AADJ,YAFJ;AAAA,UADJ,eAOI;AAAK,UAAA,KAAK,EAAE;AAAEV,YAAAA,KAAK,EAAE,KAAT;AAAgBC,YAAAA,OAAO,EAAE,MAAzB;AAAiCC,YAAAA,aAAa,EAAE,KAAhD;AAAuDC,YAAAA,cAAc,EAAE,eAAvE;AAAwFC,YAAAA,YAAY,EAAE;AAAtG,WAAZ;AAAA,kCACI;AAAG,YAAA,SAAS,EAAEV,MAAM,CAACW,QAArB;AAAA,+CAA6C,MAAKC,KAAL,CAAWY,SAAxD;AAAA,YADJ,eAEI;AAAG,YAAA,SAAS,EAAExB,MAAM,CAACW,QAArB;AAAA,8CAAiDb,mBAAmB,CAAC,IAAI2B,IAAJ,CAAS,MAAKb,KAAL,CAAWc,WAApB,CAAD,CAApE;AAAA,YAFJ;AAAA,UAPJ;AAAA,QADJ;AAkBH,KAhDkB;;AAAA,kEAiDL,UAACC,IAAD,EAAU;AACpB,UAAQC,MAAR,GAAyDD,IAAzD,CAAQC,MAAR;AAAA,UAAgBf,MAAhB,GAAyDc,IAAzD,CAAgBd,MAAhB;AAAA,UAAwBG,IAAxB,GAAyDW,IAAzD,CAAwBX,IAAxB;AAAA,UAA8BQ,SAA9B,GAAyDG,IAAzD,CAA8BH,SAA9B;AAAA,UAAyCE,WAAzC,GAAyDC,IAAzD,CAAyCD,WAAzC;;AACA,YAAKG,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd,EAAiC,YAAM;AACnCnC,QAAAA,QAAQ,CAACoC,QAAT,GACKC,GADL,wCACyCJ,MADzC,GAEKK,IAFL,CAEU,OAFV,EAEmB,UAAAC,QAAQ,EAAI;AACvB,cAAIC,IAAI,GAAG,EAAX;AACAD,UAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAAC,CAAC,EAAI;AAClBF,YAAAA,IAAI,CAAC9B,IAAL,CAAUgC,CAAC,CAACC,GAAF,EAAV;AACH,WAFD;;AAGA,gBAAKT,QAAL,CAAc;AACVU,YAAAA,eAAe,EAAEJ,IADP;AAEVK,YAAAA,QAAQ,EAAE,IAFA;AAGVV,YAAAA,OAAO,EAAE,KAHC;AAIVjB,YAAAA,MAAM,EAAEA,MAJE;AAKVG,YAAAA,IAAI,EAAEA,IALI;AAMVQ,YAAAA,SAAS,EAAEA,SAND;AAOVE,YAAAA,WAAW,EAAEA;AAPH,WAAd;AASH,SAhBL;AAiBH,OAlBD;AAmBH,KAtEkB;;AAGf,UAAKd,KAAL,GAAa;AACT6B,MAAAA,MAAM,EAAE,EADC;AAETF,MAAAA,eAAe,EAAE,EAFR;AAITT,MAAAA,OAAO,EAAE,KAJA;AAMTY,MAAAA,UAAU,EAAE,KANH;AAOTC,MAAAA,YAAY,EAAE,KAPL;AAQTH,MAAAA,QAAQ,EAAE,KARD;AAST3B,MAAAA,MAAM,EAAE,EATC;AAUTG,MAAAA,IAAI,EAAE,EAVG;AAWTQ,MAAAA,SAAS,EAAE,EAXF;AAYTE,MAAAA,WAAW,EAAE,IAZJ;AAaTkB,MAAAA,KAAK,EAAE,EAbE;AAcTC,MAAAA,OAAO,EAAE,EAdA;AAgBTC,MAAAA,YAAY,EAAE;AAhBL,KAAb;AAHe;AAsBlB;;;;WACD,6BAAoB;AAAA;;AAChBnD,MAAAA,QAAQ,CAACoC,QAAT,GAAoBC,GAApB,yBAAgDC,IAAhD,CAAqD,OAArD,EAA8D,UAAAC,QAAQ,EAAI;AACtE,QAAA,MAAI,CAACL,QAAL,CAAc;AAAEY,UAAAA,MAAM,EAAEP,QAAQ,CAACI,GAAT;AAAV,SAAd;AACH,OAFD;AAGH;;;WA4CD,0BAAiBS,CAAjB,EAAoB;AAChB,aAAQA,CAAC,CAACC,MAAF,IAAY,CAApB;AACH;;;WACD,kBAAS;AAAA;;AACL,UAAIC,OAAO,GAAG,EAAd;AACA,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY,KAAKtC,KAAL,CAAW6B,MAAvB,EAA+BW,IAA/B,CAAoC,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUA,CAAC,GAAGD,CAAd;AAAA,OAApC,CAAb;;AAFK,iCAGIE,CAHJ;AAID,YAAM5B,IAAI,GAAG,MAAI,CAACf,KAAL,CAAW6B,MAAX,CAAkBS,IAAI,CAACK,CAAD,CAAtB,CAAb;AACA,YAAMC,WAAW,GAAG1D,mBAAmB,CAAC,IAAI2B,IAAJ,CAASE,IAAI,CAACD,WAAd,CAAD,CAAvC;AACAuB,QAAAA,OAAO,CAAC5C,IAAR,eACI;AAAA,kCACI;AACI,YAAA,SAAS,EAAEL,MAAM,CAACyD,kBADtB;AAEI,YAAA,OAAO,EAAE,mBAAM;AACX,cAAA,MAAI,CAACC,WAAL,CAAiB/B,IAAjB;AACH,aAJL;AAAA,oCAKI;AAAG,cAAA,KAAK,EAAE;AAAEgC,gBAAAA,QAAQ,EAAE,MAAZ;AAAoBpC,gBAAAA,UAAU,EAAE,gBAAhC;AAAkDD,gBAAAA,KAAK,EAAEzB,MAAM,CAAC+D;AAAhE,eAAV;AAAA,wBACKjC,IAAI,CAACH;AADV,cALJ,eAWI;AAAG,cAAA,KAAK,EAAE;AAAEmC,gBAAAA,QAAQ,EAAE,MAAZ;AAAoBpC,gBAAAA,UAAU,EAAE,cAAhC;AAAgDD,gBAAAA,KAAK,EAAEzB,MAAM,CAACoB;AAA9D,eAAV;AAAA,qCACI;AAAM,gBAAA,KAAK,EAAE;AAAEK,kBAAAA,KAAK,EAAEzB,MAAM,CAACgE;AAAhB,iBAAb;AAAA,0BAAsCL;AAAtC;AADJ,cAXJ;AAAA,YADJ,EAiBQD,CAAC,IAAIL,IAAI,CAACF,MAAL,GAAc,CAAnB,gBACI,mBADJ,gBAEI;AAAK,YAAA,SAAS,EAAEhD,MAAM,CAAC8D,UAAvB;AAAmC,YAAA,KAAK,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAb;AAA1C,YAnBZ;AAAA,UADJ;AANC;;AAGL,WAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACF,MAAzB,EAAiCO,CAAC,EAAlC,EAAsC;AAAA,cAA7BA,CAA6B;AA2BrC;;AAAA;AACD,wBAA6D,KAAK3C,KAAlE;AAAA,UAAQ8B,UAAR,eAAQA,UAAR;AAAA,UAAoBI,YAApB,eAAoBA,YAApB;AAAA,UAAkCH,YAAlC,eAAkCA,YAAlC;AAAA,UAAgDH,QAAhD,eAAgDA,QAAhD;AACA,0BACI;AAAK,QAAA,SAAS,EAAExC,MAAM,CAACgE,IAAvB;AAAA,mBACK,CAAEtB,UAAF,IAAiB,CAAEC,YAAnB,iBACG;AAAK,UAAA,SAAS,EAAE3C,MAAM,CAACiE,iBAAvB;AACI,UAAA,KAAK,EAAE;AAAEF,YAAAA,SAAS,EAAE,MAAb;AAAqBrD,YAAAA,YAAY,EAAE,KAAnC;AAA0CwD,YAAAA,UAAU,EAAE,MAAtD;AAA8D5D,YAAAA,KAAK,EAAE;AAArE,WADX;AAAA,iCAEI;AACI,YAAA,SAAS,EAAEN,MAAM,CAACmE,OADtB;AAEI,YAAA,KAAK,EAAE;AAAEpD,cAAAA,eAAe,EAAElB,MAAM,CAACoB,KAA1B;AAAiCX,cAAAA,KAAK,EAAE,MAAxC;AAAgD8D,cAAAA,QAAQ,EAAE;AAA1D,aAFX;AAGI,YAAA,EAAE,EAAEpE,MAAM,CAACqE,YAHf;AAII,YAAA,OAAO,EAAE,mBAAM;AACX,cAAA,MAAI,CAACxC,QAAL,CAAc;AACVa,gBAAAA,UAAU,EAAE,IADF;AAEVC,gBAAAA,YAAY,EAAE,IAFJ;AAGV9B,gBAAAA,MAAM,EAAE,EAHE;AAIVG,gBAAAA,IAAI,EAAE,EAJI;AAKVQ,gBAAAA,SAAS,EAAE,EALD;AAMVoB,gBAAAA,KAAK,EAAE,EANG;AAOVC,gBAAAA,OAAO,EAAE,EAPC;AASVC,gBAAAA,YAAY,EAAE;AATJ,eAAd;AAWH,aAhBL;AAAA,sBAiBK,KAAKlC,KAAL,CAAWkB,OAAX,gBACG,KAAC,MAAD;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,KAAK,EAAEjC,MAAM,CAACyE,KAFlB;AAGI,cAAA,MAAM,EAAE,MAHZ;AAII,cAAA,KAAK,EAAE;AAJX,cADH,gBAMG;AAAG,cAAA,SAAS,EAAEtE,MAAM,CAACuE,WAArB;AAAA;AAAA;AAvBR;AAFJ,UAFR,eA8BI;AAAK,UAAA,SAAS,EAAEvE,MAAM,CAACwE,SAAvB;AAAkC,UAAA,KAAK,EAAE;AAAEzD,YAAAA,eAAe,EAAElB,MAAM,CAACyE,KAA1B;AAAiCP,YAAAA,SAAS,EAAE;AAA5C,WAAzC;AAAA,kCACI;AAAG,YAAA,SAAS,EAAE/D,MAAM,CAAC4C,KAArB;AAA4B,YAAA,KAAK,EAAE;AAAEtB,cAAAA,KAAK,EAAEzB,MAAM,CAAC+D;AAAhB,aAAnC;AAAA;AAAA,YADJ,EAEKlB,UAAU,gBACP;AAAA,uBACKC,YAAY,gBACT;AAAA,sCACI;AAAK,gBAAA,KAAK,EAAE;AAAErC,kBAAAA,KAAK,EAAE,KAAT;AAAgBC,kBAAAA,OAAO,EAAE,MAAzB;AAAiCC,kBAAAA,aAAa,EAAE,KAAhD;AAAuDC,kBAAAA,cAAc,EAAE,eAAvE;AAAwFC,kBAAAA,YAAY,EAAE;AAAtG,iBAAZ;AAAA,wCACI;AACI,kBAAA,IAAI,EAAC,MADT;AAEI,kBAAA,WAAW,EAAC,SAFhB;AAGI,kBAAA,SAAS,EAAEV,MAAM,CAACyE,WAHtB;AAII,kBAAA,KAAK,EAAE;AAAEnE,oBAAAA,KAAK,EAAE;AAAT,mBAJX;AAKI,kBAAA,KAAK,EAAE,KAAKM,KAAL,CAAWC,MALtB;AAMI,kBAAA,QAAQ,EAAE,kBAAA6D,KAAK,EAAI;AACf,oBAAA,MAAI,CAAC7C,QAAL,CAAc;AAAEhB,sBAAAA,MAAM,EAAE6D,KAAK,CAACC,MAAN,CAAaC;AAAvB,qBAAd;AACH;AARL,kBADJ,eAWI;AACI,kBAAA,IAAI,EAAC,MADT;AAEI,kBAAA,WAAW,EAAC,MAFhB;AAGI,kBAAA,SAAS,EAAE5E,MAAM,CAACyE,WAHtB;AAII,kBAAA,KAAK,EAAE;AAAEnE,oBAAAA,KAAK,EAAE;AAAT,mBAJX;AAKI,kBAAA,KAAK,EAAE,KAAKM,KAAL,CAAWI,IALtB;AAMI,kBAAA,QAAQ,EAAE,kBAAA0D,KAAK,EAAI;AACf,oBAAA,MAAI,CAAC7C,QAAL,CAAc;AAAEb,sBAAAA,IAAI,EAAE0D,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,WAAnB;AAAR,qBAAd;AACH;AARL,kBAXJ;AAAA,gBADJ,eAuBI;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,WAAW,EAAC,YAFhB;AAGI,gBAAA,SAAS,EAAE7E,MAAM,CAACyE,WAHtB;AAII,gBAAA,KAAK,EAAE;AAAEnE,kBAAAA,KAAK,EAAE,KAAT;AAAgByD,kBAAAA,SAAS,EAAE;AAA3B,iBAJX;AAKI,gBAAA,KAAK,EAAE,KAAKnD,KAAL,CAAWY,SALtB;AAMI,gBAAA,QAAQ,EAAE,kBAAAkD,KAAK,EAAI;AACf,kBAAA,MAAI,CAAC7C,QAAL,CAAc;AAAEL,oBAAAA,SAAS,EAAEkD,KAAK,CAACC,MAAN,CAAaC;AAA1B,mBAAd;AACH;AARL,gBAvBJ;AAAA,cADS,gBAmCT;AAAA,sCACI;AAAK,gBAAA,KAAK,EAAE;AAAEtE,kBAAAA,KAAK,EAAE,KAAT;AAAgBC,kBAAAA,OAAO,EAAE,MAAzB;AAAiCC,kBAAAA,aAAa,EAAE,KAAhD;AAAuDC,kBAAAA,cAAc,EAAE,eAAvE;AAAwFC,kBAAAA,YAAY,EAAE;AAAtG,iBAAZ;AAAA,wCACI;AAAG,kBAAA,SAAS,EAAEV,MAAM,CAACW,QAArB;AAAA,uDAA+C,KAAKC,KAAL,CAAWC,MAA1D;AAAA,kBADJ,eAEI;AAAK,kBAAA,KAAK,EAAE;AAAEP,oBAAAA,KAAK,EAAE,MAAT;AAAiBQ,oBAAAA,MAAM,EAAE,MAAzB;AAAiCC,oBAAAA,eAAe,EAAE,KAAKH,KAAL,CAAWI,IAAX,IAAmB,OAAnB,GAA6BnB,MAAM,CAACoB,KAApC,GAA4CpB,MAAM,CAACqB,IAArG;AAA2GC,oBAAAA,YAAY,EAAE,KAAzH;AAAgIZ,oBAAAA,OAAO,EAAE,MAAzI;AAAiJE,oBAAAA,cAAc,EAAE,QAAjK;AAA2KW,oBAAAA,UAAU,EAAE;AAAvL,mBAAZ;AAAA,yCACI;AAAG,oBAAA,SAAS,EAAEpB,MAAM,CAACqB,gBAArB;AAAuC,oBAAA,KAAK,EAAE;AAAEC,sBAAAA,KAAK,EAAE,SAAT;AAAoBC,sBAAAA,UAAU,EAAE;AAAhC,qBAA9C;AAAA,8BAAqG,KAAKX,KAAL,CAAWI,IAAX,IAAmB,OAAnB,GAA6B,OAA7B,GAAuC;AAA5I;AADJ,kBAFJ;AAAA,gBADJ,eAOI;AAAK,gBAAA,KAAK,EAAE;AAAEV,kBAAAA,KAAK,EAAE,KAAT;AAAgBC,kBAAAA,OAAO,EAAE,MAAzB;AAAiCC,kBAAAA,aAAa,EAAE,KAAhD;AAAuDC,kBAAAA,cAAc,EAAE,eAAvE;AAAwFC,kBAAAA,YAAY,EAAE;AAAtG,iBAAZ;AAAA,wCACI;AAAG,kBAAA,SAAS,EAAEV,MAAM,CAACW,QAArB;AAAA,qDAA6C,KAAKC,KAAL,CAAWY,SAAxD;AAAA,kBADJ,eAEI;AAAG,kBAAA,SAAS,EAAExB,MAAM,CAACW,QAArB;AAAA,oDAAiDb,mBAAmB,CAAC,IAAI2B,IAAJ,CAAS,KAAKb,KAAL,CAAWc,WAApB,CAAD,CAApE;AAAA,kBAFJ;AAAA,gBAPJ;AAAA,cApCR,eAgDI;AACI,cAAA,IAAI,EAAC,MADT;AAEI,cAAA,WAAW,EAAC,OAFhB;AAGI,cAAA,SAAS,EAAE1B,MAAM,CAACyE,WAHtB;AAII,cAAA,KAAK,EAAE;AAAEnE,gBAAAA,KAAK,EAAE,KAAT;AAAgByD,gBAAAA,SAAS,EAAE;AAA3B,eAJX;AAKI,cAAA,KAAK,EAAE,KAAKnD,KAAL,CAAWgC,KALtB;AAMI,cAAA,QAAQ,EAAE,kBAAA8B,KAAK,EAAI;AACf,gBAAA,MAAI,CAAC7C,QAAL,CAAc;AAAEe,kBAAAA,KAAK,EAAE8B,KAAK,CAACC,MAAN,CAAaC;AAAtB,iBAAd;AACH;AARL,cAhDJ,eA0DI;AACI,cAAA,IAAI,EAAC,MADT;AAEI,cAAA,WAAW,EAAC,SAFhB;AAGI,cAAA,SAAS,EAAE5E,MAAM,CAAC8E,gBAHtB;AAII,cAAA,KAAK,EAAE;AAAExE,gBAAAA,KAAK,EAAE,KAAT;AAAgByD,gBAAAA,SAAS,EAAE,MAA3B;AAAmCJ,gBAAAA,QAAQ,EAAE;AAA7C,eAJX;AAKI,cAAA,KAAK,EAAE,KAAK/C,KAAL,CAAWiC,OALtB;AAMI,cAAA,QAAQ,EAAE,kBAAA6B,KAAK,EAAI;AACf,gBAAA,MAAI,CAAC7C,QAAL,CAAc;AAAEgB,kBAAAA,OAAO,EAAE6B,KAAK,CAACC,MAAN,CAAaC;AAAxB,iBAAd;AACH;AARL,cA1DJ;AAAA,YADO,GAuEPpC,QAAQ,gBACJ;AAAA,oCACI;AAAK,cAAA,KAAK,EAAE;AAAE1B,gBAAAA,MAAM,EAAE,MAAV;AAAkBR,gBAAAA,KAAK,EAAE;AAAzB;AAAZ,cADJ,EAEK,KAAKyE,UAAL,EAFL;AAAA,YADI,gBAKJ;AAAA,oCACI;AAAK,cAAA,KAAK,EAAE;AAAEjE,gBAAAA,MAAM,EAAE,MAAV;AAAkBR,gBAAAA,KAAK,EAAE;AAAzB;AAAZ,cADJ,EAEK2C,OAFL;AAAA,YA9EZ,EAmFKH,YAAY,IAAI,EAAhB,iBAAsB;AACnB,YAAA,SAAS,EAAE9C,MAAM,CAACgF,EADC;AAEnB,YAAA,KAAK,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAFY;AAAA,sBAEenC;AAFf,YAnF3B;AAAA,UA9BJ,EAsHKJ,UAAU,iBAAI;AAAK,UAAA,SAAS,EAAE1C,MAAM,CAACiE,iBAAvB;AACX,UAAA,KAAK,EAAE;AAAEF,YAAAA,SAAS,EAAE,MAAb;AAAqBrD,YAAAA,YAAY,EAAE,OAAnC;AAA4CwD,YAAAA,UAAU,EAAE,MAAxD;AAAgE5D,YAAAA,KAAK,EAAE;AAAvE,WADI;AAAA,kCAEX;AACI,YAAA,SAAS,EAAEN,MAAM,CAACmE,OADtB;AAEI,YAAA,KAAK,EAAE;AAAEpD,cAAAA,eAAe,EAAElB,MAAM,CAACqF;AAA1B,aAFX;AAGI,YAAA,EAAE,EAAElF,MAAM,CAACqE,YAHf;AAII,YAAA,OAAO,EAAE,mBAAM;AACX,kBAAI3B,UAAJ,EACI,MAAI,CAACb,QAAL,CAAc;AACVa,gBAAAA,UAAU,EAAE,KADF;AAEVC,gBAAAA,YAAY,EAAE,KAFJ;AAGV9B,gBAAAA,MAAM,EAAE,EAHE;AAIVG,gBAAAA,IAAI,EAAE,EAJI;AAKVQ,gBAAAA,SAAS,EAAE,EALD;AAMVE,gBAAAA,WAAW,EAAE,IANH;AAOVkB,gBAAAA,KAAK,EAAE,EAPG;AAQVC,gBAAAA,OAAO,EAAE,EARC;AAUVC,gBAAAA,YAAY,EAAE;AAVJ,eAAd;AAYP,aAlBL;AAAA,mCAmBI;AAAG,cAAA,SAAS,EAAE9C,MAAM,CAACuE,WAArB;AAAA;AAAA;AAnBJ,YAFW,eAuBX;AACI,YAAA,SAAS,EAAEvE,MAAM,CAACmE,OADtB;AAEI,YAAA,KAAK,EAAE;AAAEpD,cAAAA,eAAe,EAAElB,MAAM,CAACoB;AAA1B,aAFX;AAGI,YAAA,EAAE,EAAEjB,MAAM,CAACqE,YAHf;AAII,YAAA,OAAO,EAAE,mBAAM;AACX,kBAAI3B,UAAJ,EAAgB;AACZ,oBAAIC,YAAJ,EAAkB;AACd,sBACI,MAAI,CAACwC,gBAAL,CAAsB,MAAI,CAACvE,KAAL,CAAWC,MAAjC,MACC,MAAI,CAACD,KAAL,CAAWI,IAAX,IAAmB,OAAnB,IAA8B,MAAI,CAACJ,KAAL,CAAWI,IAAX,IAAmB,QADlD,KAEA,MAAI,CAACmE,gBAAL,CAAsB,MAAI,CAACvE,KAAL,CAAWY,SAAjC,CAFA,IAGA,MAAI,CAAC2D,gBAAL,CAAsB,MAAI,CAACvE,KAAL,CAAWgC,KAAjC,CAHA,IAIA,MAAI,CAACuC,gBAAL,CAAsB,MAAI,CAACvE,KAAL,CAAWiC,OAAjC,CALJ,EAOI9C,wBAAwB,CAACqF,IAAzB,CAA8B,MAA9B,EAAoC;AAChCvE,oBAAAA,MAAM,EAAE,MAAI,CAACD,KAAL,CAAWC,MADa;AAEhC8B,oBAAAA,YAAY,EAAE,IAFkB;AAGhC3B,oBAAAA,IAAI,EAAE,MAAI,CAACJ,KAAL,CAAWI,IAHe;AAIhCQ,oBAAAA,SAAS,EAAE,MAAI,CAACZ,KAAL,CAAWY,SAJU;AAKhCoB,oBAAAA,KAAK,EAAE,MAAI,CAAChC,KAAL,CAAWgC,KALc;AAMhCC,oBAAAA,OAAO,EAAE,MAAI,CAACjC,KAAL,CAAWiC;AANY,mBAApC,EAPJ,KAgBI,MAAI,CAAChB,QAAL,CAAc;AACViB,oBAAAA,YAAY,EAAE;AADJ,mBAAd;AAGP,iBApBD,MAqBK;AACD,sBACI,MAAI,CAACqC,gBAAL,CAAsB,MAAI,CAACvE,KAAL,CAAWgC,KAAjC,KACA,MAAI,CAACuC,gBAAL,CAAsB,MAAI,CAACvE,KAAL,CAAWiC,OAAjC,CAFJ,EAII9C,wBAAwB,CAACqF,IAAzB,CAA8B,MAA9B,EAAoC;AAChCzC,oBAAAA,YAAY,EAAE,KADkB;AAEhCC,oBAAAA,KAAK,EAAE,MAAI,CAAChC,KAAL,CAAWgC,KAFc;AAGhCC,oBAAAA,OAAO,EAAE,MAAI,CAACjC,KAAL,CAAWiC;AAHY,mBAApC,EAJJ,KAUI,MAAI,CAAChB,QAAL,CAAc;AACViB,oBAAAA,YAAY,EAAE;AADJ,mBAAd;AAGP;AACJ;AACJ,aA3CL;AAAA,sBA4CK,KAAKlC,KAAL,CAAWkB,OAAX,gBACG,KAAC,MAAD;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,KAAK,EAAEjC,MAAM,CAACyE,KAFlB;AAGI,cAAA,MAAM,EAAE,MAHZ;AAII,cAAA,KAAK,EAAE;AAJX,cADH,gBAMG;AAAG,cAAA,SAAS,EAAEtE,MAAM,CAACuE,WAArB;AAAA;AAAA;AAlDR,YAvBW;AAAA,UAtHnB;AAAA,QADJ;AAsMH;;;;EAjTyC3E,KAAK,CAACyF,S;;SAA/BnF,gB;AAkTpB","sourcesContent":["import firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, formatDateAllValues, pendingProcessesFunction } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport Loader from 'react-loader-spinner';\nexport default class PendingProcesses extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            result: {},\n            listOfProcesses: [],\n\n            loading: false,\n\n            addProcess: false,\n            isNewProcess: false,\n            viewList: false,\n            userID: '',\n            type: '',\n            mainTopic: '',\n            timeCreated: null,\n            title: '',\n            details: '',\n\n            errorMessage: '',\n\n        };\n    };\n    componentDidMount() {\n        firebase.database().ref(`pendingProcessesList`).once('value', snapshot => {\n            this.setState({ result: snapshot.val() })\n        })\n    };\n    renderList = () => {\n        let r = [];\n        r.push(\n            <>\n                <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '0px' }}>\n                    <p className={styles.mainText}>{`• User ID - ${this.state.userID}`}</p>\n                    <div style={{ width: '90px', height: '30px', backgroundColor: this.state.type == 'rider' ? colors.GREEN : colors.BLUE, borderRadius: '5px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <p className={styles.readOrUnreadText} style={{ color: '#ffffff', fontFamily: 'Gilroy-ExtraBold' }}>{this.state.type == 'rider' ? 'Rider' : 'Driver'}</p>\n                    </div>\n                </div>\n                <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '0px' }}>\n                    <p className={styles.mainText}>{`• Topic - ${this.state.mainTopic}`}</p>\n                    <p className={styles.mainText}>{`Created at  ( ${formatDateAllValues(new Date(this.state.timeCreated))} )`}</p>\n                </div>\n            </>\n        );\n\n\n\n\n    };\n    loadOldList = (data) => {\n        const { pushID, userID, type, mainTopic, timeCreated } = data;\n        this.setState({ loading: true }, () => {\n            firebase.database()\n                .ref(`pendingProcessesListMessages/${pushID}`)\n                .once('value', snapshot => {\n                    let oldV = [];\n                    snapshot.forEach(v => {\n                        oldV.push(v.val())\n                    })\n                    this.setState({\n                        listOfProcesses: oldV,\n                        viewList: true,\n                        loading: false,\n                        userID: userID,\n                        type: type,\n                        mainTopic: mainTopic,\n                        timeCreated: timeCreated\n                    });\n                })\n        })\n    };\n    stringIsNotEmpty(s) {\n        return (s.length >= 4);\n    };\n    render() {\n        let results = [];\n        const keys = Object.keys(this.state.result).sort((a, b) => b - a);\n        for (let k = 0; k < keys.length; k++) {\n            const data = this.state.result[keys[k]];\n            const displayDate = formatDateAllValues(new Date(data.timeCreated))\n            results.push(\n                <>\n                    <div\n                        className={styles.previousMessageSum}\n                        onClick={() => {\n                            this.loadOldList(data)\n                        }}>\n                        <p style={{ fontSize: '105%', fontFamily: 'Gilroy-Regular', color: colors.BLACK }}>\n                            {data.mainTopic}\n                        </p>\n                        {/* <div style={{ width: '90px', height: '30px', backgroundColor: data.type == 'rider' ? colors.GREEN : colors.BLUE, borderRadius: '5px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                            <p className={styles.readOrUnreadText} style={{ color: '#ffffff', fontFamily: 'Gilroy-ExtraBold' }}>{data.type == 'rider' ? 'Rider' : 'Driver'}</p>\n                        </div> */}\n                        <p style={{ fontSize: '100%', fontFamily: 'Gilroy-Light', color: colors.GREEN }}>\n                            <span style={{ color: colors.GREY }}>{displayDate}</span>\n                        </p>\n                    </div>\n                    {\n                        k == keys.length - 1 ?\n                            <></> :\n                            <div className={styles.sharedLine} style={{ marginTop: '5px' }}></div>\n                    }\n                </>\n            )\n        };\n        const { addProcess, errorMessage, isNewProcess, viewList } = this.state;\n        return (\n            <div className={styles.cont}>\n                {!(addProcess) && !(isNewProcess) &&\n                    <div className={styles.enterKilometerDiv}\n                        style={{ marginTop: '20px', marginBottom: '0px', marginLeft: '2.5%', width: '95%' }}>\n                        <div\n                            className={styles.button2}\n                            style={{ backgroundColor: colors.GREEN, width: '100%', maxWidth: 'initial' }}\n                            id={styles.buttonBottom}\n                            onClick={() => {\n                                this.setState({\n                                    addProcess: true,\n                                    isNewProcess: true,\n                                    userID: '',\n                                    type: '',\n                                    mainTopic: '',\n                                    title: '',\n                                    details: '',\n\n                                    errorMessage: '',\n                                })\n                            }}>\n                            {this.state.loading ?\n                                <Loader\n                                    type=\"TailSpin\"\n                                    color={colors.WHITE}\n                                    height={'20px'}\n                                    width={'20px'} /> :\n                                <p className={styles.buttonText1}>Add New Process</p>}\n                        </div>\n                    </div>}\n                <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                    <p className={styles.title} style={{ color: colors.BLACK }}>List of pending processes</p>\n                    {addProcess ?\n                        <>\n                            {isNewProcess ?\n                                <>\n                                    <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '0px' }}>\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"User ID\"\n                                            className={styles.searchInput}\n                                            style={{ width: '67%' }}\n                                            value={this.state.userID}\n                                            onChange={event => {\n                                                this.setState({ userID: event.target.value });\n                                            }}\n                                        />\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Type\"\n                                            className={styles.searchInput}\n                                            style={{ width: '32%' }}\n                                            value={this.state.type}\n                                            onChange={event => {\n                                                this.setState({ type: event.target.value.toLowerCase() });\n                                            }}\n                                        />\n                                    </div>\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Main topic\"\n                                        className={styles.searchInput}\n                                        style={{ width: '90%', marginTop: '15px' }}\n                                        value={this.state.mainTopic}\n                                        onChange={event => {\n                                            this.setState({ mainTopic: event.target.value });\n                                        }}\n                                    />\n                                </> :\n                                <>\n                                    <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '0px' }}>\n                                        <p className={styles.mainText}>{`• User ID - ${this.state.userID}`}</p>\n                                        <div style={{ width: '90px', height: '30px', backgroundColor: this.state.type == 'rider' ? colors.GREEN : colors.BLUE, borderRadius: '5px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                            <p className={styles.readOrUnreadText} style={{ color: '#ffffff', fontFamily: 'Gilroy-ExtraBold' }}>{this.state.type == 'rider' ? 'Rider' : 'Driver'}</p>\n                                        </div>\n                                    </div>\n                                    <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '0px' }}>\n                                        <p className={styles.mainText}>{`• Topic - ${this.state.mainTopic}`}</p>\n                                        <p className={styles.mainText}>{`Created at  ( ${formatDateAllValues(new Date(this.state.timeCreated))} )`}</p>\n                                    </div>\n                                </>}\n                            <input\n                                type=\"text\"\n                                placeholder=\"Title\"\n                                className={styles.searchInput}\n                                style={{ width: '90%', marginTop: '15px' }}\n                                value={this.state.title}\n                                onChange={event => {\n                                    this.setState({ title: event.target.value });\n                                }}\n                            />\n                            <textarea\n                                type=\"text\"\n                                placeholder=\"Details\"\n                                className={styles.contactUsContent}\n                                style={{ width: '90%', marginTop: '15px', fontSize: '100%' }}\n                                value={this.state.details}\n                                onChange={event => {\n                                    this.setState({ details: event.target.value });\n                                }}\n                            />\n                        </>\n                        :\n                        viewList ?\n                            <>\n                                <div style={{ height: '20px', width: '100%' }}></div>\n                                {this.renderList()}\n                            </> :\n                            <>\n                                <div style={{ height: '20px', width: '100%' }}></div>\n                                {results}\n                            </>\n                    }\n                    {errorMessage != '' && <p\n                        className={styles.em}\n                        style={{ textAlign: 'initial' }}>{errorMessage}</p>}\n                </div>\n\n                {addProcess && <div className={styles.enterKilometerDiv}\n                    style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                    <div\n                        className={styles.button2}\n                        style={{ backgroundColor: colors.RED }}\n                        id={styles.buttonBottom}\n                        onClick={() => {\n                            if (addProcess)\n                                this.setState({\n                                    addProcess: false,\n                                    isNewProcess: false,\n                                    userID: '',\n                                    type: '',\n                                    mainTopic: '',\n                                    timeCreated: null,\n                                    title: '',\n                                    details: '',\n\n                                    errorMessage: '',\n                                })\n                        }}>\n                        <p className={styles.buttonText1}>Cancel</p>\n                    </div>\n                    <div\n                        className={styles.button2}\n                        style={{ backgroundColor: colors.GREEN }}\n                        id={styles.buttonBottom}\n                        onClick={() => {\n                            if (addProcess) {\n                                if (isNewProcess) {\n                                    if (\n                                        this.stringIsNotEmpty(this.state.userID) &&\n                                        (this.state.type == 'rider' || this.state.type == 'driver') &&\n                                        this.stringIsNotEmpty(this.state.mainTopic) &&\n                                        this.stringIsNotEmpty(this.state.title) &&\n                                        this.stringIsNotEmpty(this.state.details)\n                                    )\n                                        pendingProcessesFunction.call(this, {\n                                            userID: this.state.userID,\n                                            isNewProcess: true,\n                                            type: this.state.type,\n                                            mainTopic: this.state.mainTopic,\n                                            title: this.state.title,\n                                            details: this.state.details,\n                                        });\n                                    else\n                                        this.setState({\n                                            errorMessage: 'Please verify all fields are entered correctly and type is either \"driver\" or \"rider\"'\n                                        });\n                                }\n                                else {\n                                    if (\n                                        this.stringIsNotEmpty(this.state.title) &&\n                                        this.stringIsNotEmpty(this.state.details)\n                                    )\n                                        pendingProcessesFunction.call(this, {\n                                            isNewProcess: false,\n                                            title: this.state.title,\n                                            details: this.state.details,\n                                        });\n                                    else\n                                        this.setState({\n                                            errorMessage: 'Please verify all fields are entered correctly'\n                                        });\n                                }\n                            }\n                        }}>\n                        {this.state.loading ?\n                            <Loader\n                                type=\"TailSpin\"\n                                color={colors.WHITE}\n                                height={'20px'}\n                                width={'20px'} /> :\n                            <p className={styles.buttonText1}>Add Pending Process</p>}\n                    </div>\n                </div>}\n            </div>\n        )\n\n    }\n};"]},"metadata":{},"sourceType":"module"}