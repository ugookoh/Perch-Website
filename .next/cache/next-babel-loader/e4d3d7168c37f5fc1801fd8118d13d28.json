{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, distanceCalculator, formatDateAllValues, isNumber, M, millisToMinutesAndSeconds, cancelledTripResolver } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport GoogleMapReact from 'google-map-react';\n\nvar polyline = require(\"@mapbox/polyline\");\n\nimport { BiCurrentLocation } from 'react-icons/bi';\nimport * as turf from '@turf/turf'; //for encoding polylines\n\nimport Loader from 'react-loader-spinner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar CancelledTrips = /*#__PURE__*/function (_React$Component) {\n  _inherits(CancelledTrips, _React$Component);\n\n  var _super = _createSuper(CancelledTrips);\n\n  function CancelledTrips(props) {\n    var _this;\n\n    _classCallCheck(this, CancelledTrips);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"loadResult\", function () {\n      firebase.database().ref(\"cancelled_UNRESOLVED\").once('value', function (snapshot) {\n        _this.setState({\n          result: snapshot.val() ? snapshot.val() : {}\n        });\n      })[\"catch\"](function (error) {\n        alert(error.message);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMapBounds\", function (map, maps, legs) {\n      var bounds = new maps.LatLngBounds();\n\n      var r = _toConsumableArray(legs);\n\n      var line = turf.lineString(r);\n      turf.bboxPolygon(turf.bbox(line)).geometry.coordinates[0].forEach(function (v) {\n        bounds.extend(new maps.LatLng(v[0], v[1]));\n      });\n      map.fitBounds(bounds);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPolylines\", function (map, maps, fitToBoundsOnly) {\n      function geodesicPolyline(polyline_, m, color) {\n        var poly = polyline.decode(polyline_);\n\n        for (var i = 0; i < poly.length; i++) {\n          m.push({\n            lat: poly[i][0],\n            lng: poly[i][1]\n          });\n        }\n\n        if (!fitToBoundsOnly) {\n          var geodesicPolyliner = new maps.Polyline({\n            path: m,\n            options: {\n              strokeColor: color,\n              strokeOpacity: 1,\n              strokeWeight: 4\n            }\n          });\n          geodesicPolyliner.setMap(map);\n        }\n      }\n\n      ;\n      var polylines = _this.state.currentData.polylines;\n      var markers1 = [],\n          markers2 = [],\n          markers3 = [];\n      if (polylines !== null && polylines !== void 0 && polylines.firstLeg) geodesicPolyline(polylines === null || polylines === void 0 ? void 0 : polylines.firstLeg, markers1, colors.GREEN);\n      if (polylines !== null && polylines !== void 0 && polylines.secondLeg) geodesicPolyline(polylines === null || polylines === void 0 ? void 0 : polylines.secondLeg, markers2, colors.BLUE);\n      if (polylines !== null && polylines !== void 0 && polylines.thirdLeg) geodesicPolyline(polylines === null || polylines === void 0 ? void 0 : polylines.thirdLeg, markers3, colors.PURPLE);\n      var newArray = [].concat(markers1, markers2, markers3);\n\n      _this.getMapBounds(map, maps, newArray.map(function (v) {\n        return [v.lat, v.lng];\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderDriverMarkers\", function (tripDetails) {\n      var driverMarkers = [];\n\n      for (var key in tripDetails) {\n        var image = '';\n\n        switch (key) {\n          case '_1':\n            {\n              image = '/greenCarIcon.svg';\n            }\n            break;\n\n          case '_2':\n            {\n              image = '/blueCarIcon.svg';\n            }\n            break;\n\n          case '_3':\n            {\n              image = '/purpleCarIcon.svg';\n            }\n            break;\n        }\n\n        ;\n        driverMarkers.push( /*#__PURE__*/_jsx(\"img\", {\n          lat: tripDetails[key].location.latitude,\n          lng: tripDetails[key].location.longitude,\n          src: image,\n          className: styles.mapIcon\n        }, key));\n      }\n\n      ;\n      return driverMarkers;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCurrentDataCost\", function (currentData) {\n      var cost = currentData.cost,\n          driverID = currentData.driverID,\n          tripDetails = currentData.tripDetails;\n      var toDrivers = cost.toDrivers,\n          total = cost.total,\n          usedPerchKms = cost.usedPerchKms;\n      var v = [];\n      v.push( /*#__PURE__*/_jsx(_Fragment, {\n        children: !!usedPerchKms && /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.breakdownSpreadApart,\n          style: {\n            marginTop: 20\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Regular',\n              margin: 0\n            },\n            children: \"Perch Kilometers paid\"\n          }), /*#__PURE__*/_jsxs(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Medium',\n              margin: 0\n            },\n            children: [usedPerchKms.toFixed(2), \" km\"]\n          })]\n        }, 'second')\n      }));\n      var cut = 0;\n\n      for (var key in toDrivers) {\n        var value = '';\n        var toCkeckIfCanceller = '';\n\n        switch (key) {\n          case 'firstDriverPay':\n            {\n              value = \"First driver's cut\";\n              toCkeckIfCanceller = '_1';\n            }\n            break;\n\n          case 'secondDriverPay':\n            {\n              value = \"Second driver's cut\";\n              toCkeckIfCanceller = '_2';\n            }\n            break;\n\n          case 'thirdDriverPay':\n            {\n              value = \"Third driver's cut\";\n              toCkeckIfCanceller = '_3';\n            }\n            break;\n        }\n\n        ;\n        cut += toDrivers[key];\n        if (toDrivers[key]) v.push( /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.breakdownSpreadApart,\n          style: {\n            marginTop: 15\n          },\n          children: [/*#__PURE__*/_jsxs(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Regular',\n              margin: 0\n            },\n            children: [value, \" \", /*#__PURE__*/_jsx(\"span\", {\n              style: {\n                fontFamily: 'Gilroy-Semibold',\n                color: colors.GREY\n              },\n              children: driverID == tripDetails[toCkeckIfCanceller].driverID ? ' (CANCELLER)' : ''\n            })]\n          }), /*#__PURE__*/_jsxs(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Medium',\n              margin: 0\n            },\n            children: [\"$\", toDrivers[key]]\n          })]\n        }, key));\n      }\n\n      cut = Number(total) - cut;\n      v.unshift( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Semibold',\n            margin: 0\n          },\n          children: \"Admin's cut\"\n        }), /*#__PURE__*/_jsxs(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Bold',\n            margin: 0\n          },\n          children: [\"$\", cut.toFixed(2)]\n        })]\n      }, 'cut'));\n      v.push( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0,\n            color: colors.GREEN\n          },\n          children: \"Total paid\"\n        }), /*#__PURE__*/_jsxs(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Medium',\n            margin: 0,\n            color: colors.GREEN\n          },\n          children: [\"$\", total]\n        })]\n      }, 'top'));\n      return v;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCurrentDataRefund\", function (cost) {\n      var toDrivers = cost.toDrivers,\n          total = cost.total,\n          usedPerchKms = cost.usedPerchKms;\n      var v = [];\n      v.push( /*#__PURE__*/_jsx(_Fragment, {\n        children: !!usedPerchKms && /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.breakdownSpreadApart,\n          style: {\n            marginTop: 15\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Regular',\n              margin: 0\n            },\n            children: \"Refund Rider Perch Kilometers\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            placeholder: \"$\".concat(usedPerchKms),\n            className: styles.searchInput,\n            style: {\n              width: '20%',\n              height: '40px'\n            },\n            value: _this.state.refundRiderPerchKms,\n            onChange: function onChange(event) {\n              var value = event.target.value;\n              if (isNumber(value) && Number(value) <= usedPerchKms || !value) _this.setState({\n                refundRiderPerchKms: value\n              });\n            }\n          })]\n        }, '2')\n      }));\n      var cut = 0;\n\n      var _loop = function _loop(key) {\n        var value = '';\n        var toEdit = '';\n\n        switch (key) {\n          case 'firstDriverPay':\n            {\n              value = \"First driver's payment\";\n              toEdit = 'payFirstDriver';\n            }\n            break;\n\n          case 'secondDriverPay':\n            {\n              value = \"Second driver's payment\";\n              toEdit = 'paySecondDriver';\n            }\n            break;\n\n          case 'thirdDriverPay':\n            {\n              value = \"Third driver's payment\";\n              toEdit = 'payThirdDriver';\n            }\n            break;\n        }\n\n        ;\n        cut += toDrivers[key];\n        if (toDrivers[key]) v.push( /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.breakdownSpreadApart,\n          style: {\n            marginTop: 15\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Regular',\n              margin: 0\n            },\n            children: value\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            placeholder: \"$\".concat(toDrivers[key]),\n            className: styles.searchInput,\n            style: {\n              width: '20%',\n              height: '40px'\n            },\n            value: _this.state[toEdit],\n            onChange: function onChange(event) {\n              var value = event.target.value;\n              if (isNumber(value) && Number(value) <= toDrivers[key] || !value) _this.setState(_defineProperty({}, toEdit, value));\n            }\n          })]\n        }, key));\n      };\n\n      for (var key in toDrivers) {\n        _loop(key);\n      }\n\n      ;\n      cut = Number(Number(total) - cut).toFixed(2);\n      v.unshift( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: \"Admin's cut\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          placeholder: \"$\".concat(cut),\n          className: styles.searchInput,\n          style: {\n            width: '20%',\n            height: '40px'\n          },\n          value: _this.state.adminCut,\n          onChange: function onChange(event) {\n            var value = event.target.value;\n            if (isNumber(value) && Number(value) <= cut || !value) _this.setState({\n              adminCut: value\n            });\n          }\n        })]\n      }, 'cut'));\n      v.push( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: \"Refund Rider Cash\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          placeholder: \"$\".concat(total),\n          className: styles.searchInput,\n          style: {\n            width: '20%',\n            height: '40px'\n          },\n          value: _this.state.refundRiderAmount,\n          onChange: function onChange(event) {\n            var value = event.target.value;\n            if (isNumber(value) && Number(value) <= Number(total) || !value) _this.setState({\n              refundRiderAmount: value\n            });\n          }\n        })]\n      }, \"1\"));\n      return v;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"costIsBalanced\", function () {\n      var _this$state = _this.state,\n          refundRiderAmount = _this$state.refundRiderAmount,\n          currentData = _this$state.currentData,\n          payFirstDriver = _this$state.payFirstDriver,\n          paySecondDriver = _this$state.paySecondDriver,\n          payThirdDriver = _this$state.payThirdDriver,\n          adminCut = _this$state.adminCut,\n          refundRiderPerchKms = _this$state.refundRiderPerchKms,\n          costPerPerchKM = _this$state.costPerPerchKM;\n      var refundedCash = Number(Number(refundRiderAmount == \"\" ? 0 : refundRiderAmount).toFixed(2));\n      var refundedPerchCash = Number(Number((refundRiderPerchKms == \"\" ? 0 : refundRiderPerchKms) * costPerPerchKM).toFixed(2));\n      var total = Number(currentData.cost.total);\n      var totalTaken = total;\n      var totalGiven = Number(Number(payFirstDriver == \"\" ? 0 : payFirstDriver).toFixed(2)) + Number(Number(paySecondDriver == \"\" ? 0 : paySecondDriver).toFixed(2)) + Number(Number(payThirdDriver == \"\" ? 0 : payThirdDriver).toFixed(2)) + Number(Number(adminCut == \"\" ? 0 : adminCut).toFixed(2)) + (refundedCash + refundedPerchCash);\n\n      function f(s) {\n        return s != '';\n      }\n\n      ;\n      var allFieldsFilled = f(refundRiderAmount) && f(payFirstDriver) && f(adminCut) && (!!currentData.cost.usedPerchKms ? f(refundRiderPerchKms) : true) && (!!currentData.cost.toDrivers.secondDriverPay ? f(paySecondDriver) : true) && (!!currentData.cost.toDrivers.thirdDriverPay ? f(payThirdDriver) : true);\n      return {\n        totalCollected: totalTaken.toFixed(2),\n        totalAllocated: totalGiven.toFixed(2),\n        totalLeft: (totalTaken - totalGiven).toFixed(2),\n        balancedBool: totalGiven.toFixed(2) === totalTaken.toFixed(2) && allFieldsFilled\n      };\n    });\n\n    _this.state = {\n      index: 0,\n      idRiderSearch: '',\n      idDriverSearch: '',\n      result: {},\n      currentData: null,\n      key: \"\",\n      refundRiderAmount: '',\n      refundRiderPerchKms: '',\n      payFirstDriver: '',\n      paySecondDriver: '',\n      payThirdDriver: '',\n      adminCut: '',\n      costPerPerchKM: 0,\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(CancelledTrips, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.loadResult();\n      firebase.database().ref('GOOGLE_KEY').once('value', function (key) {\n        _this2.setState({\n          key: key.val()\n        });\n      })[\"catch\"](function (error) {\n        return console.log(error.message);\n      });\n      firebase.database().ref('costPerPerchKM').once('value', function (cost) {\n        _this2.setState({\n          costPerPerchKM: cost.val()\n        });\n      })[\"catch\"](function (error) {\n        return console.log(error.message);\n      });\n    }\n  }, {\n    key: \"renderCurrentDataTripDetails\",\n    value: function renderCurrentDataTripDetails(currentData) {\n      var tripDetails = currentData.tripDetails,\n          userLocation = currentData.userLocation,\n          driverID = currentData.driverID;\n      var tripDetailsRender = [];\n      var i = 0;\n\n      for (var key in tripDetails) {\n        i++;\n        var distance = '';\n        var status = tripDetails[key].status;\n        var value = '';\n\n        switch (key) {\n          case '_1':\n            {\n              value = 'First Trip';\n            }\n            break;\n\n          case '_2':\n            {\n              value = 'Second Trip';\n            }\n            break;\n\n          case '_3':\n            {\n              value = 'Third Trip';\n            }\n            break;\n        }\n\n        ;\n\n        if (userLocation) {\n          var d = distanceCalculator(userLocation.latitude, userLocation.longitude, tripDetails[key].location.latitude, tripDetails[key].location.longitude);\n          var unit = d > 1000 ? 'km' : 'meters';\n          d = d > 1000 ? d / 1000 : d;\n          distance = \"(\".concat(d.toFixed(2), \" \").concat(unit, \" away)\");\n        }\n\n        tripDetailsRender.push( /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.breakdownSpreadApart,\n          style: {\n            marginTop: 15\n          },\n          children: [/*#__PURE__*/_jsxs(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Regular',\n              margin: 0\n            },\n            children: [value, \" \", /*#__PURE__*/_jsx(\"span\", {\n              style: {\n                fontFamily: 'Gilroy-Semibold',\n                color: colors.GREY\n              },\n              children: driverID == tripDetails[key].driverID ? ' (CANCELLER)' : ''\n            })]\n          }), /*#__PURE__*/_jsxs(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Medium',\n              margin: 0\n            },\n            children: [status, \" \", /*#__PURE__*/_jsx(\"span\", {\n              style: {\n                color: colors.GREY,\n                fontFamily: 'Gilroy-Semibold'\n              },\n              children: distance\n            })]\n          })]\n        }, key));\n      }\n\n      ;\n      tripDetailsRender.unshift( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.breakdownSpreadApart,\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Regular',\n            margin: 0\n          },\n          children: \"Trip Number\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          style: {\n            fontFamily: 'Gilroy-Bold',\n            margin: 0\n          },\n          children: i\n        })]\n      }));\n      return tripDetailsRender;\n    }\n  }, {\n    key: \"renderCurrentDataTripDetailsTime\",\n    value: function renderCurrentDataTripDetailsTime(t1_, startAt) {\n      var t1 = new Date(t1_);\n      var t2 = new Date(startAt.year, M.indexOf(startAt.month), startAt.day, startAt.hour, startAt.min, startAt.sec);\n      var difference = t2.getTime() - t1.getTime();\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.breakdownSpreadApart,\n          style: {\n            marginTop: 15\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Regular',\n              margin: 0\n            },\n            children: \"Time of trip confirmation\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Medium',\n              margin: 0\n            },\n            children: formatDateAllValues(t1)\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.breakdownSpreadApart,\n          style: {\n            marginTop: 15\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Regular',\n              margin: 0\n            },\n            children: \"Time of trip cancellation\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Medium',\n              margin: 0\n            },\n            children: formatDateAllValues(t2)\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.breakdownSpreadApart,\n          style: {\n            marginTop: 15\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Regular',\n              margin: 0\n            },\n            children: \"Duration before trip cancellation\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontFamily: 'Gilroy-Medium',\n              margin: 0\n            },\n            children: millisToMinutesAndSeconds(difference)\n          })]\n        })]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var results = [];\n      var keys = Object.keys(this.state.result).sort(function (a, b) {\n        return b - a;\n      });\n\n      var _loop2 = function _loop2(k) {\n        var data = _this3.state.result[keys[k]];\n        var startAt = data.startAt;\n        var displayDate = formatDateAllValues(new Date(startAt.year, M.indexOf(startAt.month), startAt.day, startAt.hour, startAt.min, startAt.sec));\n        results.push( /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.previousMessageSum,\n            onClick: function onClick() {\n              _this3.setState({\n                currentData: data,\n                index: k\n              });\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              style: {\n                width: '90px',\n                height: '30px',\n                backgroundColor: data.canceller == 'rider' ? colors.GREEN : colors.BLUE,\n                borderRadius: '5px',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.readOrUnreadText,\n                style: {\n                  color: '#ffffff',\n                  fontFamily: 'Gilroy-ExtraBold'\n                },\n                children: data.canceller == 'rider' ? 'Rider' : 'Driver'\n              })\n            }), /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                fontSize: '105%',\n                fontFamily: 'Gilroy-Bold',\n                color: colors.GREEN\n              },\n              children: /*#__PURE__*/_jsx(\"span\", {\n                style: {\n                  color: colors.GREY\n                },\n                children: displayDate\n              })\n            })]\n          }), k == keys.length - 1 ? /*#__PURE__*/_jsx(_Fragment, {}) : /*#__PURE__*/_jsx(\"div\", {\n            className: styles.sharedLine,\n            style: {\n              marginTop: '5px'\n            }\n          })]\n        }));\n      };\n\n      for (var k = 0; k < keys.length; k++) {\n        _loop2(k);\n      }\n\n      ;\n      var defaultProps = {\n        center: {\n          lat: 0,\n          lng: 0\n        },\n        zoom: 11\n      };\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: styles.cont,\n        children: this.state.currentData ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.container,\n            style: {\n              backgroundColor: colors.WHITE,\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: colors.BLACK\n              },\n              children: \"Cancelled Trip\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                width: '90%',\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                marginBottom: '20px'\n              }\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.mapBox,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.mapBoxCenter,\n                onClick: function onClick() {\n                  _this3.renderPolylines(_this3.map.map_, _this3.map.maps_, true);\n                },\n                children: /*#__PURE__*/_jsx(BiCurrentLocation, {\n                  color: colors.GREEN,\n                  size: 25\n                })\n              }), /*#__PURE__*/_jsxs(GoogleMapReact, {\n                ref: function ref(map) {\n                  return _this3.map = map;\n                },\n                bootstrapURLKeys: {\n                  key: this.state.key\n                },\n                defaultCenter: defaultProps.center,\n                defaultZoom: defaultProps.zoom,\n                options: {\n                  fullscreenControl: false,\n                  disableDefaultUI: true\n                },\n                onGoogleApiLoaded: function onGoogleApiLoaded(_ref) {\n                  var map = _ref.map,\n                      maps = _ref.maps;\n                  return _this3.renderPolylines(map, maps);\n                },\n                children: [this.state.currentData.userLocation && /*#__PURE__*/_jsx(\"img\", {\n                  lat: this.state.currentData.userLocation.latitude,\n                  lng: this.state.currentData.userLocation.longitude,\n                  src: '/userIcon.svg',\n                  className: styles.mapIcon\n                }), this.renderDriverMarkers(this.state.currentData.tripDetails)]\n              })]\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.text,\n              style: {\n                color: colors.GREY,\n                fontFamily: 'Gilroy-SemiBold',\n                marginTop: '40px'\n              },\n              children: \"Breakdown of trip cancellation\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                height: '1px',\n                width: '90%',\n                backgroundColor: colors.GREY,\n                marginTop: '5px'\n              }\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.breakdownSpreadApart,\n              style: {\n                marginTop: '20px'\n              },\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                style: {\n                  fontFamily: 'Gilroy-Medium',\n                  margin: 0\n                },\n                children: \"Canceller\"\n              }), /*#__PURE__*/_jsx(\"div\", {\n                style: {\n                  width: '90px',\n                  height: '30px',\n                  backgroundColor: this.state.currentData.canceller == 'rider' ? colors.GREEN : colors.BLUE,\n                  borderRadius: '5px',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center'\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.readOrUnreadText,\n                  style: {\n                    color: '#ffffff',\n                    fontFamily: 'Gilroy-ExtraBold'\n                  },\n                  children: this.state.currentData.canceller == 'rider' ? 'Rider' : 'Driver'\n                })\n              })]\n            }), this.renderCurrentDataTripDetails(this.state.currentData), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.text,\n              style: {\n                color: colors.GREY,\n                fontFamily: 'Gilroy-SemiBold',\n                marginTop: '50px'\n              },\n              children: \"Time details\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                height: '1px',\n                width: '90%',\n                backgroundColor: colors.GREY,\n                marginTop: '5px'\n              }\n            }), this.renderCurrentDataTripDetailsTime(this.state.currentData.time, this.state.currentData.startAt), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.text,\n              style: {\n                color: colors.GREY,\n                fontFamily: 'Gilroy-SemiBold',\n                marginTop: '50px'\n              },\n              children: \"Cost Details\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                height: '1px',\n                width: '90%',\n                backgroundColor: colors.GREY,\n                marginTop: '5px'\n              }\n            }), this.renderCurrentDataCost(this.state.currentData), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.text,\n              style: {\n                color: colors.GREY,\n                fontFamily: 'Gilroy-SemiBold',\n                marginTop: '50px'\n              },\n              children: \"Refund values\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                height: '1px',\n                width: '90%',\n                backgroundColor: colors.GREY,\n                marginTop: '5px'\n              }\n            }), this.renderCurrentDataRefund(this.state.currentData.cost), /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                height: '1px',\n                width: '90%',\n                backgroundColor: colors.GREY,\n                marginTop: '25px'\n              }\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.breakdownSpreadApart,\n              style: {\n                marginTop: '10px'\n              },\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: styles.breakdownParter,\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: styles.breakdownTitle,\n                  children: \"Total Collected\"\n                }), /*#__PURE__*/_jsxs(\"p\", {\n                  className: styles.breakdownCash,\n                  style: {\n                    color: colors.GREY\n                  },\n                  children: [\"$\", this.costIsBalanced().totalCollected]\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.breakdownParter,\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: styles.breakdownTitle,\n                  children: \"Total Left\"\n                }), /*#__PURE__*/_jsxs(\"p\", {\n                  className: styles.breakdownCash,\n                  style: {\n                    color: colors.GREY\n                  },\n                  children: [\"$\", this.costIsBalanced().totalLeft]\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.breakdownParter,\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: styles.breakdownTitle,\n                  children: \"Total Allocated\"\n                }), /*#__PURE__*/_jsxs(\"p\", {\n                  className: styles.breakdownCash,\n                  style: {\n                    color: colors.GREEN\n                  },\n                  children: [\"$\", this.costIsBalanced().totalAllocated]\n                })]\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            style: {\n              marginTop: '20px',\n              marginBottom: '150px',\n              marginLeft: '2.5%',\n              width: '95%'\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.button2,\n              style: {\n                backgroundColor: colors.RED\n              },\n              id: styles.buttonBottom,\n              onClick: function onClick() {\n                _this3.setState({\n                  currentData: null,\n                  refundRiderAmount: '',\n                  refundRiderPerchKms: '',\n                  payFirstDriver: '',\n                  paySecondDriver: '',\n                  payThirdDriver: '',\n                  adminCut: ''\n                });\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: \"Cancel\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: this.costIsBalanced().balancedBool ? styles.button2 : styles.buttonSelected,\n              style: {\n                backgroundColor: colors.GREEN\n              },\n              id: styles.buttonBottom,\n              onClick: function onClick() {\n                if (_this3.costIsBalanced().balancedBool) {\n                  var driverObjects = [];\n\n                  for (var newKey in _this3.state.currentData.tripDetails) {\n                    var toPay = '';\n\n                    switch (newKey) {\n                      case '_1':\n                        {\n                          toPay = _this3.state.payFirstDriver;\n                        }\n                        break;\n\n                      case '_2':\n                        {\n                          toPay = _this3.state.paySecondDriver;\n                        }\n                        break;\n\n                      case '_3':\n                        {\n                          toPay = _this3.state.payThirdDriver;\n                        }\n                        break;\n                    }\n\n                    ;\n                    driverObjects.push({\n                      driverID: _this3.state.currentData.tripDetails[newKey].driverID,\n                      driverHistoryRef: _this3.state.currentData.tripDetails[newKey].historyRef,\n                      toPay: Number(Number(toPay).toFixed(2))\n                    });\n                  }\n\n                  cancelledTripResolver.call({\n                    refundRiderAmount: Number(Number(_this3.state.refundRiderAmount).toFixed(2)),\n                    refundRiderPerchKm: Number(_this3.state.refundRiderPerchKms),\n                    driverObjects: driverObjects,\n                    //An array of objects containing {driverID,toPay,driverHistoryRef}\n                    userID: _this3.state.currentData.riderID,\n                    historyRef: _this3.state.currentData.historyRef,\n                    paymentIntentId: _this3.state.currentData.cost.paymentIntentId,\n                    cancelled_UNRESOLVED_KEY: keys[_this3.state.index]\n                  });\n                }\n              },\n              children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n                type: \"TailSpin\",\n                color: colors.WHITE,\n                height: '20px',\n                width: '20px'\n              }) : /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: \"Refund Amount\"\n              })\n            })]\n          })]\n        }) : /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: colors.WHITE,\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: colors.BLACK\n            },\n            children: \"Cancelled Trips\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              width: '90%',\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              marginBottom: '20px'\n            }\n          }), results]\n        })\n      });\n    }\n  }]);\n\n  return CancelledTrips;\n}(React.Component);\n\nexport { CancelledTrips as default };\n;","map":{"version":3,"sources":["/Users/ugo/Documents/Perch_Projects/Perch-Website/functions/panels/adminPanels/cancelledTrips.js"],"names":["React","colors","distanceCalculator","formatDateAllValues","isNumber","M","millisToMinutesAndSeconds","cancelledTripResolver","styles","firebase","GoogleMapReact","polyline","require","BiCurrentLocation","turf","Loader","CancelledTrips","props","database","ref","once","snapshot","setState","result","val","error","alert","message","map","maps","legs","bounds","LatLngBounds","r","line","lineString","bboxPolygon","bbox","geometry","coordinates","forEach","v","extend","LatLng","fitBounds","fitToBoundsOnly","geodesicPolyline","polyline_","m","color","poly","decode","i","length","push","lat","lng","geodesicPolyliner","Polyline","path","options","strokeColor","strokeOpacity","strokeWeight","setMap","polylines","state","currentData","markers1","markers2","markers3","firstLeg","GREEN","secondLeg","BLUE","thirdLeg","PURPLE","newArray","getMapBounds","tripDetails","driverMarkers","key","image","location","latitude","longitude","mapIcon","cost","driverID","toDrivers","total","usedPerchKms","breakdownSpreadApart","marginTop","fontFamily","margin","toFixed","cut","value","toCkeckIfCanceller","GREY","Number","unshift","searchInput","width","height","refundRiderPerchKms","event","target","toEdit","adminCut","refundRiderAmount","payFirstDriver","paySecondDriver","payThirdDriver","costPerPerchKM","refundedCash","refundedPerchCash","totalTaken","totalGiven","f","s","allFieldsFilled","secondDriverPay","thirdDriverPay","totalCollected","totalAllocated","totalLeft","balancedBool","index","idRiderSearch","idDriverSearch","loading","loadResult","console","log","userLocation","tripDetailsRender","distance","status","d","unit","t1_","startAt","t1","Date","t2","year","indexOf","month","day","hour","min","sec","difference","getTime","results","keys","Object","sort","a","b","k","data","displayDate","previousMessageSum","backgroundColor","canceller","borderRadius","display","justifyContent","alignItems","readOrUnreadText","fontSize","sharedLine","defaultProps","center","zoom","cont","container","WHITE","title","BLACK","flexDirection","marginBottom","mapBox","mapBoxCenter","renderPolylines","map_","maps_","fullscreenControl","disableDefaultUI","renderDriverMarkers","text","renderCurrentDataTripDetails","renderCurrentDataTripDetailsTime","time","renderCurrentDataCost","renderCurrentDataRefund","breakdownParter","breakdownTitle","breakdownCash","costIsBalanced","enterKilometerDiv","marginLeft","button2","RED","buttonBottom","buttonText1","buttonSelected","driverObjects","newKey","toPay","driverHistoryRef","historyRef","call","refundRiderPerchKm","userID","riderID","paymentIntentId","cancelled_UNRESOLVED_KEY","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, distanceCalculator, formatDateAllValues, isNumber, M, millisToMinutesAndSeconds, cancelledTripResolver } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport GoogleMapReact from 'google-map-react';\nconst polyline = require(\"@mapbox/polyline\");\nimport { BiCurrentLocation } from 'react-icons/bi';\nimport * as turf from '@turf/turf'; //for encoding polylines\nimport Loader from 'react-loader-spinner';\n\nexport default class CancelledTrips extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: 0,\n\n            idRiderSearch: '',\n            idDriverSearch: '',\n            result: {},\n            currentData: null,\n            key: \"\",\n\n            refundRiderAmount: '',\n            refundRiderPerchKms: '',\n            payFirstDriver: '',\n            paySecondDriver: '',\n            payThirdDriver: '',\n            adminCut: '',\n\n            costPerPerchKM: 0,\n\n            loading: false,\n        };\n    };\n    componentDidMount() {\n        this.loadResult();\n        firebase.database().ref('GOOGLE_KEY').once('value', key => {\n            this.setState({ key: key.val() })\n        }).catch(error => console.log(error.message));\n        firebase.database().ref('costPerPerchKM').once('value', cost => {\n            this.setState({ costPerPerchKM: cost.val() })\n        }).catch(error => console.log(error.message));\n    };\n    loadResult = () => {\n        firebase.database().ref(`cancelled_UNRESOLVED`).once('value', snapshot => {\n            this.setState({ result: snapshot.val() ? snapshot.val() : {} })\n        }).catch(error => { alert(error.message) })\n    };\n    getMapBounds = (map, maps, legs) => {\n        const bounds = new maps.LatLngBounds();\n        const r = [\n            ...legs,\n            //[this.props.location.latitude, this.props.location.longitude], //USER LOCATION SHOULD BE HERE\n            //[this.props.destination.latitude, this.props.destination.longitude] //DRIVER LOCATION SHOULD BE HERE\n        ];\n        const line = turf.lineString(r);\n        turf.bboxPolygon(turf.bbox(line)).geometry.coordinates[0].forEach((v => {\n            bounds.extend(new maps.LatLng(\n                v[0],\n                v[1],\n            ));\n        }));\n        map.fitBounds(bounds);\n    };\n    renderPolylines = (map, maps, fitToBoundsOnly) => {\n        function geodesicPolyline(polyline_, m, color) {\n            const poly = polyline.decode(polyline_)\n            for (let i = 0; i < poly.length; i++)\n                m.push({\n                    lat: poly[i][0],\n                    lng: poly[i][1],\n                });\n            if (!fitToBoundsOnly) {\n                let geodesicPolyliner = new maps.Polyline({\n                    path: m,\n                    options: {\n                        strokeColor: color,\n                        strokeOpacity: 1,\n                        strokeWeight: 4,\n                    },\n                })\n                geodesicPolyliner.setMap(map);\n            }\n        };\n        const { polylines } = this.state.currentData;\n        let markers1 = [], markers2 = [], markers3 = [];\n\n        if (polylines?.firstLeg)\n            geodesicPolyline(polylines?.firstLeg, markers1, colors.GREEN);\n        if (polylines?.secondLeg)\n            geodesicPolyline(polylines?.secondLeg, markers2, colors.BLUE);\n        if (polylines?.thirdLeg)\n            geodesicPolyline(polylines?.thirdLeg, markers3, colors.PURPLE);\n\n        let newArray = [...markers1, ...markers2, ...markers3];\n        this.getMapBounds(map, maps, newArray.map(v => { return [v.lat, v.lng] }))\n\n    };\n    renderDriverMarkers = (tripDetails) => {\n        let driverMarkers = [];\n        for (let key in tripDetails) {\n            let image = '';\n            switch (key) {\n                case '_1': { image = '/greenCarIcon.svg'; } break;\n                case '_2': { image = '/blueCarIcon.svg'; } break;\n                case '_3': { image = '/purpleCarIcon.svg'; } break;\n            };\n            driverMarkers.push(\n                <img\n                    key={key}\n                    lat={tripDetails[key].location.latitude}\n                    lng={tripDetails[key].location.longitude}\n                    src={image}\n                    className={styles.mapIcon}\n                />);\n        };\n        return driverMarkers;\n    };\n    renderCurrentDataTripDetails(currentData) {\n        const { tripDetails, userLocation, driverID } = currentData;\n        let tripDetailsRender = [];\n        let i = 0;\n\n        for (let key in tripDetails) {\n            i++;\n            let distance = '';\n            const { status } = tripDetails[key];\n            let value = '';\n            switch (key) {\n                case '_1': { value = 'First Trip'; } break;\n                case '_2': { value = 'Second Trip'; } break;\n                case '_3': { value = 'Third Trip'; } break;\n            };\n            if (userLocation) {\n                let d = distanceCalculator(userLocation.latitude, userLocation.longitude, tripDetails[key].location.latitude, tripDetails[key].location.longitude);\n                let unit = d > 1000 ? 'km' : 'meters';\n                d = d > 1000 ? (d / 1000) : d;\n                distance = `(${d.toFixed(2)} ${unit} away)`;\n            }\n\n            tripDetailsRender.push(\n                <div\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}\n                    key={key}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>{value} <span style={{ fontFamily: 'Gilroy-Semibold', color: colors.GREY }}>{driverID == tripDetails[key].driverID ? ' (CANCELLER)' : ''}</span></p>\n                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>{status} <span style={{ color: colors.GREY, fontFamily: 'Gilroy-Semibold' }}>{distance}</span></p>\n                </div>\n            );\n        };\n\n        tripDetailsRender.unshift(\n            <div\n                className={styles.breakdownSpreadApart}\n                style={{ marginTop: 20, }}\n            >\n                <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Trip Number</p>\n                <p style={{ fontFamily: 'Gilroy-Bold', margin: 0 }}>{i}</p>\n            </div>\n        )\n        return tripDetailsRender;\n    };\n    renderCurrentDataTripDetailsTime(t1_, startAt) {\n        const t1 = new Date(t1_);\n        const t2 = new Date(startAt.year, M.indexOf(startAt.month), startAt.day, startAt.hour, startAt.min, startAt.sec);\n        const difference = t2.getTime() - t1.getTime();\n\n\n        return (\n            <>\n                <div\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Time of trip confirmation</p>\n                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>{formatDateAllValues(t1)}</p>\n                </div>\n                <div\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Time of trip cancellation</p>\n                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>{formatDateAllValues(t2)}</p>\n                </div>\n                <div\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Duration before trip cancellation</p>\n                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>{millisToMinutesAndSeconds(difference)}</p>\n                </div>\n            </>\n        );\n    };\n    renderCurrentDataCost = (currentData) => {\n        const { cost, driverID, tripDetails } = currentData;\n        const { toDrivers, total, usedPerchKms } = cost;\n        let v = [];\n\n        v.push(\n            <>\n                {!!usedPerchKms && <div\n                    key='second'\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 20, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Perch Kilometers paid</p>\n                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>{usedPerchKms.toFixed(2)} km</p>\n                </div>}\n            </>\n        );\n\n        let cut = 0;\n        for (let key in toDrivers) {\n            let value = '';\n            let toCkeckIfCanceller = '';\n            switch (key) {\n                case 'firstDriverPay': {\n                    value = \"First driver's cut\";\n                    toCkeckIfCanceller = '_1';\n                } break;\n                case 'secondDriverPay': {\n                    value = \"Second driver's cut\";\n                    toCkeckIfCanceller = '_2';\n                } break;\n                case 'thirdDriverPay': {\n                    value = \"Third driver's cut\";\n                    toCkeckIfCanceller = '_3';\n                } break;\n            };\n            cut += toDrivers[key];\n            if (toDrivers[key])\n                v.push(\n                    <div\n                        key={key}\n                        className={styles.breakdownSpreadApart}\n                        style={{ marginTop: 15, }}>\n                        <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>{value} <span style={{ fontFamily: 'Gilroy-Semibold', color: colors.GREY }}>{driverID == tripDetails[toCkeckIfCanceller].driverID ? ' (CANCELLER)' : ''}</span></p>\n                        <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, }}>${toDrivers[key]}</p>\n                    </div>\n                );\n        }\n        cut = Number(total) - cut;\n        v.unshift(\n            <div\n                key={'cut'}\n                className={styles.breakdownSpreadApart}\n                style={{ marginTop: 15, }}>\n                <p style={{ fontFamily: 'Gilroy-Semibold', margin: 0, }}>Admin's cut</p>\n                <p style={{ fontFamily: 'Gilroy-Bold', margin: 0, }}>${cut.toFixed(2)}</p>\n            </div>\n        );\n        v.push(\n            <div\n                key='top'\n                className={styles.breakdownSpreadApart}\n                style={{ marginTop: 20, }}>\n                <p style={{ fontFamily: 'Gilroy-Regular', margin: 0, color: colors.GREEN }}>Total paid</p>\n                <p style={{ fontFamily: 'Gilroy-Medium', margin: 0, color: colors.GREEN }}>${total}</p>\n            </div>\n        )\n        return v;\n    };\n    renderCurrentDataRefund = (cost) => {\n        const { toDrivers, total, usedPerchKms } = cost;\n        let v = [];\n\n        v.push(\n            <>\n                {!!usedPerchKms && <div\n                    key={'2'}\n                    className={styles.breakdownSpreadApart}\n                    style={{ marginTop: 15, }}>\n                    <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Refund Rider Perch Kilometers</p>\n                    <input\n                        type=\"text\"\n                        placeholder={`$${usedPerchKms}`}\n                        className={styles.searchInput}\n                        style={{ width: '20%', height: '40px' }}\n                        value={this.state.refundRiderPerchKms}\n                        onChange={event => {\n                            const value = event.target.value;\n                            if ((isNumber(value) && Number(value) <= usedPerchKms) || !value)\n                                this.setState({ refundRiderPerchKms: value });\n                        }}\n                    />\n                </div>}\n            </>\n        );\n        let cut = 0;\n        for (let key in toDrivers) {\n            let value = '';\n            let toEdit = '';\n\n            switch (key) {\n                case 'firstDriverPay': {\n                    value = \"First driver's payment\";\n                    toEdit = 'payFirstDriver';\n                } break;\n                case 'secondDriverPay': {\n                    value = \"Second driver's payment\";\n                    toEdit = 'paySecondDriver';\n                } break;\n                case 'thirdDriverPay': {\n                    value = \"Third driver's payment\";\n                    toEdit = 'payThirdDriver';\n                } break;\n            };\n            cut += toDrivers[key];\n            if (toDrivers[key])\n                v.push(\n                    <div\n                        key={key}\n                        className={styles.breakdownSpreadApart}\n                        style={{ marginTop: 15, }}>\n                        <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>{value}</p>\n                        <input\n                            type=\"text\"\n                            placeholder={`$${toDrivers[key]}`}\n                            className={styles.searchInput}\n                            style={{ width: '20%', height: '40px' }}\n                            value={this.state[toEdit]}\n                            onChange={event => {\n                                const value = event.target.value;\n                                if ((isNumber(value) && Number(value) <= toDrivers[key]) || !value)\n                                    this.setState({ [toEdit]: value });\n                            }}\n                        />\n                    </div>\n                );\n        };\n        cut = Number(Number(total) - cut).toFixed(2);\n        v.unshift(\n            <div\n                key={'cut'}\n                className={styles.breakdownSpreadApart}\n                style={{ marginTop: 15, }}>\n                <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Admin's cut</p>\n                <input\n                    type=\"text\"\n                    placeholder={`$${cut}`}\n                    className={styles.searchInput}\n                    style={{ width: '20%', height: '40px' }}\n                    value={this.state.adminCut}\n                    onChange={event => {\n                        const value = event.target.value;\n                        if ((isNumber(value) && Number(value) <= cut) || !value)\n                            this.setState({ adminCut: value });\n                    }}\n                />\n            </div>\n        )\n        v.push(\n            <div\n                key={`1`}\n                className={styles.breakdownSpreadApart}\n                style={{ marginTop: 20, }}>\n                <p style={{ fontFamily: 'Gilroy-Regular', margin: 0 }}>Refund Rider Cash</p>\n                <input\n                    type=\"text\"\n                    placeholder={`$${total}`}\n                    className={styles.searchInput}\n                    style={{ width: '20%', height: '40px' }}\n                    value={this.state.refundRiderAmount}\n                    onChange={event => {\n                        const value = event.target.value;\n                        if ((isNumber(value) && Number(value) <= Number(total)) || !value)\n                            this.setState({ refundRiderAmount: value });\n                    }}\n                />\n            </div>\n        )\n        return v;\n    };\n    costIsBalanced = () => {\n        const {\n            refundRiderAmount,\n            currentData,\n            payFirstDriver,\n            paySecondDriver,\n            payThirdDriver,\n            adminCut,\n            refundRiderPerchKms,\n            costPerPerchKM,\n        } = this.state;\n        const refundedCash = Number(Number(refundRiderAmount == \"\" ? 0 : refundRiderAmount).toFixed(2));\n        const refundedPerchCash = Number(Number(((refundRiderPerchKms == \"\" ? 0 : refundRiderPerchKms) * costPerPerchKM)).toFixed(2));\n        const total = Number(currentData.cost.total);\n\n        const totalTaken = total;\n\n        const totalGiven =\n            Number(Number(payFirstDriver == \"\" ? 0 : payFirstDriver).toFixed(2))\n            + Number(Number(paySecondDriver == \"\" ? 0 : paySecondDriver).toFixed(2))\n            + Number(Number(payThirdDriver == \"\" ? 0 : payThirdDriver).toFixed(2))\n            + Number(Number(adminCut == \"\" ? 0 : adminCut).toFixed(2))\n            + (refundedCash + refundedPerchCash);\n        function f(s) {\n            return s != '';\n        };\n        const allFieldsFilled =\n            f(refundRiderAmount) &&\n            f(payFirstDriver) &&\n            f(adminCut) &&\n            (!!currentData.cost.usedPerchKms ? f(refundRiderPerchKms) : true) &&\n            (!!currentData.cost.toDrivers.secondDriverPay ? f(paySecondDriver) : true) &&\n            (!!currentData.cost.toDrivers.thirdDriverPay ? f(payThirdDriver) : true);\n\n        return {\n            totalCollected: totalTaken.toFixed(2),\n            totalAllocated: totalGiven.toFixed(2),\n            totalLeft: (totalTaken - totalGiven).toFixed(2),\n            balancedBool: (totalGiven.toFixed(2) === totalTaken.toFixed(2)) && allFieldsFilled,\n        };\n\n\n    };\n    render() {\n        let results = [];\n        const keys = Object.keys(this.state.result).sort((a, b) => b - a);\n        for (let k = 0; k < keys.length; k++) {\n            const data = this.state.result[keys[k]];\n            const { startAt } = data;\n            const displayDate = formatDateAllValues(new Date(startAt.year, M.indexOf(startAt.month), startAt.day, startAt.hour, startAt.min, startAt.sec))\n            results.push(\n                <>\n                    <div className={styles.previousMessageSum} onClick={() => {\n                        this.setState({ currentData: data, index: k })\n                    }}>\n                        <div style={{ width: '90px', height: '30px', backgroundColor: data.canceller == 'rider' ? colors.GREEN : colors.BLUE, borderRadius: '5px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                            <p className={styles.readOrUnreadText} style={{ color: '#ffffff', fontFamily: 'Gilroy-ExtraBold' }}>{data.canceller == 'rider' ? 'Rider' : 'Driver'}</p>\n                        </div>\n                        <p style={{ fontSize: '105%', fontFamily: 'Gilroy-Bold', color: colors.GREEN }}>\n                            {/* {`$ ${data.cost.total}   `}-  */}\n                            <span style={{ color: colors.GREY }}>{displayDate}</span></p>\n                    </div>\n                    {\n                        k == keys.length - 1 ?\n                            <></> :\n                            <div className={styles.sharedLine} style={{ marginTop: '5px' }}></div>\n                    }\n                </>\n            )\n        };\n\n        const defaultProps = {\n            center: {\n                lat: 0,\n                lng: 0\n            },\n            zoom: 11\n        };\n\n        return (\n            <div className={styles.cont}>\n                {\n                    this.state.currentData ?\n                        <>\n                            <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                                <p className={styles.title} style={{ color: colors.BLACK }}>Cancelled Trip</p>\n                                <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '20px' }}>\n                                </div>\n                                <div className={styles.mapBox}>\n                                    <div className={styles.mapBoxCenter}\n                                        onClick={() => {\n                                            this.renderPolylines(this.map.map_, this.map.maps_, true);\n                                        }}\n                                    >\n                                        <BiCurrentLocation color={colors.GREEN} size={25} />\n                                    </div>\n                                    <GoogleMapReact\n                                        ref={(map) => this.map = map}\n                                        bootstrapURLKeys={{ key: this.state.key }}\n                                        defaultCenter={defaultProps.center}\n                                        defaultZoom={defaultProps.zoom}\n                                        options={{\n                                            fullscreenControl: false,\n                                            disableDefaultUI: true,\n                                        }}\n                                        onGoogleApiLoaded={({ map, maps }) => this.renderPolylines(map, maps)}\n                                    >\n                                        {this.state.currentData.userLocation &&\n                                            <img\n                                                lat={this.state.currentData.userLocation.latitude}\n                                                lng={this.state.currentData.userLocation.longitude}\n                                                src={'/userIcon.svg'}\n                                                className={styles.mapIcon}\n                                            />}\n                                        {this.renderDriverMarkers(this.state.currentData.tripDetails)}\n                                    </GoogleMapReact>\n                                </div>\n                                <p className={styles.text} style={{ color: colors.GREY, fontFamily: 'Gilroy-SemiBold', marginTop: '40px' }}>\n                                    Breakdown of trip cancellation\n                                </p>\n                                <div style={{ height: '1px', width: '90%', backgroundColor: colors.GREY, marginTop: '5px' }}></div>\n                                <div className={styles.breakdownSpreadApart}\n                                    style={{ marginTop: '20px' }}\n                                >\n                                    <p style={{ fontFamily: 'Gilroy-Medium', margin: 0 }}>Canceller</p>\n                                    <div style={{ width: '90px', height: '30px', backgroundColor: this.state.currentData.canceller == 'rider' ? colors.GREEN : colors.BLUE, borderRadius: '5px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                        <p className={styles.readOrUnreadText} style={{ color: '#ffffff', fontFamily: 'Gilroy-ExtraBold' }}>{this.state.currentData.canceller == 'rider' ? 'Rider' : 'Driver'}</p>\n                                    </div>\n                                </div>\n                                {this.renderCurrentDataTripDetails(this.state.currentData)}\n\n                                <p className={styles.text} style={{ color: colors.GREY, fontFamily: 'Gilroy-SemiBold', marginTop: '50px' }}>\n                                    Time details\n                                </p>\n                                <div style={{ height: '1px', width: '90%', backgroundColor: colors.GREY, marginTop: '5px' }}></div>\n                                {this.renderCurrentDataTripDetailsTime(this.state.currentData.time, this.state.currentData.startAt)}\n                                <p className={styles.text} style={{ color: colors.GREY, fontFamily: 'Gilroy-SemiBold', marginTop: '50px' }}>\n                                    Cost Details\n                                </p>\n                                <div style={{ height: '1px', width: '90%', backgroundColor: colors.GREY, marginTop: '5px' }}></div>\n                                {this.renderCurrentDataCost(this.state.currentData)}\n                                <p className={styles.text} style={{ color: colors.GREY, fontFamily: 'Gilroy-SemiBold', marginTop: '50px' }}>\n                                    Refund values\n                                </p>\n                                <div style={{ height: '1px', width: '90%', backgroundColor: colors.GREY, marginTop: '5px' }}></div>\n                                {this.renderCurrentDataRefund(this.state.currentData.cost)}\n                                <div style={{ height: '1px', width: '90%', backgroundColor: colors.GREY, marginTop: '25px' }}></div>\n                                <div\n                                    className={styles.breakdownSpreadApart}\n                                    style={{ marginTop: '10px', }}\n                                >\n                                    <div className={styles.breakdownParter}>\n                                        <p className={styles.breakdownTitle}>Total Collected</p>\n                                        <p className={styles.breakdownCash} style={{ color: colors.GREY }}>${this.costIsBalanced().totalCollected}</p>\n                                    </div>\n                                    <div className={styles.breakdownParter}>\n                                        <p className={styles.breakdownTitle}>Total Left</p>\n                                        <p className={styles.breakdownCash} style={{ color: colors.GREY }}>${this.costIsBalanced().totalLeft}</p>\n                                    </div>\n                                    <div className={styles.breakdownParter}>\n                                        <p className={styles.breakdownTitle}>Total Allocated</p>\n                                        <p className={styles.breakdownCash} style={{ color: colors.GREEN }}>${this.costIsBalanced().totalAllocated}</p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                                <div\n                                    className={styles.button2}\n                                    style={{ backgroundColor: colors.RED }}\n                                    id={styles.buttonBottom}\n                                    onClick={() => {\n                                        this.setState({\n                                            currentData: null,\n                                            refundRiderAmount: '',\n                                            refundRiderPerchKms: '',\n                                            payFirstDriver: '',\n                                            paySecondDriver: '',\n                                            payThirdDriver: '',\n                                            adminCut: '',\n                                        })\n                                    }}>\n                                    <p className={styles.buttonText1}>Cancel</p>\n                                </div>\n                                <div\n                                    className={this.costIsBalanced().balancedBool ? styles.button2 : styles.buttonSelected}\n                                    style={{ backgroundColor: colors.GREEN }}\n                                    id={styles.buttonBottom}\n                                    onClick={() => {\n                                        if (this.costIsBalanced().balancedBool) {\n                                            let driverObjects = [];\n                                            for (let newKey in this.state.currentData.tripDetails) {\n                                                let toPay = '';\n                                                switch (newKey) {\n                                                    case '_1': { toPay = this.state.payFirstDriver } break;\n                                                    case '_2': { toPay = this.state.paySecondDriver } break;\n                                                    case '_3': { toPay = this.state.payThirdDriver } break;\n                                                };\n                                                driverObjects.push({\n                                                    driverID: this.state.currentData.tripDetails[newKey].driverID,\n                                                    driverHistoryRef: this.state.currentData.tripDetails[newKey].historyRef,\n                                                    toPay: Number(Number(toPay).toFixed(2)),\n                                                })\n                                            }\n                                            cancelledTripResolver.call({\n                                                refundRiderAmount: Number(Number(this.state.refundRiderAmount).toFixed(2)),\n                                                refundRiderPerchKm: Number(this.state.refundRiderPerchKms),\n                                                driverObjects: driverObjects, //An array of objects containing {driverID,toPay,driverHistoryRef}\n                                                userID: this.state.currentData.riderID,\n                                                historyRef: this.state.currentData.historyRef,\n                                                paymentIntentId: this.state.currentData.cost.paymentIntentId,\n                                                cancelled_UNRESOLVED_KEY: keys[this.state.index],\n                                            })\n                                        }\n                                    }}>\n                                    {this.state.loading ?\n                                        <Loader\n                                            type=\"TailSpin\"\n                                            color={colors.WHITE}\n                                            height={'20px'}\n                                            width={'20px'} /> :\n                                        <p className={styles.buttonText1}>Refund Amount</p>}\n                                </div>\n                            </div>\n                        </>\n                        :\n                        <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                            <p className={styles.title} style={{ color: colors.BLACK }}>Cancelled Trips</p>\n                            <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '20px' }}>\n                                {/* <input\n                            type=\"text\"\n                            placeholder=\"Search riders by email / userID\"\n                            className={styles.searchInput}\n                            style={{ width: '48%' }}\n                            value={this.state.idRiderSearch}\n                            onChange={event => {\n                                this.setState({ idRiderSearch: event.target.value });\n                            }}\n                        />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search drivers by email / userID\"\n                            className={styles.searchInput}\n                            style={{ width: '48%' }}\n                            value={this.state.idRiderSearch}\n                            onChange={event => {\n                                this.setState({ idRiderSearch: event.target.value });\n                            }}\n                        /> */}\n                            </div>\n\n                            {results}\n\n                        </div>}\n            </div>\n        );\n    };\n};"]},"metadata":{},"sourceType":"module"}