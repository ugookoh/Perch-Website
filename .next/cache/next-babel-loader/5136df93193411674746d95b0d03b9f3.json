{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport firebase from 'firebase';\nimport React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { BiStopCircle } from 'react-icons/bi';\nimport { HiOutlineLocationMarker } from 'react-icons/hi';\nimport { VscCalendar } from 'react-icons/vsc';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { M, polylineLenght, timeAndDate, colors } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default class TripHistory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadResult\", () => {\n      if (this.state.userDetails) {\n        this.setState({\n          result: null\n        }, () => {\n          firebase.database().ref(`userHistory/${this.state.userDetails.userID}/carpool/${new Date(this.state.date).getFullYear()}/${M[new Date(this.state.date).getMonth()]}`).once('value', snapshot => {\n            this.setState({\n              result: snapshot.val() ? snapshot.val() : 'NORESULTS'\n            });\n          }).catch(error => {\n            console.log(error.message);\n          });\n        });\n      }\n    });\n\n    this.state = {\n      result: false,\n      date: new Date().getTime(),\n      userDetails: this.props.userDetails\n    };\n  }\n\n  componentDidMount() {\n    this.loadResult();\n  }\n\n  sorter(a, b) {\n    function numbergetter(time) {\n      let slash1 = 0,\n          slash2 = 0,\n          slash3 = 0;\n\n      for (let k = 0; k < time.length; k++) {\n        if (time.charAt(k) == '-') slash1 == 0 ? slash1 = k : slash2 == 0 ? slash2 = k : slash3 = k;\n      }\n\n      ;\n      const DAY = Number(time.substring(0, slash1)) * 86400;\n      const HOUR = Number(time.substring(slash1 + 1, slash2)) * 3600;\n      const MINS = Number(time.substring(slash2 + 1, slash3)) * 60;\n      const SECS = Number(time.substring(slash3 + 1, time.length));\n      return DAY + HOUR + MINS + SECS;\n    }\n\n    ;\n    let a_time = numbergetter(a);\n    let b_time = numbergetter(b);\n    if (a_time > b_time) return -1;else return 1;\n  }\n\n  render() {\n    if (!this.state.userDetails && this.props.userDetails) this.setState({\n      userDetails: this.props.userDetails\n    }, () => {\n      this.loadResult();\n    });\n    let trips = [];\n\n    if (this.state.result && this.state.result != 'NORESULTS') {\n      const keys = Object.keys(this.state.result).sort(this.sorter);\n\n      for (let i = 0; i < keys.length; i++) {\n        trips.push( /*#__PURE__*/_jsx(Trip, {\n          date: timeAndDate(keys[i], M[new Date(this.state.date).getMonth()], new Date(this.state.date).getFullYear()),\n          data: this.state.result[keys[i]],\n          lastItem: i == keys.length - 1\n        }, keys[i]));\n      }\n    }\n\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.cont,\n        style: {\n          height: '100%',\n          paddingTop: '10px',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.tripPanelDesc,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.tripPanelCalenderCont,\n            style: {\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsx(VscCalendar, {\n              color: colors.GREEN,\n              size: '24px',\n              style: {\n                marginRight: '4px',\n                marginBottom: '3px'\n              }\n            }), /*#__PURE__*/_jsx(DatePicker, {\n              className: styles.calendarDate,\n              placeholderText: `${M[new Date(this.state.date).getMonth()].toUpperCase()} ${new Date(this.state.date).getFullYear()}`,\n              onChange: date => {\n                this.setState({\n                  date: date\n                }, () => {\n                  this.loadResult();\n                });\n              },\n              dateFormat: \"MM/yyyy\",\n              showMonthYearPicker: true\n            })]\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.contactUsLasttext,\n            id: styles.tripPanelAlignMiddle,\n            style: {\n              width: 'initial',\n              fontSize: '80%',\n              margin: '0px'\n            },\n            children: \"To see the details of a trip please use the mobile app\"\n          })]\n        }), this.state.result ? this.state.result == 'NORESULTS' ? /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.tripPanelLoading,\n          id: styles.tripPanelLoading_,\n          children: [/*#__PURE__*/_jsx(\"img\", {\n            src: \"/noResultsWoman.svg\",\n            className: styles.noResultsWoman,\n            alt: \"No Results\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.contactUsLasttext,\n            style: {\n              width: 'initial',\n              fontSize: '90%',\n              margin: '0px'\n            },\n            id: styles.tripPanelLoadingText,\n            children: \"Surprisingly, you haven't booked any rides during this time.\"\n          })]\n        }) : trips : /*#__PURE__*/_jsx(\"div\", {\n          className: styles.tripPanelLoading,\n          children: /*#__PURE__*/_jsx(Loader, {\n            type: \"TailSpin\",\n            color: colors.GREEN,\n            height: '100px',\n            width: '100px'\n          })\n        })]\n      })\n    });\n  }\n\n}\n;\n\nclass Trip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let bar = /*#__PURE__*/_jsx(_Fragment, {});\n\n    const data = JSON.parse(this.props.data.data);\n    const cost = this.props.data.cost.total;\n    let totalDistance = 0;\n\n    switch (this.props.data.driverDetails.steps) {\n      case 1:\n        {\n          totalDistance = data.firstDistance;\n          bar = /*#__PURE__*/_jsx(\"div\", {\n            className: styles.tripPanelNoOfTrips,\n            style: {\n              backgroundColor: colors.GREEN\n            }\n          });\n        }\n        break;\n\n      case 2:\n        {\n          totalDistance = data.firstDistance + data.secondDistance;\n          bar = /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.tripPanelNoOfTrips,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.tripPanelNoOfTrips,\n              style: {\n                width: data.firstDistance / totalDistance * 100 + '%',\n                backgroundColor: colors.GREEN,\n                borderTopRightRadius: '0px',\n                borderBottomRightRadius: '0px'\n              }\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.tripPanelNoOfTrips,\n              style: {\n                width: data.secondDistance / totalDistance * 100 + '%',\n                backgroundColor: colors.BLUE,\n                borderTopLeftRadius: '0px',\n                borderBottomLeftRadius: '0px'\n              }\n            })]\n          });\n        }\n        break;\n\n      case 3:\n        {\n          totalDistance = data.firstDistance + data.secondDistance + data.thirdDistance;\n          bar = /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.tripPanelNoOfTrips,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.tripPanelNoOfTrips,\n              style: {\n                width: data.firstDistance / totalDistance * 100 + '%',\n                backgroundColor: colors.GREEN,\n                borderTopRightRadius: '0px',\n                borderBottomRightRadius: '0px'\n              }\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.tripPanelNoOfTrips,\n              style: {\n                width: data.secondDistance / totalDistance * 100 + '%',\n                backgroundColor: colors.BLUE,\n                borderRadius: '0px'\n              }\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.tripPanelNoOfTrips,\n              style: {\n                width: data.thirdDistance / totalDistance * 100 + '%',\n                backgroundColor: colors.PURPLE,\n                borderTopLeftRadius: '0px',\n                borderBottomLeftRadius: '0px'\n              }\n            })]\n          });\n        }\n        break;\n    }\n\n    ;\n    totalDistance > 100 ? totalDistance = `${(totalDistance / 1000).toFixed(1)} kilometers` : totalDistance = `${totalDistance.toFixed(totalDistance != 0 ? 1 : 0)} meters`;\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        id: styles.tripPanelCont,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.enterKilometerDiv,\n          style: {\n            width: '95%',\n            margin: '0px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.tripPanelTitle,\n            children: `${this.props.data.driverDetails.steps}-leg trip`\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.tripPanelTime,\n            children: this.props.date\n          })]\n        }), bar, /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.enterKilometerDiv,\n          style: {\n            width: '95%',\n            justifyContent: 'initial',\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsx(HiOutlineLocationMarker, {\n            color: colors.GREEN,\n            style: {\n              margin: '0px',\n              marginRight: '10px'\n            },\n            className: styles.driverHistory_ICON\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.tripPanelTime,\n            style: {\n              margin: '0px'\n            },\n            children: this.props.data.location.description\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.enterKilometerDiv,\n          style: {\n            width: '95%',\n            justifyContent: 'initial',\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsx(BiStopCircle, {\n            color: colors.GREEN,\n            style: {\n              marginRight: '10px'\n            },\n            className: styles.driverHistory_ICON\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.tripPanelTime,\n            style: {\n              margin: '0px'\n            },\n            children: this.props.data.destination.description\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.tripPanelNoOfTrips,\n          style: {\n            backgroundColor: colors.GREY,\n            height: '1px',\n            marginTop: '17px'\n          }\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.enterKilometerDiv,\n          style: {\n            width: '95%',\n            marginTop: '10px',\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.tripPanelTitle,\n            style: {\n              fontFamily: 'Gilroy-Medium',\n              margin: '0px'\n            },\n            children: totalDistance\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.tripPanelCash,\n            children: `$ ${cost}`\n          })]\n        })]\n      }), this.props.lastItem ?\n      /*#__PURE__*/\n      //just for padding at the bottom\n      _jsx(\"div\", {\n        style: {\n          height: '150px',\n          width: '100%',\n          backgroundColor: 'transparent'\n        }\n      }) : /*#__PURE__*/_jsx(_Fragment, {})]\n    });\n  }\n\n}\n\n;","map":null,"metadata":{},"sourceType":"module"}