{"ast":null,"code":"import firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default class PendingProcesses extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: {},\n      loading: false,\n      addNewProcess: true,\n      //false,\n      userID: '',\n      type: '',\n      mainTopic: '',\n      title: '',\n      details: '',\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    let results = [];\n    const keys = Object.keys(this.state.result).sort((a, b) => b - a);\n\n    for (let k = 0; k < keys.length; k++) {\n      const data = this.state.result[keys[k]];\n      results.push( /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.previousMessageSum,\n          onClick: () => {//this.setState({ currentData: data, index: k })\n          },\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            style: {\n              width: '90px',\n              height: '30px',\n              backgroundColor: data.type == 'rider' ? colors.GREEN : colors.BLUE,\n              borderRadius: '5px',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.readOrUnreadText,\n              style: {\n                color: '#ffffff',\n                fontFamily: 'Gilroy-ExtraBold'\n              },\n              children: data.type == 'rider' ? 'Rider' : 'Driver'\n            })\n          }), /*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontSize: '105%',\n              fontFamily: 'Gilroy-Bold',\n              color: colors.GREEN\n            },\n            children: /*#__PURE__*/_jsx(\"span\", {\n              style: {\n                color: colors.GREY\n              },\n              children: displayDate\n            })\n          })]\n        }), k == keys.length - 1 ? /*#__PURE__*/_jsx(_Fragment, {}) : /*#__PURE__*/_jsx(\"div\", {\n          className: styles.sharedLine,\n          style: {\n            marginTop: '5px'\n          }\n        })]\n      }));\n    }\n\n    ;\n    const {\n      addNewProcess,\n      errorMessage\n    } = this.state;\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.cont,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.container,\n        style: {\n          backgroundColor: colors.WHITE,\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          className: styles.title,\n          style: {\n            color: colors.BLACK\n          },\n          children: \"List of pending requests\"\n        }), addNewProcess ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            style: {\n              width: '90%',\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              marginBottom: '0px'\n            },\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              placeholder: \"User ID\",\n              className: styles.searchInput,\n              style: {\n                width: '67%'\n              },\n              value: this.state.userID,\n              onChange: event => {\n                this.setState({\n                  userID: event.target.value\n                });\n              }\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              placeholder: \"Type\",\n              className: styles.searchInput,\n              style: {\n                width: '32%'\n              },\n              value: this.state.type,\n              onChange: event => {\n                this.setState({\n                  type: event.target.value.toLowerCase()\n                });\n              }\n            })]\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            placeholder: \"Main topic\",\n            className: styles.searchInput,\n            style: {\n              width: '90%',\n              marginTop: '15px'\n            },\n            value: this.state.mainTopic,\n            onChange: event => {\n              this.setState({\n                mainTopic: event.target.value\n              });\n            }\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            placeholder: \"Title\",\n            className: styles.searchInput,\n            style: {\n              width: '90%',\n              marginTop: '15px'\n            },\n            value: this.state.title,\n            onChange: event => {\n              this.setState({\n                title: event.target.value\n              });\n            }\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            type: \"text\",\n            placeholder: \"Title\",\n            className: styles.contactUsContent,\n            style: {\n              width: '90%',\n              marginTop: '15px',\n              fontSize: '100%'\n            },\n            value: this.state.details,\n            onChange: event => {\n              this.setState({\n                details: event.target.value\n              });\n            }\n          })]\n        }) : /*#__PURE__*/_jsx(_Fragment, {}), errorMessage != '' && /*#__PURE__*/_jsx(\"p\", {\n          className: styles.em,\n          style: {\n            textAlign: 'initial'\n          },\n          children: errorMessage\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.enterKilometerDiv,\n        style: {\n          marginTop: '20px',\n          marginBottom: '150px',\n          marginLeft: '2.5%',\n          width: '95%'\n        },\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.button2,\n          style: {\n            backgroundColor: colors.RED\n          },\n          id: styles.buttonBottom,\n          onClick: () => {},\n          children: /*#__PURE__*/_jsx(\"p\", {\n            className: styles.buttonText1,\n            children: \"Cancel\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.button2,\n          style: {\n            backgroundColor: colors.GREEN\n          },\n          id: styles.buttonBottom,\n          onClick: () => {},\n          children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n            type: \"TailSpin\",\n            color: colors.WHITE,\n            height: '20px',\n            width: '20px'\n          }) : /*#__PURE__*/_jsx(\"p\", {\n            className: styles.buttonText1,\n            children: \"Add Pending Process\"\n          })\n        })]\n      })]\n    });\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/ugo/Documents/Perch_Projects/Perch-Website/functions/panels/adminPanels/pendingProcesses.js"],"names":["firebase","React","colors","styles","PendingProcesses","Component","constructor","props","state","result","loading","addNewProcess","userID","type","mainTopic","title","details","errorMessage","componentDidMount","render","results","keys","Object","sort","a","b","k","length","data","push","previousMessageSum","width","height","backgroundColor","GREEN","BLUE","borderRadius","display","justifyContent","alignItems","readOrUnreadText","color","fontFamily","fontSize","GREY","displayDate","sharedLine","marginTop","cont","container","WHITE","BLACK","flexDirection","marginBottom","searchInput","event","setState","target","value","toLowerCase","contactUsContent","em","textAlign","enterKilometerDiv","marginLeft","button2","RED","buttonBottom","buttonText1"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors } from '../../functions';\nimport styles from '../panel_layout.module.css';\n\nexport default class PendingProcesses extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            result: {},\n            loading: false,\n            addNewProcess: true,//false,\n\n            userID: '',\n            type: '',\n            mainTopic: '',\n            title: '',\n            details: '',\n\n            errorMessage: '',\n\n        };\n    };\n    componentDidMount() {\n\n    };\n    render() {\n        let results = [];\n        const keys = Object.keys(this.state.result).sort((a, b) => b - a);\n        for (let k = 0; k < keys.length; k++) {\n            const data = this.state.result[keys[k]];\n            results.push(\n                <>\n                    <div\n                        className={styles.previousMessageSum}\n                        onClick={() => {\n                            //this.setState({ currentData: data, index: k })\n                        }}>\n                        <div style={{ width: '90px', height: '30px', backgroundColor: data.type == 'rider' ? colors.GREEN : colors.BLUE, borderRadius: '5px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                            <p className={styles.readOrUnreadText} style={{ color: '#ffffff', fontFamily: 'Gilroy-ExtraBold' }}>{data.type == 'rider' ? 'Rider' : 'Driver'}</p>\n                        </div>\n\n                        <p style={{ fontSize: '105%', fontFamily: 'Gilroy-Bold', color: colors.GREEN }}>\n                            <span style={{ color: colors.GREY }}>{displayDate}</span>\n                        </p>\n                    </div>\n                    {\n                        k == keys.length - 1 ?\n                            <></> :\n                            <div className={styles.sharedLine} style={{ marginTop: '5px' }}></div>\n                    }\n                </>\n            )\n        };\n        const { addNewProcess, errorMessage } = this.state;\n        return (\n            <div className={styles.cont}>\n                <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                    <p className={styles.title} style={{ color: colors.BLACK }}>List of pending requests</p>\n                    {addNewProcess ?\n                        <>\n                            <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '0px' }}>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"User ID\"\n                                    className={styles.searchInput}\n                                    style={{ width: '67%' }}\n                                    value={this.state.userID}\n                                    onChange={event => {\n                                        this.setState({ userID: event.target.value });\n                                    }}\n                                />\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Type\"\n                                    className={styles.searchInput}\n                                    style={{ width: '32%' }}\n                                    value={this.state.type}\n                                    onChange={event => {\n                                        this.setState({ type: event.target.value.toLowerCase() });\n                                    }}\n                                />\n                            </div>\n                            <input\n                                type=\"text\"\n                                placeholder=\"Main topic\"\n                                className={styles.searchInput}\n                                style={{ width: '90%', marginTop: '15px' }}\n                                value={this.state.mainTopic}\n                                onChange={event => {\n                                    this.setState({ mainTopic: event.target.value });\n                                }}\n                            />\n                            <input\n                                type=\"text\"\n                                placeholder=\"Title\"\n                                className={styles.searchInput}\n                                style={{ width: '90%', marginTop: '15px' }}\n                                value={this.state.title}\n                                onChange={event => {\n                                    this.setState({ title: event.target.value });\n                                }}\n                            />\n                            <textarea\n                                type=\"text\"\n                                placeholder=\"Title\"\n                                className={styles.contactUsContent}\n                                style={{ width: '90%', marginTop: '15px', fontSize: '100%' }}\n                                value={this.state.details}\n                                onChange={event => {\n                                    this.setState({ details: event.target.value });\n                                }}\n                            />\n                        </>\n                        :\n                        <>\n\n                        </>\n                    }\n                    {errorMessage != '' && <p\n                        className={styles.em}\n                        style={{ textAlign: 'initial' }}>{errorMessage}</p>}\n                </div>\n\n                <div className={styles.enterKilometerDiv}\n                    style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                    <div\n                        className={styles.button2}\n                        style={{ backgroundColor: colors.RED }}\n                        id={styles.buttonBottom}\n                        onClick={() => {\n\n                        }}>\n                        <p className={styles.buttonText1}>Cancel</p>\n                    </div>\n                    <div\n                        className={styles.button2}\n                        style={{ backgroundColor: colors.GREEN }}\n                        id={styles.buttonBottom}\n                        onClick={() => {\n\n                        }}>\n                        {this.state.loading ?\n                            <Loader\n                                type=\"TailSpin\"\n                                color={colors.WHITE}\n                                height={'20px'}\n                                width={'20px'} /> :\n                            <p className={styles.buttonText1}>Add Pending Process</p>}\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n};"]},"metadata":{},"sourceType":"module"}