{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, formatDateAllValues, M } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport GoogleMapReact from 'google-map-react';\n\nvar polyline = require(\"@mapbox/polyline\");\n\nimport { BiCurrentLocation } from 'react-icons/bi';\nimport * as turf from '@turf/turf'; //for encoding polylines\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar CancelledTrips = /*#__PURE__*/function (_React$Component) {\n  _inherits(CancelledTrips, _React$Component);\n\n  var _super = _createSuper(CancelledTrips);\n\n  function CancelledTrips(props) {\n    var _this;\n\n    _classCallCheck(this, CancelledTrips);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"loadResult\", function () {\n      firebase.database().ref(\"cancelled_UNRESOLVED\").once('value', function (snapshot) {\n        //console.log(snapshot.val());\n        var r = [];\n\n        for (var key in snapshot.val()) {\n          r.push(snapshot.val()[key]);\n        }\n\n        _this.setState({\n          result: r\n        });\n      })[\"catch\"](function (error) {\n        alert(error.message);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMapBounds\", function (map, maps, legs) {\n      var bounds = new maps.LatLngBounds();\n\n      var r = _toConsumableArray(legs);\n\n      var line = turf.lineString(r);\n      turf.bboxPolygon(turf.bbox(line)).geometry.coordinates[0].forEach(function (v) {\n        bounds.extend(new maps.LatLng(v[0], v[1]));\n      });\n      map.fitBounds(bounds);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPolylines\", function (map, maps, fitToBoundsOnly) {\n      function geodesicPolyline(polyline_, m, color) {\n        var poly = polyline.decode(polyline_);\n\n        for (var i = 0; i < poly.length; i++) {\n          m.push({\n            lat: poly[i][0],\n            lng: poly[i][1]\n          });\n        }\n\n        if (!fitToBoundsOnly) {\n          var geodesicPolyliner = new maps.Polyline({\n            path: m,\n            options: {\n              strokeColor: color,\n              strokeOpacity: 1,\n              strokeWeight: 4\n            }\n          });\n          geodesicPolyliner.setMap(map);\n        }\n      }\n\n      ;\n      var polylines = _this.state.currentData.polylines;\n      var markers1 = [],\n          markers2 = [],\n          markers3 = [];\n      if (polylines !== null && polylines !== void 0 && polylines.firstLeg) geodesicPolyline(polylines === null || polylines === void 0 ? void 0 : polylines.firstLeg, markers1, colors.GREEN);\n      if (polylines !== null && polylines !== void 0 && polylines.secondLeg) geodesicPolyline(polylines === null || polylines === void 0 ? void 0 : polylines.secondLeg, markers2, colors.BLUE);\n      if (polylines !== null && polylines !== void 0 && polylines.thirdLeg) geodesicPolyline(polylines === null || polylines === void 0 ? void 0 : polylines.thirdLeg, markers3, colors.PURPLE);\n      var newArray = [].concat(markers1, markers2, markers3);\n\n      _this.getMapBounds(map, maps, newArray.map(function (v) {\n        return [v.lat, v.lng];\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMarkers\", function (map, maps) {});\n\n    _this.state = {\n      idRiderSearch: '',\n      idDriverSearch: '',\n      result: [],\n      currentData: null,\n      key: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CancelledTrips, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.loadResult();\n      firebase.database().ref('GOOGLE_KEY').once('value', function (key) {\n        _this2.setState({\n          key: key.val()\n        });\n      })[\"catch\"](function (error) {\n        return console.log(error.message);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var results = [];\n      var keys = Object.keys(this.state.result).sort(function (a, b) {\n        return b - a;\n      });\n\n      var _loop = function _loop(k) {\n        var data = _this3.state.result[k];\n        var startAt = data.startAt;\n        var displayDate = formatDateAllValues(new Date(startAt.year, M.indexOf(startAt.month), startAt.day, startAt.hour, startAt.min, startAt.sec));\n        results.push( /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.previousMessageSum,\n            onClick: function onClick() {\n              _this3.setState({\n                currentData: data\n              });\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              style: {\n                width: '90px',\n                height: '30px',\n                backgroundColor: data.canceller == 'rider' ? colors.GREEN : colors.BLUE,\n                borderRadius: '5px',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.readOrUnreadText,\n                style: {\n                  color: '#ffffff',\n                  fontFamily: 'Gilroy-ExtraBold'\n                },\n                children: data.canceller == 'rider' ? 'Rider' : 'Driver'\n              })\n            }), /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                fontSize: '105%',\n                fontFamily: 'Gilroy-Bold',\n                color: colors.GREEN\n              },\n              children: /*#__PURE__*/_jsx(\"span\", {\n                style: {\n                  color: colors.GREY\n                },\n                children: displayDate\n              })\n            })]\n          }), k == keys.length - 1 ? /*#__PURE__*/_jsx(_Fragment, {}) : /*#__PURE__*/_jsx(\"div\", {\n            className: styles.sharedLine,\n            style: {\n              marginTop: '5px'\n            }\n          })]\n        }));\n      };\n\n      for (var k = 0; k < keys.length; k++) {\n        _loop(k);\n      }\n\n      ;\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: styles.cont,\n        children: this.state.currentData ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.container,\n            style: {\n              backgroundColor: colors.WHITE,\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: colors.BLACK\n              },\n              children: \"Cancelled Trip\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              style: {\n                width: '90%',\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                marginBottom: '20px'\n              }\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.mapBox,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.mapBoxCenter,\n                onClick: function onClick() {\n                  _this3.renderPolylines(_this3.map.map_, _this3.map.maps_, true);\n                },\n                children: /*#__PURE__*/_jsx(BiCurrentLocation, {\n                  color: colors.GREEN,\n                  size: 25\n                })\n              }), /*#__PURE__*/_jsx(GoogleMapReact, {\n                ref: function ref(map) {\n                  return _this3.map = map;\n                },\n                bootstrapURLKeys: {\n                  key: this.state.key\n                } //defaultCenter={defaultProps.center}\n                //defaultZoom={defaultProps.zoom}\n                ,\n                options: {\n                  fullscreenControl: false,\n                  disableDefaultUI: true\n                },\n                onGoogleApiLoaded: function onGoogleApiLoaded(_ref) {\n                  var map = _ref.map,\n                      maps = _ref.maps;\n\n                  _this3.renderPolylines(map, maps);\n\n                  _this3.renderMarkers(map, maps);\n                },\n                children: this.state.currentData.userLocation && /*#__PURE__*/_jsx(\"img\", {\n                  lat: this.state.currentData.userLocation.latitude,\n                  lng: this.state.currentData.userLocation.longitude,\n                  src: '/userIcon.svg',\n                  className: styles.mapIcon\n                })\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            style: {\n              marginTop: '20px',\n              marginBottom: '150px',\n              marginLeft: '2.5%',\n              width: '95%'\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.button2,\n              style: {\n                backgroundColor: colors.RED\n              },\n              id: styles.buttonBottom,\n              onClick: function onClick() {\n                _this3.setState({\n                  currentData: null\n                });\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: \"Cancel\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.button2,\n              style: {\n                backgroundColor: colors.GREEN\n              },\n              id: styles.buttonBottom,\n              onClick: function onClick() {},\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: \"Refund Amount\"\n              })\n            })]\n          })]\n        }) : /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: colors.WHITE,\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: colors.BLACK\n            },\n            children: \"Cancelled Trips\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              width: '90%',\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              marginBottom: '20px'\n            }\n          }), results]\n        })\n      });\n    }\n  }]);\n\n  return CancelledTrips;\n}(React.Component);\n\nexport { CancelledTrips as default };\n;","map":{"version":3,"sources":["/Users/ugo/Documents/Perch_Projects/Perch-Website/functions/panels/adminPanels/cancelledTrips.js"],"names":["React","colors","formatDateAllValues","M","styles","firebase","GoogleMapReact","polyline","require","BiCurrentLocation","turf","CancelledTrips","props","database","ref","once","snapshot","r","key","val","push","setState","result","error","alert","message","map","maps","legs","bounds","LatLngBounds","line","lineString","bboxPolygon","bbox","geometry","coordinates","forEach","v","extend","LatLng","fitBounds","fitToBoundsOnly","geodesicPolyline","polyline_","m","color","poly","decode","i","length","lat","lng","geodesicPolyliner","Polyline","path","options","strokeColor","strokeOpacity","strokeWeight","setMap","polylines","state","currentData","markers1","markers2","markers3","firstLeg","GREEN","secondLeg","BLUE","thirdLeg","PURPLE","newArray","getMapBounds","idRiderSearch","idDriverSearch","loadResult","console","log","results","keys","Object","sort","a","b","k","data","startAt","displayDate","Date","year","indexOf","month","day","hour","min","sec","previousMessageSum","width","height","backgroundColor","canceller","borderRadius","display","justifyContent","alignItems","readOrUnreadText","fontFamily","fontSize","GREY","sharedLine","marginTop","cont","container","WHITE","title","BLACK","flexDirection","marginBottom","mapBox","mapBoxCenter","renderPolylines","map_","maps_","fullscreenControl","disableDefaultUI","renderMarkers","userLocation","latitude","longitude","mapIcon","enterKilometerDiv","marginLeft","button2","RED","buttonBottom","buttonText1","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, formatDateAllValues, M } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport GoogleMapReact from 'google-map-react';\nconst polyline = require(\"@mapbox/polyline\");\nimport { BiCurrentLocation } from 'react-icons/bi';\nimport * as turf from '@turf/turf'; //for encoding polylines\n\nexport default class CancelledTrips extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            idRiderSearch: '',\n            idDriverSearch: '',\n            result: [],\n            currentData: null,\n            key: \"\",\n        };\n    }\n    componentDidMount() {\n        this.loadResult();\n        firebase.database().ref('GOOGLE_KEY').once('value', key => {\n            this.setState({ key: key.val() })\n        }).catch(error => console.log(error.message));\n    }\n    loadResult = () => {\n        firebase.database().ref(`cancelled_UNRESOLVED`).once('value', snapshot => {\n            //console.log(snapshot.val());\n            let r = [];\n            for (let key in snapshot.val())\n                r.push(snapshot.val()[key]);\n            this.setState({ result: r })\n        }).catch(error => { alert(error.message) })\n    };\n    getMapBounds = (map, maps, legs) => {\n        const bounds = new maps.LatLngBounds();\n        const r = [\n            ...legs,\n            //[this.props.location.latitude, this.props.location.longitude], //USER LOCATION SHOULD BE HERE\n            //[this.props.destination.latitude, this.props.destination.longitude] //DRIVER LOCATION SHOULD BE HERE\n        ];\n        const line = turf.lineString(r);\n        turf.bboxPolygon(turf.bbox(line)).geometry.coordinates[0].forEach((v => {\n            bounds.extend(new maps.LatLng(\n                v[0],\n                v[1],\n            ));\n        }));\n        map.fitBounds(bounds);\n    };\n    renderPolylines = (map, maps, fitToBoundsOnly) => {\n        function geodesicPolyline(polyline_, m, color) {\n            const poly = polyline.decode(polyline_)\n            for (let i = 0; i < poly.length; i++)\n                m.push({\n                    lat: poly[i][0],\n                    lng: poly[i][1],\n                });\n            if (!fitToBoundsOnly) {\n                let geodesicPolyliner = new maps.Polyline({\n                    path: m,\n                    options: {\n                        strokeColor: color,\n                        strokeOpacity: 1,\n                        strokeWeight: 4,\n                    },\n                })\n                geodesicPolyliner.setMap(map);\n            }\n        };\n        const { polylines } = this.state.currentData;\n        let markers1 = [], markers2 = [], markers3 = [];\n\n        if (polylines?.firstLeg)\n            geodesicPolyline(polylines?.firstLeg, markers1, colors.GREEN);\n        if (polylines?.secondLeg)\n            geodesicPolyline(polylines?.secondLeg, markers2, colors.BLUE);\n        if (polylines?.thirdLeg)\n            geodesicPolyline(polylines?.thirdLeg, markers3, colors.PURPLE);\n\n        let newArray = [...markers1, ...markers2, ...markers3];\n        this.getMapBounds(map, maps, newArray.map(v => { return [v.lat, v.lng] }))\n\n    };\n    renderMarkers = (map, maps) => {\n\n    };\n    render() {\n        let results = [];\n        const keys = Object.keys(this.state.result).sort((a, b) => b - a);\n        for (let k = 0; k < keys.length; k++) {\n            const data = this.state.result[k];\n            const { startAt } = data;\n            const displayDate = formatDateAllValues(new Date(startAt.year, M.indexOf(startAt.month), startAt.day, startAt.hour, startAt.min, startAt.sec))\n            results.push(\n                <>\n                    <div className={styles.previousMessageSum} onClick={() => {\n                        this.setState({ currentData: data })\n                    }}>\n                        <div style={{ width: '90px', height: '30px', backgroundColor: data.canceller == 'rider' ? colors.GREEN : colors.BLUE, borderRadius: '5px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                            <p className={styles.readOrUnreadText} style={{ color: '#ffffff', fontFamily: 'Gilroy-ExtraBold' }}>{data.canceller == 'rider' ? 'Rider' : 'Driver'}</p>\n                        </div>\n                        <p style={{ fontSize: '105%', fontFamily: 'Gilroy-Bold', color: colors.GREEN }}>\n                            {/* {`$ ${data.cost.total}   `}-  */}\n                            <span style={{ color: colors.GREY }}>{displayDate}</span></p>\n                    </div>\n                    {\n                        k == keys.length - 1 ?\n                            <></> :\n                            <div className={styles.sharedLine} style={{ marginTop: '5px' }}></div>\n                    }\n                </>\n            )\n        };\n\n\n\n        return (\n            <div className={styles.cont}>\n                {\n                    this.state.currentData ?\n                        <>\n                            <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                                <p className={styles.title} style={{ color: colors.BLACK }}>Cancelled Trip</p>\n                                <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '20px' }}>\n                                </div>\n                                <div className={styles.mapBox}>\n                                    <div className={styles.mapBoxCenter}\n                                        onClick={() => {\n                                            this.renderPolylines(this.map.map_, this.map.maps_, true);\n                                        }}\n                                    >\n                                        <BiCurrentLocation color={colors.GREEN} size={25} />\n                                    </div>\n                                    <GoogleMapReact\n                                        ref={(map) => this.map = map}\n                                        bootstrapURLKeys={{ key: this.state.key }}\n                                        //defaultCenter={defaultProps.center}\n                                        //defaultZoom={defaultProps.zoom}\n                                        options={{\n                                            fullscreenControl: false,\n                                            disableDefaultUI: true,\n                                        }}\n                                        onGoogleApiLoaded={({ map, maps }) => {\n                                            this.renderPolylines(map, maps);\n                                            this.renderMarkers(map, maps);\n                                        }}\n                                    >\n                                        {this.state.currentData.userLocation &&\n                                            <img\n                                                lat={this.state.currentData.userLocation.latitude}\n                                                lng={this.state.currentData.userLocation.longitude}\n                                                src={'/userIcon.svg'}\n                                                className={styles.mapIcon}\n                                            />}\n                                    </GoogleMapReact>\n                                </div>\n                            </div>\n                            <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                                <div\n                                    className={styles.button2}\n                                    style={{ backgroundColor: colors.RED }}\n                                    id={styles.buttonBottom}\n                                    onClick={() => { this.setState({ currentData: null }) }}>\n                                    <p className={styles.buttonText1}>Cancel</p>\n                                </div>\n                                <div\n                                    className={styles.button2}\n                                    style={{ backgroundColor: colors.GREEN }}\n                                    id={styles.buttonBottom}\n                                    onClick={() => {\n\n                                    }}>\n                                    <p className={styles.buttonText1}>Refund Amount</p>\n                                </div>\n                            </div>\n                        </>\n                        :\n                        <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                            <p className={styles.title} style={{ color: colors.BLACK }}>Cancelled Trips</p>\n                            <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '20px' }}>\n                                {/* <input\n                            type=\"text\"\n                            placeholder=\"Search riders by email / userID\"\n                            className={styles.searchInput}\n                            style={{ width: '48%' }}\n                            value={this.state.idRiderSearch}\n                            onChange={event => {\n                                this.setState({ idRiderSearch: event.target.value });\n                            }}\n                        />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search drivers by email / userID\"\n                            className={styles.searchInput}\n                            style={{ width: '48%' }}\n                            value={this.state.idRiderSearch}\n                            onChange={event => {\n                                this.setState({ idRiderSearch: event.target.value });\n                            }}\n                        /> */}\n                            </div>\n\n                            {results}\n\n                        </div>}\n            </div>\n        );\n    };\n};"]},"metadata":{},"sourceType":"module"}