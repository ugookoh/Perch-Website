{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport EmailEditor from 'react-email-editor';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, sendUserEmail } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport Loader from 'react-loader-spinner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default class SendAnEmail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadResult\", () => {\n      if (this.state.userDetails) {}\n    });\n\n    _defineProperty(this, \"exportHtml\", () => {\n      this.emailEditor.current.editor.exportHtml(data => {\n        const {\n          design,\n          html\n        } = data;\n        console.log('exportHtml', html);\n      });\n    });\n\n    _defineProperty(this, \"onLoad\", () => {// you can load your template here;\n      // const templateJson = {};\n      // emailEditorRef.current.editor.loadDesign(templateJson);\n    });\n\n    this.state = {\n      email: '',\n      text: '',\n      subject: '',\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadResult();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.cont,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.container,\n        style: {\n          backgroundColor: colors.WHITE,\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          className: styles.title,\n          style: {\n            color: colors.BLACK,\n            marginBottom: '30px'\n          },\n          children: \"Send an Email\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter user's email\",\n          className: styles.contactUsEmail,\n          value: this.state.email,\n          onChange: event => {\n            this.setState({\n              email: event.target.value\n            });\n          }\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter subject\",\n          className: styles.contactUsEmail,\n          style: {\n            marginTop: '10px'\n          },\n          value: this.state.subject,\n          onChange: event => {\n            this.setState({\n              subject: event.target.value\n            });\n          }\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.sharedLine\n        }), /*#__PURE__*/_jsx(\"textarea\", {\n          type: \"text\",\n          placeholder: \"Enter your message here\",\n          className: styles.contactUsContent //style={{ width: '100%' }}\n          ,\n          value: this.state.text,\n          onChange: event => {\n            this.setState({\n              text: event.target.value\n            });\n          }\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.enterKilometerDiv,\n        style: {\n          marginTop: '20px',\n          marginBottom: '150px',\n          marginLeft: '2.5%',\n          width: '95%'\n        },\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: styles.button2,\n          style: {\n            backgroundColor: colors.GREEN,\n            width: '100%',\n            maxWidth: 'initial'\n          },\n          id: styles.buttonBottom,\n          onClick: () => {\n            const {\n              text,\n              subject,\n              email\n            } = this.state;\n            if (text.length < 15) alert('Please enter a good amount of information for user');else if (subject.length < 5) alert('Please a proper subject');else if (email.length < 5) alert('Please enter correct email address');else {\n              this.setState({\n                loading: true\n              }, () => {\n                sendUserEmail.call(this, email, subject, text);\n              });\n            }\n          },\n          children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n            type: \"TailSpin\",\n            color: colors.WHITE,\n            height: '15px',\n            width: '15px'\n          }) : /*#__PURE__*/_jsx(\"p\", {\n            className: styles.buttonText1,\n            children: \"Send Email\"\n          })\n        })\n      })]\n    });\n  }\n\n}\n;","map":null,"metadata":{},"sourceType":"module"}