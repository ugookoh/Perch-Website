{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this6 = this,\n    _s = $RefreshSig$();\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineClose, AiOutlineRight } from 'react-icons/ai';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, storeCard, deleteCard } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Loader from 'react-loader-spinner';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar stripePromise = loadStripe('pk_test_RjADdW2vGwFAgOOk7ws1juNB002JV727O8');\n\nvar PerchWallet = /*#__PURE__*/function (_React$Component) {\n  _inherits(PerchWallet, _React$Component);\n\n  var _super = _createSuper(PerchWallet);\n\n  function PerchWallet(props) {\n    var _this;\n\n    _classCallCheck(this, PerchWallet);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"loadCards\", function () {\n      var userID = _this.state.userDetails.userID;\n      firebase.database().ref(\"cards/\".concat(userID)).once('value', function (snapshot) {\n        if (!!snapshot) {\n          var arrayOfLast4 = [],\n              i = 0;\n\n          for (var key in snapshot.val()) {\n            if (key != 'selected') arrayOfLast4[i] = {\n              last4: snapshot.val()[key].card.last4,\n              brand: snapshot.val()[key].card.brand\n            };else if (key == 'selected') _this.setState({\n              selected: snapshot.val()[key]\n            });\n            i++;\n          }\n\n          _this.setState({\n            cards: arrayOfLast4\n          });\n        }\n\n        ;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSelected\", function (value) {\n      var userID = _this.state.userDetails.userID;\n      firebase.database().ref(\"cards/\".concat(userID)).update({\n        selected: value\n      }).then(function () {\n        _this.setState({\n          selected: value\n        });\n      })[\"catch\"](function (error) {\n        _this.setState({\n          errorMessage: error.message\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeCard\", function (index) {\n      var cards = _this.state.cards;\n      cards.splice(index, 1);\n\n      _this.setState({\n        cards: cards\n      });\n    });\n\n    _this.state = {\n      buyKilometers: true,\n      //false,\n      addCard: false,\n      userDetails: _this.props.userDetails,\n      quantity: 0,\n      cards: [],\n      selected: null,\n      name: '',\n      cardNumber: '',\n      expiryDate: '',\n      ccv: '',\n      errorMessage: '',\n      loading: false,\n      rate: 0,\n      kms: '',\n      cost: 0,\n      paymentLoading: true,\n      //false,\n      paymentComplete: true,\n      //false,\n      paymentError: false,\n      paymentErrorMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(PerchWallet, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var userID = this.state.userDetails.userID;\n      firebase.database().ref(\"perchKilometers/\".concat(userID, \"/quantity\")).on('value', function (snapshot) {\n        if (!!snapshot) _this2.setState({\n          quantity: snapshot.val()\n        });\n      });\n      firebase.database().ref(\"costPerPerchKM\").on('value', function (snapshot) {\n        _this2.setState({\n          rate: snapshot.val()\n        });\n      });\n      this.loadCards();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _this$state$rate,\n          _this$state$cost;\n\n      var cards = [];\n\n      for (var i = 0; i < this.state.cards.length; i++) {\n        cards.push( /*#__PURE__*/_jsx(PaymentCard, {\n          userID: this.state.userDetails.userID,\n          card: this.state.cards[i],\n          index: i,\n          removeCard: this.removeCard,\n          setSelected: this.setSelected,\n          selectedCard: this.state.selected,\n          selected: this.state.selected === this.state.cards[i].last4,\n          type: this.state.buyKilometers ? 'pickPayment' : 'listOfCards'\n        }, this.state.cards[i].last4));\n      }\n\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: styles.cont,\n        children: this.state.buyKilometers ? //buy kilometers\n        this.state.paymentLoading ? /*#__PURE__*/_jsx(_Fragment, {\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.container,\n            style: {\n              backgroundColor: colors.WHITE,\n              marginTop: '20px'\n            },\n            children: [!this.state.paymentComplete && /*#__PURE__*/_jsx(Loader, {\n              type: \"TailSpin\",\n              color: colors.GREEN,\n              height: '100px',\n              width: '100px',\n              style: {\n                marginTop: 25\n              }\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: colors.GREY,\n                width: 'initial',\n                marginTop: 20,\n                marginBottom: 30,\n                paddingRight: 15,\n                paddingLeft: 15,\n                textAlign: 'center'\n              },\n              children: this.state.paymentComplete ? \"Your payment has been processed. Thank you.\" : this.state.paymentError ? \"Your payment failed. \".concat(this.state.paymentErrorMessage, \" \") : \"Your payment is currently processing. Please wait.\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.button1,\n              style: {\n                marginTop: 0\n              },\n              onClick: function onClick() {//this.setState({ buyKilometers: true, addCard: false, errorMessage: '' })\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: \"Go back\"\n              })\n            })]\n          })\n        }) : /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.container,\n            style: {\n              backgroundColor: colors.WHITE,\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: colors.BLACK\n              },\n              children: \"Enter the amount of kilometers you would like to purchase\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter amount of kilometers\",\n              value: this.state.kms,\n              onChange: function onChange(e) {\n                var value = e.target.value;\n\n                if (value.length <= 3) {\n                  var cost = Number(value) * _this3.state.rate;\n\n                  _this3.setState({\n                    kms: value,\n                    cost: cost\n                  });\n                }\n              },\n              className: styles.inputPaymentPanel\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.enterKilometerDiv,\n              style: {\n                marginTop: '20px'\n              },\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                style: {\n                  width: 'initial',\n                  margin: '0px',\n                  fontFamily: 'Gilroy-Medium',\n                  color: colors.GREY\n                },\n                className: styles.text,\n                children: \"Cost per kilometer\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                style: {\n                  width: 'initial',\n                  margin: '0px',\n                  fontFamily: 'Gilroy-Medium'\n                },\n                className: styles.text,\n                children: \"$ \".concat((_this$state$rate = this.state.rate) === null || _this$state$rate === void 0 ? void 0 : _this$state$rate.toFixed(2))\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.sharedLine,\n              style: {\n                marginTop: '20px',\n                width: '90%'\n              }\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.enterKilometerDiv,\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                style: {\n                  width: 'initial',\n                  margin: '0px',\n                  fontFamily: 'Gilroy-Bold',\n                  fontSize: '120%'\n                },\n                className: styles.text,\n                children: \"Total\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                style: {\n                  width: 'initial',\n                  margin: '0px',\n                  fontFamily: 'Gilroy-Bold',\n                  color: colors.GREEN,\n                  fontSize: '120%'\n                },\n                className: styles.text,\n                children: \"$ \".concat((_this$state$cost = this.state.cost) === null || _this$state$cost === void 0 ? void 0 : _this$state$cost.toFixed(2))\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.container,\n            style: {\n              backgroundColor: colors.WHITE,\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: colors.BLACK\n              },\n              children: \"Payment Methods\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.text,\n              style: {\n                color: colors.GREY,\n                marginBottom: '20px'\n              },\n              children: \"List of available payment methods. New payment methods can also be added.\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.paymentCont,\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.paymentItem,\n                children: [cards, /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.paymentRow,\n                  id: styles.addCardPayment,\n                  children: [/*#__PURE__*/_jsxs(\"div\", {\n                    style: {\n                      flexDirection: 'row',\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsx(\"img\", {\n                      src: \"/PayPalLogo.svg\",\n                      alt: \"Perch Payment\",\n                      className: styles.visaIcon,\n                      style: {\n                        marginRight: '15px',\n                        marginLeft: '0px'\n                      }\n                    }), /*#__PURE__*/_jsx(\"p\", {\n                      className: styles.paymentCardNumber,\n                      id: styles.paymentCardNumber_,\n                      children: \"PayPal\"\n                    })]\n                  }), /*#__PURE__*/_jsx(AiOutlineRight, {\n                    color: colors.BLACK\n                  })]\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: styles.sharedLine,\n                  style: {\n                    marginTop: '0px',\n                    width: '100%'\n                  }\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.paymentRow,\n                  id: styles.addCardPayment,\n                  onClick: function onClick() {\n                    _this3.setState({\n                      addCard: true,\n                      buyKilometers: false,\n                      errorMessage: ''\n                    });\n                  },\n                  children: [/*#__PURE__*/_jsxs(\"div\", {\n                    style: {\n                      flexDirection: 'row',\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsx(\"img\", {\n                      src: \"/addPaymentCardIcon.svg\",\n                      alt: \"Perch Payment\",\n                      className: styles.visaIcon,\n                      style: {\n                        marginRight: '15px'\n                      }\n                    }), /*#__PURE__*/_jsx(\"p\", {\n                      className: styles.paymentCardNumber,\n                      id: styles.paymentCardNumber_,\n                      children: \"Add Debit / Credit Card\"\n                    })]\n                  }), /*#__PURE__*/_jsx(AiOutlineRight, {\n                    color: colors.BLACK\n                  })]\n                })]\n              })\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            style: {\n              marginTop: '20px',\n              marginBottom: '150px',\n              marginLeft: '2.5%',\n              width: '95%'\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.button2,\n              style: {\n                backgroundColor: colors.RED\n              },\n              id: styles.buttonBottom,\n              onClick: function onClick() {\n                _this3.setState({\n                  buyKilometers: false,\n                  addCard: false,\n                  errorMessage: ''\n                });\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: \"Cancel\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.button2,\n              style: {\n                backgroundColor: colors.GREEN\n              },\n              id: styles.buttonBottom,\n              children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n                type: \"TailSpin\",\n                color: colors.WHITE,\n                height: '20px',\n                width: '20px'\n              }) : /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: \"Buy Kilometers\"\n              })\n            })]\n          })]\n        }) : this.state.addCard ?\n        /*#__PURE__*/\n        //add card\n        _jsx(Elements, {\n          stripe: stripePromise,\n          children: /*#__PURE__*/_jsx(AddCardForm, {\n            userID: this.state.userDetails.userID,\n            cancel: function cancel() {\n              _this3.loadCards();\n\n              _this3.setState({\n                errorMessage: '',\n                addCard: false,\n                buyKilometers: false\n              });\n            }\n          })\n        }) :\n        /*#__PURE__*/\n        //main page\n        _jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.container,\n            style: {\n              backgroundColor: colors.WHITE,\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: colors.BLACK\n              },\n              children: \"Kilometers\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.text,\n              style: {\n                color: colors.GREY\n              },\n              children: \"You can make kilometer purchases from this panel. Also remeber that sharing your code with friends who book their first ride automatically gives you free kilometers.\"\n            }), /*#__PURE__*/_jsx(\"img\", {\n              src: \"/walletImage.svg\",\n              alt: \"Purchase Perch Kilometers\",\n              className: styles.walletImage\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                width: 'initial',\n                marginTop: '20px'\n              },\n              children: \"\".concat(this.state.quantity.toFixed(1), \" kilometers\")\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.button1,\n              style: {},\n              onClick: function onClick() {\n                _this3.setState({\n                  buyKilometers: true,\n                  addCard: false,\n                  errorMessage: ''\n                });\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: \"Buy kilometers\"\n              })\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.container,\n            style: {\n              backgroundColor: colors.WHITE,\n              marginTop: '20px',\n              marginBottom: '150px'\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: styles.title,\n              style: {\n                color: colors.BLACK\n              },\n              children: \"Payment Methods\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.text,\n              style: {\n                color: colors.GREY,\n                marginBottom: '20px'\n              },\n              children: \"List of available payment methods. New payment methods can also be added.\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.paymentCont,\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.paymentItem,\n                children: [cards, /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.paymentRow,\n                  id: styles.addCardPayment,\n                  onClick: function onClick() {\n                    _this3.setState({\n                      addCard: true,\n                      buyKilometers: false,\n                      errorMessage: ''\n                    });\n                  },\n                  children: [/*#__PURE__*/_jsxs(\"div\", {\n                    style: {\n                      flexDirection: 'row',\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsx(\"img\", {\n                      src: \"/addPaymentCardIcon.svg\",\n                      alt: \"Perch Payment\",\n                      className: styles.visaIcon,\n                      style: {\n                        marginRight: '15px'\n                      }\n                    }), /*#__PURE__*/_jsx(\"p\", {\n                      className: styles.paymentCardNumber,\n                      id: styles.paymentCardNumber_,\n                      children: \"Add Debit / Credit Card\"\n                    })]\n                  }), /*#__PURE__*/_jsx(AiOutlineRight, {\n                    color: colors.BLACK\n                  })]\n                })]\n              })\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return PerchWallet;\n}(React.Component);\n\nexport { PerchWallet as default };\n;\n\nvar PaymentCard = /*#__PURE__*/function (_React$Component2) {\n  _inherits(PaymentCard, _React$Component2);\n\n  var _super2 = _createSuper(PaymentCard);\n\n  function PaymentCard(props) {\n    var _this4;\n\n    _classCallCheck(this, PaymentCard);\n\n    _this4 = _super2.call(this, props);\n    _this4.state = {\n      deleteCard: false,\n      loading: false\n    };\n    return _this4;\n  }\n\n  _createClass(PaymentCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props = this.props,\n          selected = _this$props.selected,\n          setSelected = _this$props.setSelected,\n          card = _this$props.card,\n          userID = _this$props.userID,\n          removeCard = _this$props.removeCard,\n          index = _this$props.index,\n          selectedCard = _this$props.selectedCard;\n      var last4 = card.last4,\n          brand = card.brand;\n      if (this.props.type == 'listOfCards') return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.paymentRow,\n          id: styles.paymentRow_,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            style: {\n              flexDirection: 'row',\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsx(\"img\", {\n              src: brand == 'Visa' ? \"/visaIcon.svg\" : brand == 'Mastercard' ? '/mastercardIcon.svg' : '/addPaymentCardIcon.svg',\n              alt: \"Perch Payment\",\n              className: brand == 'Visa' ? styles.visaIcon : brand == 'Mastercard' ? styles.masterCardIcon : styles.genericCard\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              className: styles.paymentCardNumber,\n              id: styles.paymentCardNumber_,\n              children: [\"XXXX XXXX XXXX \", last4]\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            id: styles.paymentRowButton,\n            children: this.state.deleteCard ? /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.button2,\n                style: {\n                  backgroundColor: colors.RED,\n                  width: '80%'\n                },\n                onClick: function onClick() {\n                  deleteCard.call(_this5, userID, last4, selectedCard);\n                  removeCard(index);\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.paymentCardNumber_,\n                  children: \"Delete this card?\"\n                })\n              }), /*#__PURE__*/_jsx(AiOutlineClose, {\n                className: styles.closeDeletePayment,\n                onClick: function onClick() {\n                  _this5.setState({\n                    deleteCard: false\n                  });\n                }\n              })]\n            }) : /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: selected ? styles.buttonSelected : styles.button2,\n                style: {\n                  backgroundColor: colors.GREEN\n                },\n                onClick: function onClick() {\n                  setSelected(last4);\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.paymentCardNumber_,\n                  children: selected ? 'Selected' : 'Select card'\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.button2,\n                style: {\n                  backgroundColor: colors.RED\n                },\n                onClick: function onClick() {\n                  _this5.setState({\n                    deleteCard: true\n                  });\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.buttonText1,\n                  id: styles.paymentCardNumber_,\n                  children: \"Delete Card\"\n                })\n              })]\n            })\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.sharedLine,\n          style: {\n            marginTop: '20px',\n            width: '100%'\n          }\n        })]\n      });else if (this.props.type == 'pickPayment') return (\n        /*#__PURE__*/\n        //TO MAKE A SELECTED ONE, THE PARENT COMPONENT SHOULD HAVE A SELECTED ITEM ID AND WE COMPARE ID HERE TO SHOW IF IT IS CONFIRMED OR NOT\n        _jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.paymentRow,\n            id: styles.addCardPayment_,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              style: {\n                flexDirection: 'row',\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsx(\"img\", {\n                src: brand == 'Visa' ? \"/visaIcon.svg\" : brand == 'Mastercard' ? '/mastercardIcon.svg' : '/addPaymentCardIcon.svg',\n                alt: \"Perch Payment\",\n                className: brand == 'Visa' ? styles.visaIcon : brand == 'Mastercard' ? styles.masterCardIcon : styles.genericCard\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                className: styles.paymentCardNumber,\n                id: styles.paymentCardNumber_,\n                children: [\"\\u2022\\u2022\\u2022\\u2022 \", last4]\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.pickPaymentSelected,\n              id: selected ? styles.selectedID : styles.selectID,\n              style: {\n                backgroundColor: colors.GREEN\n              },\n              onClick: function onClick() {\n                setSelected(last4);\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                id: styles.paymentCardNumber_,\n                children: selected ? 'Selected' : 'Select'\n              })\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.sharedLine,\n            style: {\n              marginTop: '0px',\n              width: '100%'\n            }\n          })]\n        })\n      );\n    }\n  }]);\n\n  return PaymentCard;\n}(React.Component);\n\n;\n\nvar AddCardForm = function AddCardForm(_ref) {\n  _s();\n\n  var cancel = _ref.cancel,\n      userID = _ref.userID;\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(''),\n      errorMessage = _useState2[0],\n      setErrorMessage = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var createTokenWithCard = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var cardElement, _yield$stripe$createT, error, token;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n\n              if (!(!stripe || !elements)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              ; // Get a reference to a mounted CardElement. Elements knows how\n              // to find your CardElement because there can only ever be one of\n              // each type of element.\n\n              cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n              _context.next = 7;\n              return stripe.createToken(cardElement);\n\n            case 7:\n              _yield$stripe$createT = _context.sent;\n              error = _yield$stripe$createT.error;\n              token = _yield$stripe$createT.token;\n\n              if (error) {\n                setErrorMessage(error.message);\n                setLoading(false);\n              } else {\n                storeCard.call(_this6, userID, token, setLoading, setErrorMessage, cancel);\n              }\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createTokenWithCard() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.container,\n      style: {\n        backgroundColor: colors.WHITE,\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        className: styles.title,\n        style: {\n          color: colors.BLACK\n        },\n        children: \"Add card\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"Name on Card\",\n        className: styles.inputPaymentPanel,\n        id: styles.inputPaymentPanel_ADD,\n        style: {\n          marginTop: '10px'\n        },\n        value: name,\n        onChange: function onChange(e) {\n          var value = e.target.value;\n          setName(value);\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.inputPaymentPanel,\n        children: /*#__PURE__*/_jsx(CardElement, {\n          options: {\n            hidePostalCode: true,\n            style: {\n              base: {\n                color: '#303238',\n                fontSize: '16px',\n                fontFamily: '\"Gill Sans\", sans-serif',\n                fontSmoothing: 'antialiased',\n                '::placeholder': {\n                  color: '#757575'\n                }\n              },\n              invalid: {\n                color: '#e5424d',\n                ':focus': {\n                  color: '#303238'\n                }\n              }\n            }\n          }\n        })\n      }), errorMessage && /*#__PURE__*/_jsx(\"p\", {\n        className: styles.em,\n        style: {\n          textAlign: 'initial'\n        },\n        children: errorMessage\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.enterKilometerDiv,\n      style: {\n        marginTop: '20px',\n        marginBottom: '150px',\n        marginLeft: '2.5%',\n        width: '95%'\n      },\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: styles.button2,\n        style: {\n          backgroundColor: colors.RED\n        },\n        id: styles.buttonBottom,\n        onClick: cancel,\n        children: /*#__PURE__*/_jsx(\"p\", {\n          className: styles.buttonText1,\n          children: \"Cancel\"\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.button2,\n        style: {\n          backgroundColor: colors.GREEN\n        },\n        id: styles.buttonBottom,\n        onClick: function onClick() {\n          if (name.length <= 3) setErrorMessage('Please enter the full name on the card');else createTokenWithCard();\n        },\n        children: loading ? /*#__PURE__*/_jsx(Loader, {\n          type: \"TailSpin\",\n          color: colors.WHITE,\n          height: '20px',\n          width: '20px'\n        }) : /*#__PURE__*/_jsx(\"p\", {\n          className: styles.buttonText1,\n          children: \"Add Card\"\n        })\n      })]\n    })]\n  });\n};\n\n_s(AddCardForm, \"SHsbFLFRwhsWxbJa485op4Ogd78=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = AddCardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCardForm\");","map":{"version":3,"sources":["/Users/ugo/Documents/Perch_Projects/Perch-Website/functions/panels/userPanels/perchWallet.js"],"names":["React","useState","AiOutlineClose","AiOutlineRight","colors","storeCard","deleteCard","styles","firebase","loadStripe","Loader","CardElement","Elements","useElements","useStripe","stripePromise","PerchWallet","props","userID","state","userDetails","database","ref","once","snapshot","arrayOfLast4","i","key","val","last4","card","brand","setState","selected","cards","value","update","then","error","errorMessage","message","index","splice","buyKilometers","addCard","quantity","name","cardNumber","expiryDate","ccv","loading","rate","kms","cost","paymentLoading","paymentComplete","paymentError","paymentErrorMessage","on","loadCards","length","push","removeCard","setSelected","cont","container","backgroundColor","WHITE","marginTop","GREEN","title","color","GREY","width","marginBottom","paddingRight","paddingLeft","textAlign","button1","buttonText1","BLACK","e","target","Number","inputPaymentPanel","enterKilometerDiv","margin","fontFamily","text","toFixed","sharedLine","fontSize","paymentCont","paymentItem","paymentRow","addCardPayment","flexDirection","display","alignItems","visaIcon","marginRight","marginLeft","paymentCardNumber","paymentCardNumber_","button2","RED","buttonBottom","walletImage","Component","PaymentCard","selectedCard","type","paymentRow_","masterCardIcon","genericCard","paymentRowButton","call","closeDeletePayment","buttonSelected","addCardPayment_","pickPaymentSelected","selectedID","selectID","AddCardForm","cancel","setName","setErrorMessage","setLoading","stripe","elements","createTokenWithCard","cardElement","getElement","createToken","token","inputPaymentPanel_ADD","hidePostalCode","style","base","fontSmoothing","invalid","em"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineClose, AiOutlineRight } from 'react-icons/ai';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, storeCard, deleteCard, } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Loader from 'react-loader-spinner';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nconst stripePromise = loadStripe('pk_test_RjADdW2vGwFAgOOk7ws1juNB002JV727O8');\n\nexport default class PerchWallet extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            buyKilometers: true,//false,\n            addCard: false,\n            userDetails: this.props.userDetails,\n            quantity: 0,\n            cards: [],\n            selected: null,\n\n            name: '',\n            cardNumber: '',\n            expiryDate: '',\n            ccv: '',\n            errorMessage: '',\n\n            loading: false,\n\n            rate: 0,\n            kms: '',\n            cost: 0,\n\n            paymentLoading: true,//false,\n            paymentComplete: true,//false,\n            paymentError: false,\n            paymentErrorMessage: '',\n        };\n    };\n    componentDidMount() {\n        const { userID } = this.state.userDetails;\n        firebase.database().ref(`perchKilometers/${userID}/quantity`).on('value', snapshot => {\n            if (!!snapshot)\n                this.setState({ quantity: snapshot.val() });\n        });\n        firebase.database().ref(`costPerPerchKM`).on('value', snapshot => {\n            this.setState({ rate: snapshot.val() });\n        });\n        this.loadCards();\n    };\n    loadCards = () => {\n        const { userID } = this.state.userDetails;\n        firebase.database().ref(`cards/${userID}`).once('value', snapshot => {\n            if (!!snapshot) {\n                let arrayOfLast4 = [], i = 0;\n                for (let key in snapshot.val()) {\n                    if (key != 'selected')\n                        arrayOfLast4[i] = {\n                            last4: snapshot.val()[key].card.last4,\n                            brand: snapshot.val()[key].card.brand,\n                        };\n                    else if (key == 'selected')\n                        this.setState({ selected: snapshot.val()[key] })\n                    i++;\n                }\n                this.setState({ cards: arrayOfLast4 });\n            };\n        });\n    };\n    setSelected = (value) => {\n        const { userID } = this.state.userDetails;\n        firebase.database().ref(`cards/${userID}`).update({\n            selected: value\n        }).then(() => {\n            this.setState({ selected: value })\n        }).catch(error => { this.setState({ errorMessage: error.message }) })\n    }\n    removeCard = (index) => {\n        let { cards } = this.state;\n        cards.splice(index, 1);\n        this.setState({ cards: cards })\n    };\n    render() {\n        let cards = [];\n        for (let i = 0; i < this.state.cards.length; i++)\n            cards.push(\n                <PaymentCard\n                    userID={this.state.userDetails.userID}\n                    key={this.state.cards[i].last4}\n                    card={this.state.cards[i]}\n                    index={i}\n                    removeCard={this.removeCard}\n                    setSelected={this.setSelected}\n                    selectedCard={this.state.selected}\n                    selected={this.state.selected === this.state.cards[i].last4}\n                    type={this.state.buyKilometers ? 'pickPayment' : 'listOfCards'} />\n            );\n        return (\n            <div className={styles.cont}>\n                {\n                    this.state.buyKilometers ?//buy kilometers\n\n                        (\n                            this.state.paymentLoading ?\n                                <>\n                                    <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                                        {!this.state.paymentComplete && <Loader\n                                            type=\"TailSpin\"\n                                            color={colors.GREEN}\n                                            height={'100px'}\n                                            width={'100px'}\n                                            style={{ marginTop: 25 }}\n                                        />}\n                                        <p className={styles.title}\n                                            style={{ color: colors.GREY, width: 'initial', marginTop: 20, marginBottom: 30, paddingRight: 15, paddingLeft: 15, textAlign: 'center' }}>\n                                            {this.state.paymentComplete ?\n                                                `Your payment has been processed. Thank you.` :\n                                                this.state.paymentError ?\n                                                    `Your payment failed. ${this.state.paymentErrorMessage} ` :\n                                                    `Your payment is currently processing. Please wait.`}\n                                        </p>\n                                        <div\n                                            className={styles.button1}\n                                            style={{ marginTop: 0 }}\n                                            onClick={() => {\n                                                //this.setState({ buyKilometers: true, addCard: false, errorMessage: '' })\n                                            }}>\n                                            <p className={styles.buttonText1}>Go back</p>\n                                        </div>\n                                    </div>\n                                </> :\n                                <>\n                                    <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                                        <p className={styles.title} style={{ color: colors.BLACK }}>Enter the amount of kilometers you would like to purchase</p>\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Enter amount of kilometers\"\n                                            value={this.state.kms}\n                                            onChange={(e) => {\n                                                const value = e.target.value;\n                                                if (value.length <= 3) {\n                                                    const cost = Number(value) * this.state.rate;\n                                                    this.setState({ kms: value, cost: cost });\n                                                }\n                                            }}\n                                            className={styles.inputPaymentPanel} />\n                                        <div className={styles.enterKilometerDiv} style={{ marginTop: '20px' }}>\n                                            <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', color: colors.GREY }} className={styles.text}>Cost per kilometer</p>\n                                            <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', }} className={styles.text}>{`$ ${this.state.rate?.toFixed(2)}`}</p>\n                                        </div>\n                                        {/* <div className={styles.enterKilometerDiv}>\n                                    <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', color: colors.GREY }} className={styles.text}>Total cost of kilometers</p>\n                                    <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', }} className={styles.text}>{`$ ${this.state.cost?.toFixed(2)}`}</p>\n                                </div>\n                                 <div className={styles.enterKilometerDiv}>\n                                    <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', color: colors.GREY }} className={styles.text}>Taxes</p>\n                                    <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', }} className={styles.text}>{`$ 1.99`}</p>\n                                </div> */}\n                                        <div className={styles.sharedLine} style={{ marginTop: '20px', width: '90%' }}></div>\n                                        <div className={styles.enterKilometerDiv}>\n                                            <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Bold', fontSize: '120%' }} className={styles.text}>Total</p>\n                                            <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Bold', color: colors.GREEN, fontSize: '120%' }} className={styles.text}>{`$ ${this.state.cost?.toFixed(2)}`}</p>\n                                        </div>\n\n                                    </div>\n\n                                    <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px', }}>\n                                        <p className={styles.title} style={{ color: colors.BLACK }}>\n                                            Payment Methods\n                                        </p>\n                                        <p className={styles.text} style={{ color: colors.GREY, marginBottom: '20px' }}>\n                                            List of available payment methods. New payment methods can also be added.\n                                        </p>\n\n                                        <div className={styles.paymentCont}>\n                                            <div className={styles.paymentItem}>\n                                                {cards}\n                                                <div className={styles.paymentRow} id={styles.addCardPayment}>\n                                                    <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                                                        <img src=\"/PayPalLogo.svg\" alt=\"Perch Payment\" className={styles.visaIcon} style={{ marginRight: '15px', marginLeft: '0px' }} />\n                                                        <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>PayPal</p>\n                                                    </div>\n                                                    <AiOutlineRight color={colors.BLACK} />\n                                                </div>\n                                                <div className={styles.sharedLine} style={{ marginTop: '0px', width: '100%' }}></div>\n                                                <div className={styles.paymentRow} id={styles.addCardPayment} onClick={() => { this.setState({ addCard: true, buyKilometers: false, errorMessage: '' }) }}>\n                                                    <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                                                        <img src=\"/addPaymentCardIcon.svg\" alt=\"Perch Payment\" className={styles.visaIcon} style={{ marginRight: '15px' }} />\n                                                        <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>Add Debit / Credit Card</p>\n                                                    </div>\n                                                    <AiOutlineRight color={colors.BLACK} />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                                        <div className={styles.button2} style={{ backgroundColor: colors.RED }} id={styles.buttonBottom}\n                                            onClick={() => { this.setState({ buyKilometers: false, addCard: false, errorMessage: '' }) }}>\n                                            <p className={styles.buttonText1}>Cancel</p>\n                                        </div>\n                                        <div className={styles.button2} style={{ backgroundColor: colors.GREEN }} id={styles.buttonBottom}>\n                                            {this.state.loading ?\n                                                <Loader\n                                                    type=\"TailSpin\"\n                                                    color={colors.WHITE}\n                                                    height={'20px'}\n                                                    width={'20px'}\n                                                /> :\n                                                <p className={styles.buttonText1}>Buy Kilometers</p>}\n                                        </div>\n                                    </div>\n                                </>) :\n                        this.state.addCard ?//add card\n                            <Elements stripe={stripePromise}>\n                                <AddCardForm\n                                    userID={this.state.userDetails.userID}\n                                    cancel={() => {\n                                        this.loadCards();\n                                        this.setState({ errorMessage: '', addCard: false, buyKilometers: false, })\n                                    }}\n                                />\n                            </Elements>\n                            ://main page\n                            <>\n                                <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                                    <p className={styles.title} style={{ color: colors.BLACK }}>Kilometers</p>\n                                    <p className={styles.text} style={{ color: colors.GREY }}>\n                                        You can make kilometer purchases from this panel. Also remeber that sharing your code with friends who book their first ride automatically gives you free kilometers.\n                                    </p>\n                                    <img src=\"/walletImage.svg\" alt=\"Purchase Perch Kilometers\" className={styles.walletImage} />\n                                    <p className={styles.title} style={{ width: 'initial', marginTop: '20px' }}>{`${this.state.quantity.toFixed(1)} kilometers`}</p>\n                                    <div className={styles.button1} style={{}} onClick={() => { this.setState({ buyKilometers: true, addCard: false, errorMessage: '' }) }}>\n                                        <p className={styles.buttonText1}>Buy kilometers</p>\n                                    </div>\n                                </div>\n\n                                <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px', marginBottom: '150px' }}>\n                                    <p className={styles.title} style={{ color: colors.BLACK }}>\n                                        Payment Methods\n                                    </p>\n                                    <p className={styles.text} style={{ color: colors.GREY, marginBottom: '20px' }}>\n                                        List of available payment methods. New payment methods can also be added.\n                                    </p>\n\n                                    <div className={styles.paymentCont}>\n                                        <div className={styles.paymentItem}>\n                                            {cards}\n                                            <div className={styles.paymentRow} id={styles.addCardPayment} onClick={() => { this.setState({ addCard: true, buyKilometers: false, errorMessage: '' }) }}>\n                                                <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                                                    <img src=\"/addPaymentCardIcon.svg\" alt=\"Perch Payment\" className={styles.visaIcon} style={{ marginRight: '15px' }} />\n                                                    <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>Add Debit / Credit Card</p>\n                                                </div>\n                                                <AiOutlineRight color={colors.BLACK} />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </>\n                }\n            </div >\n        )\n\n    }\n};\nclass PaymentCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteCard: false,\n            loading: false,\n        }\n    }\n    render() {\n        const { selected, setSelected, card, userID, removeCard, index, selectedCard } = this.props;\n        const { last4, brand } = card;\n        if (this.props.type == 'listOfCards')\n            return (\n                <>\n                    <div className={styles.paymentRow} id={styles.paymentRow_}>\n                        <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                            <img\n                                src={brand == 'Visa' ? \"/visaIcon.svg\" : brand == 'Mastercard' ? '/mastercardIcon.svg' : '/addPaymentCardIcon.svg'} alt=\"Perch Payment\"\n                                className={brand == 'Visa' ? styles.visaIcon : brand == 'Mastercard' ? styles.masterCardIcon : styles.genericCard} />\n                            <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>XXXX XXXX XXXX {last4}</p>\n                        </div>\n                        <div id={styles.paymentRowButton}>\n                            {\n                                this.state.deleteCard ?\n                                    <>\n                                        <div className={styles.button2} style={{ backgroundColor: colors.RED, width: '80%' }}\n                                            onClick={() => {\n                                                deleteCard.call(this, userID, last4, selectedCard);\n                                                removeCard(index);\n                                            }}\n                                        >\n                                            <p className={styles.buttonText1} id={styles.paymentCardNumber_}>Delete this card?</p>\n                                        </div>\n                                        <AiOutlineClose className={styles.closeDeletePayment} onClick={() => { this.setState({ deleteCard: false }) }} />\n                                    </> :\n                                    <>\n                                        <div\n                                            className={selected ? styles.buttonSelected : styles.button2}\n                                            style={{ backgroundColor: colors.GREEN }}\n                                            onClick={() => {\n                                                setSelected(last4)\n                                            }}>\n                                            <p className={styles.buttonText1} id={styles.paymentCardNumber_}>{selected ? 'Selected' : 'Select card'}</p>\n                                        </div>\n                                        <div className={styles.button2} style={{ backgroundColor: colors.RED }} onClick={() => { this.setState({ deleteCard: true }) }}>\n                                            <p className={styles.buttonText1} id={styles.paymentCardNumber_}>Delete Card</p>\n                                        </div>\n                                    </>}\n                        </div>\n                    </div>\n                    <div className={styles.sharedLine} style={{ marginTop: '20px', width: '100%' }}></div>\n                </>\n            );\n        else if (this.props.type == 'pickPayment')\n            return (//TO MAKE A SELECTED ONE, THE PARENT COMPONENT SHOULD HAVE A SELECTED ITEM ID AND WE COMPARE ID HERE TO SHOW IF IT IS CONFIRMED OR NOT\n                <>\n                    <div className={styles.paymentRow} id={styles.addCardPayment_} >\n                        <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                            <img\n                                src={brand == 'Visa' ? \"/visaIcon.svg\" : brand == 'Mastercard' ? '/mastercardIcon.svg' : '/addPaymentCardIcon.svg'} alt=\"Perch Payment\"\n                                className={brand == 'Visa' ? styles.visaIcon : brand == 'Mastercard' ? styles.masterCardIcon : styles.genericCard} />\n                            <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>•••• {last4}</p>\n                        </div>\n                        <div className={styles.pickPaymentSelected}\n                            id={selected ? styles.selectedID : styles.selectID}\n                            style={{ backgroundColor: colors.GREEN, }}\n                            onClick={() => {\n                                setSelected(last4)\n                            }}>\n                            <p className={styles.buttonText1} id={styles.paymentCardNumber_}>{selected ? 'Selected' : 'Select'}</p>\n                        </div>\n                    </div>\n                    <div className={styles.sharedLine} style={{ marginTop: '0px', width: '100%' }}></div>\n                </>\n            );\n    }\n};\nconst AddCardForm = ({ cancel, userID }) => {\n    const [name, setName] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [loading, setLoading] = useState(false);\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const createTokenWithCard = async () => {\n        setLoading(true);\n        if (!stripe || !elements) {\n            // Stripe.js has not loaded yet. Make sure to disable\n            // form submission until Stripe.js has loaded.\n            return;\n        };\n\n        // Get a reference to a mounted CardElement. Elements knows how\n        // to find your CardElement because there can only ever be one of\n        // each type of element.\n        const cardElement = elements.getElement(CardElement);\n        // Use your card Element with other Stripe.js APIs\n        const { error, token } = await stripe.createToken(cardElement);\n\n        if (error) {\n            setErrorMessage(error.message);\n            setLoading(false);\n        } else {\n            storeCard.call(this, userID, token, setLoading, setErrorMessage, cancel);\n        }\n    };\n    return (\n        <>\n            <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                <p className={styles.title} style={{ color: colors.BLACK }}>Add card</p>\n                <input type=\"text\"\n                    placeholder=\"Name on Card\"\n                    className={styles.inputPaymentPanel}\n                    id={styles.inputPaymentPanel_ADD}\n                    style={{ marginTop: '10px' }}\n                    value={name}\n                    onChange={(e) => {\n                        const value = e.target.value;\n                        setName(value);\n                    }}\n                />\n                <div className={styles.inputPaymentPanel}>\n                    <CardElement\n                        options={{\n                            hidePostalCode: true,\n                            style: {\n                                base: {\n                                    color: '#303238',\n                                    fontSize: '16px',\n                                    fontFamily: '\"Gill Sans\", sans-serif',\n                                    fontSmoothing: 'antialiased',\n                                    '::placeholder': {\n                                        color: '#757575',\n                                    },\n                                },\n                                invalid: {\n                                    color: '#e5424d',\n                                    ':focus': {\n                                        color: '#303238',\n                                    },\n                                },\n                            }\n                        }}\n                    />\n                </div>\n\n                {errorMessage && <p className={styles.em} style={{ textAlign: 'initial' }}>{errorMessage}</p>}\n            </div>\n            <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                <div className={styles.button2} style={{ backgroundColor: colors.RED }} id={styles.buttonBottom}\n                    onClick={cancel}>\n                    <p className={styles.buttonText1}>Cancel</p>\n                </div>\n                <div\n                    className={styles.button2}\n                    style={{ backgroundColor: colors.GREEN }}\n                    id={styles.buttonBottom}\n                    onClick={() => {\n                        if (name.length <= 3)\n                            setErrorMessage('Please enter the full name on the card');\n                        else\n                            createTokenWithCard();\n                    }}>\n                    {loading ?\n                        <Loader\n                            type=\"TailSpin\"\n                            color={colors.WHITE}\n                            height={'20px'}\n                            width={'20px'}\n                        /> :\n                        <p className={styles.buttonText1}>Add Card</p>}\n                </div>\n            </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}