{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar PendingProcesses = /*#__PURE__*/function (_React$Component) {\n  _inherits(PendingProcesses, _React$Component);\n\n  var _super = _createSuper(PendingProcesses);\n\n  function PendingProcesses(props) {\n    var _this;\n\n    _classCallCheck(this, PendingProcesses);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      result: {},\n      loading: false,\n      addNewProcess: true,\n      //false,\n      userID: '',\n      type: '',\n      mainTopic: '',\n      title: '',\n      details: ''\n    };\n    return _this;\n  }\n\n  _createClass(PendingProcesses, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var results = [];\n      var keys = Object.keys(this.state.result).sort(function (a, b) {\n        return b - a;\n      });\n\n      for (var k = 0; k < keys.length; k++) {\n        var data = this.state.result[keys[k]];\n        results.push( /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.previousMessageSum,\n            onClick: function onClick() {//this.setState({ currentData: data, index: k })\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              style: {\n                width: '90px',\n                height: '30px',\n                backgroundColor: data.type == 'rider' ? colors.GREEN : colors.BLUE,\n                borderRadius: '5px',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.readOrUnreadText,\n                style: {\n                  color: '#ffffff',\n                  fontFamily: 'Gilroy-ExtraBold'\n                },\n                children: data.type == 'rider' ? 'Rider' : 'Driver'\n              })\n            }), /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                fontSize: '105%',\n                fontFamily: 'Gilroy-Bold',\n                color: colors.GREEN\n              },\n              children: /*#__PURE__*/_jsx(\"span\", {\n                style: {\n                  color: colors.GREY\n                },\n                children: displayDate\n              })\n            })]\n          }), k == keys.length - 1 ? /*#__PURE__*/_jsx(_Fragment, {}) : /*#__PURE__*/_jsx(\"div\", {\n            className: styles.sharedLine,\n            style: {\n              marginTop: '5px'\n            }\n          })]\n        }));\n      }\n\n      ;\n      var addNewProcess = this.state.addNewProcess;\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.cont,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: colors.WHITE,\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: colors.BLACK\n            },\n            children: \"List of pending requests\"\n          }), addNewProcess ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              style: {\n                width: '90%',\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                marginBottom: '20px'\n              },\n              children: [/*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"User ID\",\n                className: styles.searchInput,\n                style: {\n                  width: '67%'\n                },\n                value: this.state.userID,\n                onChange: function onChange(event) {\n                  _this2.setState({\n                    userID: event.target.value\n                  });\n                }\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Type\",\n                className: styles.searchInput,\n                style: {\n                  width: '32%'\n                },\n                value: this.state.type,\n                onChange: function onChange(event) {\n                  _this2.setState({\n                    type: event.target.value.toLowerCase()\n                  });\n                }\n              })]\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              placeholder: \"User ID\",\n              className: styles.searchInput,\n              style: {\n                width: '100%'\n              },\n              value: this.state.mainTopic,\n              onChange: function onChange(event) {\n                _this2.setState({\n                  mainTopic: event.target.value\n                });\n              }\n            })]\n          }) : /*#__PURE__*/_jsx(_Fragment, {})]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.enterKilometerDiv,\n          style: {\n            marginTop: '20px',\n            marginBottom: '150px',\n            marginLeft: '2.5%',\n            width: '95%'\n          },\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: styles.button2,\n            style: {\n              backgroundColor: colors.RED\n            },\n            id: styles.buttonBottom,\n            onClick: function onClick() {},\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Cancel\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.button2,\n            style: {\n              backgroundColor: colors.GREEN\n            },\n            id: styles.buttonBottom,\n            onClick: function onClick() {},\n            children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n              type: \"TailSpin\",\n              color: colors.WHITE,\n              height: '20px',\n              width: '20px'\n            }) : /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Add Pending Process\"\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return PendingProcesses;\n}(React.Component);\n\nexport { PendingProcesses as default };\n;","map":{"version":3,"sources":["/Users/ugo/Documents/Perch_Projects/Perch-Website/functions/panels/adminPanels/pendingProcesses.js"],"names":["firebase","React","colors","styles","PendingProcesses","props","state","result","loading","addNewProcess","userID","type","mainTopic","title","details","results","keys","Object","sort","a","b","k","length","data","push","previousMessageSum","width","height","backgroundColor","GREEN","BLUE","borderRadius","display","justifyContent","alignItems","readOrUnreadText","color","fontFamily","fontSize","GREY","displayDate","sharedLine","marginTop","cont","container","WHITE","BLACK","flexDirection","marginBottom","searchInput","event","setState","target","value","toLowerCase","enterKilometerDiv","marginLeft","button2","RED","buttonBottom","buttonText1","Component"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors } from '../../functions';\nimport styles from '../panel_layout.module.css';\n\nexport default class PendingProcesses extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            result: {},\n            loading: false,\n            addNewProcess: true,//false,\n\n            userID: '',\n            type: '',\n            mainTopic: '',\n            title: '',\n            details: '',\n\n\n        };\n    };\n    componentDidMount() {\n\n    };\n    render() {\n        let results = [];\n        const keys = Object.keys(this.state.result).sort((a, b) => b - a);\n        for (let k = 0; k < keys.length; k++) {\n            const data = this.state.result[keys[k]];\n            results.push(\n                <>\n                    <div\n                        className={styles.previousMessageSum}\n                        onClick={() => {\n                            //this.setState({ currentData: data, index: k })\n                        }}>\n                        <div style={{ width: '90px', height: '30px', backgroundColor: data.type == 'rider' ? colors.GREEN : colors.BLUE, borderRadius: '5px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                            <p className={styles.readOrUnreadText} style={{ color: '#ffffff', fontFamily: 'Gilroy-ExtraBold' }}>{data.type == 'rider' ? 'Rider' : 'Driver'}</p>\n                        </div>\n\n                        <p style={{ fontSize: '105%', fontFamily: 'Gilroy-Bold', color: colors.GREEN }}>\n                            <span style={{ color: colors.GREY }}>{displayDate}</span>\n                        </p>\n                    </div>\n                    {\n                        k == keys.length - 1 ?\n                            <></> :\n                            <div className={styles.sharedLine} style={{ marginTop: '5px' }}></div>\n                    }\n                </>\n            )\n        };\n        const { addNewProcess } = this.state;\n        return (\n            <div className={styles.cont}>\n                <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                    <p className={styles.title} style={{ color: colors.BLACK }}>List of pending requests</p>\n                    {addNewProcess ?\n                        <>\n                            <div style={{ width: '90%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: '20px' }}>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"User ID\"\n                                    className={styles.searchInput}\n                                    style={{ width: '67%' }}\n                                    value={this.state.userID}\n                                    onChange={event => {\n                                        this.setState({ userID: event.target.value });\n                                    }}\n                                />\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Type\"\n                                    className={styles.searchInput}\n                                    style={{ width: '32%' }}\n                                    value={this.state.type}\n                                    onChange={event => {\n                                        this.setState({ type: event.target.value.toLowerCase() });\n                                    }}\n                                />\n                            </div>\n                            <input\n                                type=\"text\"\n                                placeholder=\"User ID\"\n                                className={styles.searchInput}\n                                style={{ width: '100%' }}\n                                value={this.state.mainTopic}\n                                onChange={event => {\n                                    this.setState({ mainTopic: event.target.value });\n                                }}\n                            />\n                        </>\n                        :\n                        <>\n\n                        </>\n                    }\n                </div>\n\n                <div className={styles.enterKilometerDiv}\n                    style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                    <div\n                        className={styles.button2}\n                        style={{ backgroundColor: colors.RED }}\n                        id={styles.buttonBottom}\n                        onClick={() => {\n\n                        }}>\n                        <p className={styles.buttonText1}>Cancel</p>\n                    </div>\n                    <div\n                        className={styles.button2}\n                        style={{ backgroundColor: colors.GREEN }}\n                        id={styles.buttonBottom}\n                        onClick={() => {\n\n                        }}>\n                        {this.state.loading ?\n                            <Loader\n                                type=\"TailSpin\"\n                                color={colors.WHITE}\n                                height={'20px'}\n                                width={'20px'} /> :\n                            <p className={styles.buttonText1}>Add Pending Process</p>}\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n};"]},"metadata":{},"sourceType":"module"}