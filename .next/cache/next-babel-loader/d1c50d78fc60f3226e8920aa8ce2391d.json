{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport EmailEditor from 'react-email-editor';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, sendUserEmail } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport Loader from 'react-loader-spinner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default class SendAnEmail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadResult\", () => {\n      if (this.state.userDetails) {}\n    });\n\n    _defineProperty(this, \"exportHtml\", () => {\n      this.emailEditor.current.editor.exportHtml(data => {\n        const {\n          design,\n          html\n        } = data;\n        console.log('exportHtml', html);\n      });\n    });\n\n    _defineProperty(this, \"onLoad\", () => {// you can load your template here;\n      // const templateJson = {};\n      // emailEditorRef.current.editor.loadDesign(templateJson);\n    });\n\n    this.state = {\n      email: '',\n      text: '',\n      subject: '',\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadResult();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.cont,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.container,\n        style: {\n          backgroundColor: colors.WHITE,\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          className: styles.title,\n          style: {\n            color: colors.BLACK,\n            marginBottom: '30px'\n          },\n          children: \"Send an Email\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter user's email\",\n          className: styles.contactUsEmail,\n          value: this.state.email,\n          onChange: event => {\n            this.setState({\n              email: event.target.value\n            });\n          }\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter subject\",\n          className: styles.contactUsEmail,\n          style: {\n            marginTop: '10px'\n          },\n          value: this.state.subject,\n          onChange: event => {\n            this.setState({\n              subject: event.target.value\n            });\n          }\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.sharedLine\n        }), /*#__PURE__*/_jsx(\"textarea\", {\n          type: \"text\",\n          placeholder: \"Enter your message here\",\n          className: styles.contactUsContent //style={{ width: '100%' }}\n          ,\n          value: this.state.text,\n          onChange: event => {\n            this.setState({\n              text: event.target.value\n            });\n          }\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.enterKilometerDiv,\n        style: {\n          marginTop: '20px',\n          marginBottom: '150px',\n          marginLeft: '2.5%',\n          width: '95%'\n        },\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: styles.button2,\n          style: {\n            backgroundColor: colors.GREEN,\n            width: '100%',\n            maxWidth: 'initial'\n          },\n          id: styles.buttonBottom,\n          onClick: () => {\n            const {\n              text,\n              subject,\n              email\n            } = this.state;\n            if (text.length < 15) alert('Please enter a good amount of information for user');else if (subject.length < 5) alert('Please a proper subject');else if (email.length < 5) alert('Please enter correct email address');else {\n              this.setState({\n                loading: true\n              }, () => {\n                sendUserEmail.call(this, email, subject, text);\n              });\n            }\n          },\n          children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n            type: \"TailSpin\",\n            color: colors.WHITE,\n            height: '15px',\n            width: '15px'\n          }) : /*#__PURE__*/_jsx(\"p\", {\n            className: styles.buttonText1,\n            children: \"Send Email\"\n          })\n        })\n      })]\n    });\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/ugo/Documents/Perch_Projects/Perch-Website/functions/panels/adminPanels/sendAnEmail.js"],"names":["React","EmailEditor","colors","sendUserEmail","styles","Loader","SendAnEmail","Component","constructor","props","state","userDetails","emailEditor","current","editor","exportHtml","data","design","html","console","log","email","text","subject","loading","componentDidMount","loadResult","render","cont","container","backgroundColor","WHITE","marginTop","title","color","BLACK","marginBottom","contactUsEmail","event","setState","target","value","sharedLine","contactUsContent","enterKilometerDiv","marginLeft","width","button2","GREEN","maxWidth","buttonBottom","length","alert","call","buttonText1"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport EmailEditor from 'react-email-editor';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, sendUserEmail } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport Loader from 'react-loader-spinner';\n\nexport default class SendAnEmail extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            text: '',\n            subject: '',\n            loading: false,\n        };\n    }\n    componentDidMount() {\n        this.loadResult();\n    }\n    loadResult = () => {\n        if (this.state.userDetails) {\n\n        }\n    };\n    exportHtml = () => {\n        this.emailEditor.current.editor.exportHtml((data) => {\n            const { design, html } = data;\n            console.log('exportHtml', html);\n        });\n    };\n    onLoad = () => {\n        // you can load your template here;\n        // const templateJson = {};\n        // emailEditorRef.current.editor.loadDesign(templateJson);\n    };\n    render() {\n        return (\n            <div className={styles.cont}>\n                <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                    <p className={styles.title} style={{ color: colors.BLACK, marginBottom: '30px' }}>Send an Email</p>\n                    {/* <EmailEditor\n                        ref={(ref) => this.emailEditor = ref}\n                        style={{ width: '80%' }}\n                        onLoad={this.onLoad}\n                    /> */}\n\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter user's email\"\n                        className={styles.contactUsEmail}\n                        value={this.state.email}\n                        onChange={event => { this.setState({ email: event.target.value }) }}\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter subject\"\n                        className={styles.contactUsEmail}\n                        style={{ marginTop: '10px' }}\n                        value={this.state.subject}\n                        onChange={event => { this.setState({ subject: event.target.value }) }}\n                    />\n                    <div className={styles.sharedLine}></div>\n                    <textarea\n                        type=\"text\"\n                        placeholder=\"Enter your message here\"\n                        className={styles.contactUsContent}\n                        //style={{ width: '100%' }}\n                        value={this.state.text}\n                        onChange={event => { this.setState({ text: event.target.value }) }}\n                    />\n                </div>\n                <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                    <div\n                        className={styles.button2}\n                        style={{ backgroundColor: colors.GREEN, width: '100%', maxWidth: 'initial' }}\n                        id={styles.buttonBottom}\n                        onClick={() => {\n                            const { text, subject, email } = this.state;\n                            if (text.length < 15)\n                                alert('Please enter a good amount of information for user')\n                            else if (subject.length < 5)\n                                alert('Please a proper subject')\n                            else if (email.length < 5)\n                                alert('Please enter correct email address')\n                            else {\n                                this.setState({ loading: true }, () => {\n                                    sendUserEmail.call(this, email, subject, text);\n                                });\n                            }\n\n                        }}>\n                        {this.state.loading ?\n                            <Loader\n                                type=\"TailSpin\"\n                                color={colors.WHITE}\n                                height={'15px'}\n                                width={'15px'} /> :\n                            <p className={styles.buttonText1}>Send Email</p>}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n};"]},"metadata":{},"sourceType":"module"}