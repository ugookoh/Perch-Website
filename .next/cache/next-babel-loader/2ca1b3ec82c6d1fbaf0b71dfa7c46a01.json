{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport firebase from 'firebase';\nimport Router from 'next/router';\nimport axios from 'axios';\nexport function signIn(email, password, type) {\n  this.setState({\n    error: false,\n    errorMessage: '',\n    loading: true\n  }, () => {\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n      firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\n        if (type == 'user') {\n          const userID = firebase.auth().currentUser.uid;\n          firebase.database().ref(`users/${userID}`).once('value', snapshot => {\n            if (snapshot.val().summarizedHistory.phoneVerified == true) Router.push('/s/db/udash').then(() => window.scrollTo(0, 0));else this.setState({\n              displayVerification: true,\n              loading: false,\n              userDetails: snapshot.val(),\n              error: false\n            }, () => {\n              //send a verification phonenumber\n              sendVerification(userID, 'phoneNumber', 'storeAndSend', 'nocode', snapshot.val().phoneNumber, snapshot.val().email, snapshot.val().firstName);\n              firebase.auth().signOut().catch(error => {\n                console.log(error.message);\n              });\n            });\n          }).catch(error => {\n            this.setState({\n              error: true,\n              errorMessage: error.message,\n              loading: false\n            });\n          });\n        } else if (type == 'driver') {\n          const userID = firebase.auth().currentUser.uid;\n          firebase.database().ref(`users/${userID}`).once('value', snapshot => {\n            if (snapshot.val().summarizedHistory.phoneVerified == true && snapshot.val().summarizedHistory.emailVerified == true) firebase.database().ref(`users/${userID}/driverVerified`).once('value', snap => {\n              if (snap.val() == 'VERIFIED') Router.push('/s/db/ddash').then(() => window.scrollTo(0, 0));else Router.push('/s/db/d_app_dash').then(() => window.scrollTo(0, 0));\n            }).catch(error => {\n              console.log(error.message);\n            });else {\n              this.setState({\n                displayVerification: true,\n                loading: false,\n                userDetails: snapshot.val(),\n                phoneVerified: snapshot.val().summarizedHistory.phoneVerified,\n                emailVerified: snapshot.val().summarizedHistory.emailVerified,\n                error: false\n              }, () => {\n                //send an email or phonenumber verification\n                if (!snapshot.val().summarizedHistory.phoneVerified) sendVerification(userID, 'phoneNumber', 'storeAndSend', 'nocode', snapshot.val().phoneNumber, snapshot.val().email, snapshot.val().firstName);\n                if (!snapshot.val().summarizedHistory.emailVerified) sendVerification(userID, 'email', 'storeAndSend', 'nocode', snapshot.val().phoneNumber, snapshot.val().email, snapshot.val().firstName);\n                firebase.auth().signOut().catch(error => {\n                  console.log(error.message);\n                });\n              });\n            }\n          }).catch(error => {\n            console.log(error.message);\n          });\n        }\n      }).catch(error => {\n        this.setState({\n          error: true,\n          errorMessage: error.message,\n          loading: false\n        });\n      });\n    }).catch(error => {\n      this.setState({\n        error: true,\n        errorMessage: error.message,\n        loading: false\n      });\n    });\n  });\n}\n;\nexport function adminSignIn(email, password) {\n  this.setState({\n    error: false,\n    errorMessage: '',\n    loading: true\n  }, () => {\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n      firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\n        const userID = firebase.auth().currentUser.uid;\n        firebase.database().ref(`adminAuthorized/${userID}`).once('value', snapshot => {\n          if (snapshot.val()) Router.push('/admin/dash').then(() => window.scrollTo(0, 0));else this.setState({\n            error: true,\n            errorMessage: 'You do not have access to this portion of the site. Please contact us for help. Excess unauthorized logins might result in an IP block.',\n            loading: false\n          }, () => {\n            firebase.auth().signOut().catch(error => {\n              console.log(error.message);\n            });\n          });\n        }).catch(error => {\n          console.log(error.message);\n        });\n      }).catch(error => {\n        this.setState({\n          error: true,\n          errorMessage: error.message,\n          loading: false\n        });\n      });\n    }).catch(error => {\n      this.setState({\n        error: true,\n        errorMessage: error.message,\n        loading: false\n      });\n    });\n  });\n}\n;\nexport function signUp(firstName, lastName, email, countryCode, phoneNumber, password, isDriver, referralCode) {\n  this.setState({\n    error: false,\n    errorMessage: '',\n    loading: true\n  }, () => {\n    axios.post(`https://us-central1-perch-01.cloudfunctions.net/checkIfPhoneNumberIsFree`, {\n      phoneNumber: `+${countryCode}${phoneNumber}`\n    }).then(r => {\n      if (r.data) {\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n          const userID = firebase.auth().currentUser.uid;\n          axios.post('https://us-central1-perch-01.cloudfunctions.net/createUserDetails', {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            phoneNumber: `+${countryCode}${phoneNumber}`,\n            userID: userID,\n            isDriver: isDriver,\n            referralCode: referralCode\n          }).then(() => {\n            firebase.database().ref(`users/${userID}`).once('value', snapshot => {\n              firebase.auth().signOut().catch(error => {\n                console.log(error.message);\n              });\n              this.setState({\n                displayVerification: true,\n                loading: false,\n                error: false,\n                userDetails: snapshot.val()\n              });\n            }).catch(error => {\n              this.setState({\n                error: true,\n                errorMessage: error.message\n              });\n            });\n          }).catch(error => {\n            this.setState({\n              errorMessage: error.message,\n              loading: false\n            });\n          });\n        }).catch(error => {\n          this.setState({\n            error: true,\n            errorMessage: error.message,\n            loading: false\n          });\n        });\n      } else this.setState({\n        error: true,\n        errorMessage: 'This phone number is currently registered with another account, contact us for help',\n        loading: false\n      });\n    }).catch(error => {\n      this.setState({\n        error: true,\n        errorMessage: error.message,\n        loading: false\n      });\n    });\n  });\n}\n;\nexport function signOut(doNotReroute) {\n  firebase.auth().signOut().then(() => {\n    if (!doNotReroute) Router.push('/');\n  }).catch(error => {\n    console.log(error.message);\n  });\n}\n;\nexport function sendVerification(userID, type, action, code, phoneNumber, email, name) {\n  axios.post(`https://us-central1-perch-01.cloudfunctions.net/sendVerificationCode`, {\n    userID: userID,\n    type: type,\n    action: action,\n    code: code,\n    phoneNumber: phoneNumber,\n    email: email,\n    name: name\n  }).then(r => {\n    const result = r.data;\n\n    if (action == 'check') {\n      if (result) {\n        if (type == 'phoneNumber') this.setState({\n          phoneVerified: true,\n          verificationPhoneLoader: false\n        });else if (type == 'email') this.setState({\n          emailVerified: true,\n          verificationEmailLoader: false\n        });\n      } else {\n        if (type == 'phoneNumber') this.setState({\n          verificationPhoneLoader: false\n        });else if (type == 'email') this.setState({\n          verificationEmailLoader: false\n        });\n        this.setState({\n          error: true,\n          errorMessage: 'The verification code was not correct. Please check again or click resend.'\n        });\n      }\n    }\n  }); //.catch((error) => { this.setState({ error: true, errorMessage: error.message }) })\n}\n;\nexport function changeEmailOrPhoneNumber(type, userID, phoneNumber, email) {\n  axios.post(`https://us-central1-perch-01.cloudfunctions.net/changeEmailOrPhoneNumber`, {\n    userID: userID,\n    email: email,\n    type: type,\n    phoneNumber: phoneNumber\n  }).then(r => {\n    this.setState({\n      userDetails: r.data,\n      changeEmail_PhoneNumber: false,\n      error: false,\n      errorMessage: '',\n      changeEmailLoader: false,\n      changePhoneLoader: false\n    });\n  }).catch(error => {\n    this.setState({\n      error: true,\n      errorMessage: `${error.message}, this field might already be in use by another user`\n    });\n  });\n}\n;\nexport function sendFeedback() {\n  if (this.state.topic == 'unselected') this.setState({\n    errorMessage: 'A topic is needed. Please pick a topic to contact us about. If you do not have one, please pick \"Other\"'\n  });else if (this.state.message == '') this.setState({\n    errorMessage: 'Please enter a message'\n  });else {\n    this.setState({\n      loading: true\n    }, () => {\n      if (this.state.userDetails) {\n        const ref = this.state.userDetails.driverID ? `driverFeedback/${this.state.userDetails.driverID}` : `userFeedback/${this.state.userDetails.userID}`;\n        firebase.database().ref(ref).update({\n          [new Date().getTime()]: {\n            body: this.state.message,\n            subject: this.state.topic,\n            status: 'UNPROCESSED',\n            date: getDate(),\n            timestamp: new Date().getTime()\n          }\n        }).then(() => {\n          this.setState({\n            topic: 'unselected',\n            message: '',\n            loading: false\n          }, () => {\n            this.loadResult();\n          });\n        }).catch(error => {\n          console.log(error.message);\n        });\n      } else axios.post(`https://us-central1-perch-01.cloudfunctions.net/guestSendFeedback`, {\n        body: this.state.message,\n        subject: this.state.topic,\n        status: 'UNPROCESSED',\n        date: getDate(),\n        email: this.state.userEmail,\n        timestamp: new Date().getTime(),\n        nonUser: true,\n        case: 'send'\n      }).then(() => {\n        this.setState({\n          topic: 'unselected',\n          message: '',\n          loading: false\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n    });\n  }\n}\n;\nexport function changePassword(email_, oldPassword, newPassword) {\n  this.setState({\n    loading: true\n  }, () => {\n    const email = email_;\n    const password = oldPassword;\n    firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\n      firebase.auth().currentUser.updatePassword(newPassword).then(() => {\n        this.setState({\n          loading: false,\n          toShow: 'default',\n          currentPassword: '',\n          newPassword: '',\n          confirmNewPassword: ''\n        });\n      }).catch(error => this.setState({\n        errorMessage: error.message,\n        loading: false,\n        newPassword: '',\n        confirmNewPassword: ''\n      }));\n    }).catch(error => this.setState({\n      errorMessage: error.message,\n      loading: false,\n      newPassword: '',\n      confirmNewPassword: ''\n    }));\n  });\n}\n;\nexport function deleteAccount(email, password) {\n  this.setState({\n    loading: true\n  }, () => {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\n      const user = firebase.auth().currentUser;\n      const userID = user.uid;\n      user.delete().then(() => {\n        axios.post(`https://us-central1-perch-01.cloudfunctions.net/deleteUser`, {\n          userID: userID,\n          deleteAccountReason: this.state.deleteAccountReason,\n          userDetails: this.state.userDetails\n        }).catch(error => {\n          alert(error.message);\n        });\n      }).catch(error => this.setState({\n        errorMessage: error.message,\n        loading: false,\n        password1: ''\n      }));\n    }).catch(error => this.setState({\n      errorMessage: error.message,\n      loading: false,\n      password1: ''\n    }));\n  });\n}\n;\nexport function sendPasswordResetLink(email) {\n  firebase.auth().sendPasswordResetEmail(email).then(() => {\n    this.setState({\n      error: false,\n      errorMessage: '',\n      forgotPassword: false\n    });\n  }).catch(error => {\n    this.setState({\n      error: true,\n      errorMessage: error.message\n    });\n  });\n}\n;\nexport function sendEmail(name, email, type, subject) {\n  axios.post(`https://us-central1-perch-01.cloudfunctions.net/sendVerificationEmail`, {\n    name: name,\n    email: email,\n    type: type,\n    subject: subject\n  }).catch(error => {\n    console.log(error.message);\n  });\n}\n;\nexport function resetPassword(code, newPassword, email) {\n  this.setState({\n    errorMessage: '',\n    loading: true\n  }, () => {\n    firebase.auth().confirmPasswordReset(code, newPassword).then(() => {\n      firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n        firebase.auth().signInWithEmailAndPassword(email, newPassword).then(() => {\n          const userID = firebase.auth().currentUser.uid;\n          firebase.database().ref(`users/${userID}/firstName`).once('value', snap => {\n            sendEmail(snap.val(), email, 'passwordHasBeenReset', 'Password has been reset');\n          }).catch(error => {\n            console.log(error.message);\n          });\n        }).catch(error => {\n          console.log(error.message);\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n      Router.push('/'); //send an email that password has been set \n    }).catch(() => {\n      this.setState({\n        errorMessage: 'The link is no longer valid, please go to the login page and request a new password reset link',\n        loading: false\n      });\n    });\n  });\n}\n;\nexport function validateVehicle(userID, timestamp, dateFormat) {\n  axios.post(`https://us-central1-perch-01.cloudfunctions.net/validateVehicle`, {\n    userID: userID,\n    timestamp: timestamp,\n    dateFormat: dateFormat\n  }).catch(error => {\n    alert(error.message);\n  });\n}\n;\nexport function replyFeedback(response, riderOrDriver, senderID, timestamp) {\n  const ref = riderOrDriver == 'Rider' ? `userFeedback/${senderID}/${timestamp}` : `driverFeedback/${senderID}/${timestamp}`;\n  const nonUser = this.state.toShow.nonUser;\n  if (nonUser) axios.post(`https://us-central1-perch-01.cloudfunctions.net/guestSendFeedback`, {\n    email: this.state.toShow.email,\n    subject: `Re:[${this.state.toShow.subject}]`,\n    response: response,\n    case: 'reply'\n  }).catch(error => {\n    alert(error.message);\n  });\n  firebase.database().ref(ref).update({\n    response: response,\n    status: 'PROCESSED',\n    responseDate: getDate()\n  }).then(() => {\n    this.setState({\n      responseDate: new Date().getTime(),\n      showResponse: true\n    });\n  }).catch(error => {\n    alert(error.message);\n  });\n}\n;\nexport function sendUserEmail(email, subject, text) {\n  axios.post(`https://us-central1-perch-01.cloudfunctions.net/sendEmail`, {\n    email: email,\n    subject: subject,\n    text: text\n  }).then(() => {\n    this.setState({\n      email: '',\n      subject: '',\n      text: '',\n      loading: false\n    });\n  }).catch(error => {\n    alert(error.message);\n    this.setState({\n      loading: false\n    });\n  });\n}\nexport function validateDriver(userID, timestamp, dateFormat) {\n  axios.post(`https://us-central1-perch-01.cloudfunctions.net/validateDriver`, {\n    userID: userID,\n    timestamp: timestamp,\n    dateFormat: dateFormat\n  }).then(() => {\n    this.loadResult();\n    this.setState({\n      showDocs: false,\n      vehicle: {},\n      verified: []\n    });\n  }).catch(error => {\n    alert(error.message);\n  });\n}\n; //MAKE A RANDOMID\n\nexport function makeid(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n}\n;\nexport function driverApplicationAdvance() {\n  const {\n    selected\n  } = this.state;\n\n  switch (selected.stage) {\n    case 'three':\n      {\n        firebase.database().ref(`driverApplications/${selected.userID}`).update({\n          progress: JSON.stringify([\"done\", \"done\", \"done\", \"ongoing\", \"undone\"]),\n          stage: \"four\"\n        }).then(() => {\n          //MAKE ARRANGEMENTS TO SEND DRIVER AN OFFER LETTER\n          this.setState({\n            showDocs: false\n          }, () => {\n            this.loadResult();\n          });\n        }).catch(error => {\n          alert(error.message);\n        });\n      }\n      break;\n\n    case 'four':\n      {\n        //THE INDEPENNDENT CONTRACTOR DOCUMENT HAS BEEN SIGNED AND WE ARE GOOD TO GO\n        firebase.database().ref(`driverApplications/${selected.userID}`).update({\n          progress: JSON.stringify([\"done\", \"done\", \"done\", \"done\", \"done\"]),\n          stage: \"five\"\n        }).then(() => {\n          this.setState({\n            showDocs: false\n          }, () => {\n            this.loadResult();\n          });\n        }).catch(error => {\n          alert(error.message);\n        });\n      }\n      break;\n  }\n\n  ;\n}\nexport function getDate() {\n  const DAY = new Date().getDate();\n  const MONTH = new Date().getMonth();\n  const YEAR = new Date().getFullYear();\n  const HOUR = new Date().getHours();\n  const MIN = new Date().getMinutes();\n  const SECOND = new Date().getSeconds();\n  return `${YEAR}-${MONTH}-${DAY}-${HOUR}-${MIN}-${SECOND}`;\n}\n;\nexport function dateformat(time) {\n  let slash1 = 0,\n      slash2 = 0,\n      slash3 = 0;\n\n  for (let k = 0; k < time.length; k++) {\n    if (time.charAt(k) == '-') slash1 == 0 ? slash1 = k : slash2 == 0 ? slash2 = k : slash3 = k;\n    if (slash3 != 0) break;\n  }\n\n  ;\n  const y = time.substring(0, slash1);\n  const m = time.substring(slash1 + 1, slash2);\n  const d = time.substring(slash2 + 1, slash3);\n  return `${d}/${Number(m) + 1}/${y}`;\n}\n;\nexport function polylineLenght(data) {\n  let distance = 0;\n\n  for (let k = 0; k < data.length - 1; k++) distance += distanceCalculator(data[k][0], data[k][1], data[k + 1][0], data[k + 1][1]);\n\n  return distance;\n}\n;\nexport function timeAndDate(time, month, year) {\n  let slash1 = 0,\n      slash2 = 0,\n      slash3 = 0;\n\n  for (let k = 0; k < time.length; k++) {\n    if (time.charAt(k) == '-') slash1 == 0 ? slash1 = k : slash2 == 0 ? slash2 = k : slash3 = k;\n  }\n\n  const HOUR = Number(time.substring(slash1 + 1, slash2)) == 0 ? 12 : Number(time.substring(slash1 + 1, slash2)) > 12 ? Number(time.substring(slash1 + 1, slash2)) - 12 : Number(time.substring(slash1 + 1, slash2));\n  const MIN = Number(time.substring(slash2 + 1, slash3)) < 10 ? `0` + time.substring(slash2 + 1, slash3) : Number(time.substring(slash2 + 1, slash3));\n  const MERIDIAN = Number(time.substring(slash1 + 1, slash2)) < 12 ? 'AM' : 'PM';\n  const DAY = time.substring(0, slash1);\n  const MONTH = M.indexOf(month) + 1;\n  const formattedDate = `${DAY}/${MONTH}/${year}, ${HOUR}:${MIN} ${MERIDIAN}`;\n  return formattedDate;\n}\n;\nexport function distanceCalculator(lat1, lon1, lat2, lon2) {\n  let R = 6371 * 1000; // Radius of the earth in m\n\n  let dLat = deg2rad(lat2 - lat1); // deg2rad below\n\n  let dLon = deg2rad(lon2 - lon1);\n  let a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  let d = R * c; // Distance in m\n\n  return d;\n}\n;\nexport function emailFormat(email, type) {\n  //@ is stored as -(hyphen)\n  //. is stored as _(underscore)\n  switch (type) {\n    case 'emailToString':\n      {\n        return email.replace('@', '-').replace('.', '_');\n      }\n      break;\n\n    case 'stringToEmail':\n      {\n        return email.replace('-', '@').replace('_', '.');\n      }\n      break;\n  }\n}\n;\n\nfunction deg2rad(deg) {\n  return deg * (Math.PI / 180);\n}\n\n;\n\nfunction formatAMPM(date) {\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var ampm = hours >= 12 ? 'pm' : 'am';\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n\n  minutes = minutes < 10 ? '0' + minutes : minutes;\n  var strTime = hours + ':' + minutes + ' ' + ampm;\n  return strTime;\n}\n\n;\nexport function dateOfQuery(timestamp) {\n  return `${formatAMPM(new Date(timestamp)).toUpperCase()} ${('0' + new Date(timestamp).getDate()).slice(-2)}/${('0' + (new Date(timestamp).getMonth() + 1)).slice(-2)}/${new Date(timestamp).getFullYear()}`;\n}\n;\nexport const M = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport const colors = {\n  GREEN: \"#4EB848\",\n  WHITE: \"#FFFFFF\",\n  GREY: \"#959AAC\",\n  BLACK: \"#000000\",\n  RED: \"#FF0000\",\n  BLUE_TEXT: \"#284ED6\",\n  BLUE: \"#1970A7\",\n  PURPLE: \"#A031AF\",\n  YELLOW: \"#F0E23D\",\n  GOLD: \"#FFAA00\"\n};\nexport function isNumber(n) {\n  return !isNaN(parseFloat(n)) && !isNaN(n - 0);\n}\n;\nexport function deleteCard(userID, last4, selected) {\n  axios.post(`https://us-central1-perch-01.cloudfunctions.net/deleteStripeCard`, {\n    userID: userID,\n    last4: last4,\n    selected: selected\n  }).catch(error => {\n    console.log(error.message);\n  });\n}\n;\nexport function storeCard(userID, cardObject, setLoading, setErrorMessage, cancel) {\n  let c = cardObject;\n  c.card.cardId = cardObject.card.id;\n  axios.post(`https://us-central1-perch-01.cloudfunctions.net/storeStripeCard`, {\n    userID: userID,\n    cardObject: c\n  }).then(() => {\n    cancel();\n  }).catch(error => {\n    setLoading(false);\n    setErrorMessage(error.message);\n  });\n}\n;\nexport function buyKilometers(toSend) {\n  this.setState({\n    paymentLoading: true\n  }, () => {\n    axios.post(`https://us-central1-perch-01.cloudfunctions.net/buyPerchKilometers`, _objectSpread(_objectSpread({}, toSend), {}, {\n      status: 'initial'\n    })).then(result => {\n      const {\n        status,\n        client_secret,\n        id\n      } = result.data;\n      toSend.paymentIntentId = id;\n      toSend.status = 'confirm_payment';\n\n      if (status == 'succeeded') {\n        this.setState({\n          paymentCompleted: true\n        });\n      } else if (status == 'requires_action') {\n        stripe.authenticatePaymentIntent({\n          clientSecret: client_secret\n        }).then(data => {\n          if (data.status == 'requires_confirmation') {\n            axios.post(`https://us-central1-perch-01.cloudfunctions.net/buyPerchKilometers`, _objectSpread(_objectSpread({}, toSend), {}, {\n              paymentIntentId: id,\n              status: 'confirm_payment'\n            })).then(result_ => {\n              const status_ = result_.data.status;\n\n              if (status_ == 'succeeded') {\n                this.setState({\n                  paymentCompleted: true\n                });\n              }\n            }).catch(error => {\n              this.setState({\n                paymentError: true,\n                paymentErrorMessage: error.message\n              });\n            });\n          }\n        }).catch(error => {\n          this.setState({\n            paymentError: true,\n            paymentErrorMessage: error.message\n          });\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        paymentError: true,\n        paymentErrorMessage: error.message\n      });\n    });\n  });\n}\n;\nexport function formatDateAllValues(d) {\n  return d.getFullYear().toString() + \"/\" + ((d.getMonth() + 1).toString().length == 2 ? (d.getMonth() + 1).toString() : \"0\" + (d.getMonth() + 1).toString()) + \"/\" + (d.getDate().toString().length == 2 ? d.getDate().toString() : \"0\" + d.getDate().toString()) + \" - \" + formatAMPM(d).toUpperCase();\n}\n;\nexport function millisToMinutesAndSeconds(millis) {\n  var minutes = Math.floor(millis / 60000);\n  var seconds = (millis % 60000 / 1000).toFixed(0);\n  return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\n}\n;\nexport function cancelledTripResolver(toSend) {\n  axios.post(`https://us-central1-perch-01.cloudfunctions.net/cancelledTripResolver`, toSend).then(() => {\n    let newResult = this.state.result;\n    delete newResult[toSend.cancelled_UNRESOLVED_KEY];\n    this.setState({\n      currentData: null,\n      refundRiderAmount: '',\n      refundRiderPerchKms: '',\n      payFirstDriver: '',\n      paySecondDriver: '',\n      payThirdDriver: '',\n      adminCut: '',\n      result: newResult,\n      loading: false\n    });\n  }).catch(error => {\n    alert(error.message);\n  });\n}\n;\nexport function pendingProcessesFunction(toSend) {\n  this.setState({\n    loading: true,\n    errorMessage: ''\n  }, () => {\n    axios.post(`https://us-central1-perch-01.cloudfunctions.net/pendingProcesses`, toSend).then(data => {\n      let newV = toSend.isNewProcess ? [] : this.state.listOfProcesses;\n      const time = new Date().getTime();\n      newV.push({\n        title: toSend.title,\n        details: toSend.details,\n        timeCreated: time\n      });\n      this.setState({\n        addProcess: false,\n        isNewProcess: false,\n        viewList: true,\n        pushId: data.data,\n        title: '',\n        details: '',\n        loading: false,\n        listOfProcesses: newV\n      }, () => {\n        if (toSend.isNewProcess) this.setState({\n          timeCreated: time\n        });\n      });\n    }).catch(error => {\n      alert(error.message);\n    });\n  });\n}\n;\nexport function pendingProcessesFunctionDelete(pushId) {\n  this.setState({\n    loading1: true\n  }, () => {\n    axios.post(`https://us-central1-perch-01.cloudfunctions.net/pendingProcessesDelete`, {\n      pushId: pushId\n    }).then(() => {\n      let newV = _objectSpread({}, this.state.result);\n\n      delete newV[pushId];\n      this.setState({\n        result: newV,\n        loading1: false,\n        addProcess: false,\n        isNewProcess: false,\n        viewList: false,\n        pushId: '',\n        userID: '',\n        type: '',\n        listOfProcesses: [],\n        mainTopic: '',\n        title: '',\n        details: '',\n        errorMessage: ''\n      });\n    }).catch(error => {\n      alert(error.message);\n    });\n  });\n}\n;","map":{"version":3,"sources":["/Users/ugo/Documents/Perch_Projects/Perch-Website/functions/functions.js"],"names":["firebase","Router","axios","signIn","email","password","type","setState","error","errorMessage","loading","auth","setPersistence","Auth","Persistence","LOCAL","then","signInWithEmailAndPassword","userID","currentUser","uid","database","ref","once","snapshot","val","summarizedHistory","phoneVerified","push","window","scrollTo","displayVerification","userDetails","sendVerification","phoneNumber","firstName","signOut","catch","console","log","message","emailVerified","snap","adminSignIn","signUp","lastName","countryCode","isDriver","referralCode","post","r","data","createUserWithEmailAndPassword","doNotReroute","action","code","name","result","verificationPhoneLoader","verificationEmailLoader","changeEmailOrPhoneNumber","changeEmail_PhoneNumber","changeEmailLoader","changePhoneLoader","sendFeedback","state","topic","driverID","update","Date","getTime","body","subject","status","date","getDate","timestamp","loadResult","userEmail","nonUser","case","changePassword","email_","oldPassword","newPassword","updatePassword","toShow","currentPassword","confirmNewPassword","deleteAccount","user","delete","deleteAccountReason","alert","password1","sendPasswordResetLink","sendPasswordResetEmail","forgotPassword","sendEmail","resetPassword","confirmPasswordReset","validateVehicle","dateFormat","replyFeedback","response","riderOrDriver","senderID","responseDate","showResponse","sendUserEmail","text","validateDriver","showDocs","vehicle","verified","makeid","length","characters","charactersLength","i","charAt","Math","floor","random","driverApplicationAdvance","selected","stage","progress","JSON","stringify","DAY","MONTH","getMonth","YEAR","getFullYear","HOUR","getHours","MIN","getMinutes","SECOND","getSeconds","dateformat","time","slash1","slash2","slash3","k","y","substring","m","d","Number","polylineLenght","distance","distanceCalculator","timeAndDate","month","year","MERIDIAN","M","indexOf","formattedDate","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","a","sin","cos","c","atan2","sqrt","emailFormat","replace","deg","PI","formatAMPM","hours","minutes","ampm","strTime","dateOfQuery","toUpperCase","slice","colors","GREEN","WHITE","GREY","BLACK","RED","BLUE_TEXT","BLUE","PURPLE","YELLOW","GOLD","isNumber","n","isNaN","parseFloat","deleteCard","last4","storeCard","cardObject","setLoading","setErrorMessage","cancel","card","cardId","id","buyKilometers","toSend","paymentLoading","client_secret","paymentIntentId","paymentCompleted","stripe","authenticatePaymentIntent","clientSecret","result_","status_","paymentError","paymentErrorMessage","formatDateAllValues","toString","millisToMinutesAndSeconds","millis","seconds","toFixed","cancelledTripResolver","newResult","cancelled_UNRESOLVED_KEY","currentData","refundRiderAmount","refundRiderPerchKms","payFirstDriver","paySecondDriver","payThirdDriver","adminCut","pendingProcessesFunction","newV","isNewProcess","listOfProcesses","title","details","timeCreated","addProcess","viewList","pushId","pendingProcessesFunctionDelete","loading1","mainTopic"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\nimport Router from 'next/router';\nimport axios from 'axios';\n\nexport function signIn(email, password, type) {\n    this.setState({ error: false, errorMessage: '', loading: true }, () => {\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n            firebase.auth().signInWithEmailAndPassword(email, password)\n                .then(() => {\n                    if (type == 'user') {\n                        const userID = firebase.auth().currentUser.uid;\n                        firebase.database().ref(`users/${userID}`).once('value', snapshot => {\n                            if (snapshot.val().summarizedHistory.phoneVerified == true)\n                                Router.push('/s/db/udash').then(() => window.scrollTo(0, 0));\n                            else\n                                this.setState({ displayVerification: true, loading: false, userDetails: snapshot.val(), error: false }, () => {\n                                    //send a verification phonenumber\n                                    sendVerification(userID, 'phoneNumber', 'storeAndSend', 'nocode', snapshot.val().phoneNumber, snapshot.val().email, snapshot.val().firstName,);\n                                    firebase.auth().signOut().catch(error => { console.log(error.message) })\n                                });\n                        }).catch(error => { this.setState({ error: true, errorMessage: error.message, loading: false, }) });\n                    }\n                    else if (type == 'driver') {\n                        const userID = firebase.auth().currentUser.uid;\n                        firebase.database().ref(`users/${userID}`).once('value', snapshot => {\n                            if (snapshot.val().summarizedHistory.phoneVerified == true && snapshot.val().summarizedHistory.emailVerified == true)\n                                firebase.database().ref(`users/${userID}/driverVerified`).once('value', snap => {\n                                    if (snap.val() == 'VERIFIED')\n                                        Router.push('/s/db/ddash').then(() => window.scrollTo(0, 0));\n                                    else\n                                        Router.push('/s/db/d_app_dash').then(() => window.scrollTo(0, 0));\n                                }).catch(error => { console.log(error.message) })\n                            else {\n                                this.setState({\n                                    displayVerification: true,\n                                    loading: false, userDetails: snapshot.val(),\n                                    phoneVerified: snapshot.val().summarizedHistory.phoneVerified,\n                                    emailVerified: snapshot.val().summarizedHistory.emailVerified,\n                                    error: false,\n                                }, () => {\n                                    //send an email or phonenumber verification\n                                    if (!snapshot.val().summarizedHistory.phoneVerified)\n                                        sendVerification(userID, 'phoneNumber', 'storeAndSend', 'nocode', snapshot.val().phoneNumber, snapshot.val().email, snapshot.val().firstName,);\n                                    if (!snapshot.val().summarizedHistory.emailVerified)\n                                        sendVerification(userID, 'email', 'storeAndSend', 'nocode', snapshot.val().phoneNumber, snapshot.val().email, snapshot.val().firstName,);\n\n                                    firebase.auth().signOut().catch(error => { console.log(error.message) })\n                                });\n                            }\n                        }).catch(error => { console.log(error.message) });\n                    }\n                })\n                .catch(error => { this.setState({ error: true, errorMessage: error.message, loading: false }) });\n        }).catch(error => { this.setState({ error: true, errorMessage: error.message, loading: false }) });\n    })\n};\nexport function adminSignIn(email, password) {\n    this.setState({ error: false, errorMessage: '', loading: true }, () => {\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n            firebase.auth().signInWithEmailAndPassword(email, password)\n                .then(() => {\n                    const userID = firebase.auth().currentUser.uid;\n                    firebase.database().ref(`adminAuthorized/${userID}`)\n                        .once('value', snapshot => {\n                            if (snapshot.val())\n                                Router.push('/admin/dash').then(() => window.scrollTo(0, 0));\n                            else\n                                this.setState({ error: true, errorMessage: 'You do not have access to this portion of the site. Please contact us for help. Excess unauthorized logins might result in an IP block.', loading: false }, () => {\n                                    firebase.auth().signOut().catch(error => { console.log(error.message) });\n                                })\n                        })\n                        .catch(error => { console.log(error.message) })\n                })\n                .catch(error => { this.setState({ error: true, errorMessage: error.message, loading: false }) });\n        }).catch(error => { this.setState({ error: true, errorMessage: error.message, loading: false }) });\n    })\n};\nexport function signUp(firstName, lastName, email, countryCode, phoneNumber, password, isDriver, referralCode) {\n\n    this.setState({ error: false, errorMessage: '', loading: true }, () => {\n        axios.post(`https://us-central1-perch-01.cloudfunctions.net/checkIfPhoneNumberIsFree`, { phoneNumber: `+${countryCode}${phoneNumber}` })\n            .then(r => {\n                if (r.data) {\n                    firebase.auth().createUserWithEmailAndPassword(email, password)\n                        .then(() => {\n                            const userID = firebase.auth().currentUser.uid;\n                            axios.post('https://us-central1-perch-01.cloudfunctions.net/createUserDetails', {\n                                firstName: firstName,\n                                lastName: lastName,\n                                email: email,\n                                phoneNumber: `+${countryCode}${phoneNumber}`,\n                                userID: userID,\n                                isDriver: isDriver,\n                                referralCode: referralCode,\n                            })\n                                .then(() => {\n                                    firebase.database().ref(`users/${userID}`).once('value', snapshot => {\n                                        firebase.auth().signOut().catch(error => { console.log(error.message) })\n                                        this.setState({ displayVerification: true, loading: false, error: false, userDetails: snapshot.val() });\n                                    }).catch(error => { this.setState({ error: true, errorMessage: error.message }) })\n\n                                })\n                                .catch(error => { this.setState({ errorMessage: error.message, loading: false }) });\n                        }).catch(error => { this.setState({ error: true, errorMessage: error.message, loading: false }) });\n                }\n                else\n                    this.setState({ error: true, errorMessage: 'This phone number is currently registered with another account, contact us for help', loading: false })\n            })\n            .catch(error => { this.setState({ error: true, errorMessage: error.message, loading: false }) });\n\n    })\n};\nexport function signOut(doNotReroute) {\n    firebase.auth().signOut()\n        .then(() => {\n            if (!doNotReroute)\n                Router.push('/');\n        })\n        .catch(error => { console.log(error.message) })\n};\nexport function sendVerification(userID, type, action, code, phoneNumber, email, name,) {\n    axios.post(`https://us-central1-perch-01.cloudfunctions.net/sendVerificationCode`,\n        {\n            userID: userID,\n            type: type,\n            action: action,\n            code: code,\n            phoneNumber: phoneNumber,\n            email: email,\n            name: name\n        })\n        .then((r) => {\n            const result = r.data;\n            if (action == 'check') {\n                if (result) {\n                    if (type == 'phoneNumber')\n                        this.setState({ phoneVerified: true, verificationPhoneLoader: false })\n                    else if (type == 'email')\n                        this.setState({ emailVerified: true, verificationEmailLoader: false })\n                }\n                else {\n                    if (type == 'phoneNumber')\n                        this.setState({ verificationPhoneLoader: false })\n                    else if (type == 'email')\n                        this.setState({ verificationEmailLoader: false })\n                    this.setState({\n                        error: true,\n                        errorMessage: 'The verification code was not correct. Please check again or click resend.',\n                    });\n                }\n            }\n        })\n    //.catch((error) => { this.setState({ error: true, errorMessage: error.message }) })\n};\nexport function changeEmailOrPhoneNumber(type, userID, phoneNumber, email) {\n    axios.post(`https://us-central1-perch-01.cloudfunctions.net/changeEmailOrPhoneNumber`, { userID: userID, email: email, type: type, phoneNumber: phoneNumber })\n        .then((r) => {\n            this.setState({ userDetails: r.data, changeEmail_PhoneNumber: false, error: false, errorMessage: '', changeEmailLoader: false, changePhoneLoader: false, })\n        })\n        .catch(error => { this.setState({ error: true, errorMessage: `${error.message}, this field might already be in use by another user` }) })\n};\nexport function sendFeedback() {\n    if (this.state.topic == 'unselected')\n        this.setState({ errorMessage: 'A topic is needed. Please pick a topic to contact us about. If you do not have one, please pick \"Other\"' })\n    else if (this.state.message == '')\n        this.setState({ errorMessage: 'Please enter a message' })\n    else {\n        this.setState({ loading: true }, () => {\n            if (this.state.userDetails) {\n                const ref = this.state.userDetails.driverID ? `driverFeedback/${this.state.userDetails.driverID}` : `userFeedback/${this.state.userDetails.userID}`;\n                firebase.database().ref(ref).update({\n                    [new Date().getTime()]: {\n                        body: this.state.message,\n                        subject: this.state.topic,\n                        status: 'UNPROCESSED',\n                        date: getDate(),\n                        timestamp: new Date().getTime(),\n                    }\n                }).then(() => {\n                    this.setState({ topic: 'unselected', message: '', loading: false }, () => { this.loadResult() })\n                }).catch(error => { console.log(error.message) });\n            }\n            else\n                axios.post(`https://us-central1-perch-01.cloudfunctions.net/guestSendFeedback`, {\n                    body: this.state.message,\n                    subject: this.state.topic,\n                    status: 'UNPROCESSED',\n                    date: getDate(),\n                    email: this.state.userEmail,\n                    timestamp: new Date().getTime(),\n                    nonUser: true,\n                    case: 'send',\n                }).then(() => {\n                    this.setState({ topic: 'unselected', message: '', loading: false })\n                }).catch(error => { console.log(error.message) });\n        })\n    }\n};\nexport function changePassword(email_, oldPassword, newPassword) {\n    this.setState({ loading: true }, () => {\n\n        const email = email_;\n        const password = oldPassword;\n\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(() => {\n                firebase.auth().currentUser.updatePassword(newPassword)\n                    .then(() => {\n                        this.setState({ loading: false, toShow: 'default', currentPassword: '', newPassword: '', confirmNewPassword: '' });\n                    })\n                    .catch(error => this.setState({ errorMessage: error.message, loading: false, newPassword: '', confirmNewPassword: '' }));\n            })\n            .catch(error => this.setState({ errorMessage: error.message, loading: false, newPassword: '', confirmNewPassword: '' }));\n    })\n};\nexport function deleteAccount(email, password) {\n    this.setState({ loading: true }, () => {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(() => {\n                const user = firebase.auth().currentUser;\n                const userID = user.uid;\n                user.delete()\n                    .then(() => {\n                        axios.post(`https://us-central1-perch-01.cloudfunctions.net/deleteUser`, {\n                            userID: userID,\n                            deleteAccountReason: this.state.deleteAccountReason,\n                            userDetails: this.state.userDetails,\n                        }).catch(error => { alert(error.message) })\n                    }).catch(error => this.setState({ errorMessage: error.message, loading: false, password1: '' }));\n            }).catch(error => this.setState({ errorMessage: error.message, loading: false, password1: '' }));\n    })\n};\nexport function sendPasswordResetLink(email) {\n    firebase.auth().sendPasswordResetEmail(email)\n        .then(() => {\n            this.setState({ error: false, errorMessage: '', forgotPassword: false })\n        }).catch(error => { this.setState({ error: true, errorMessage: error.message }) })\n};\nexport function sendEmail(name, email, type, subject) {\n    axios.post(`https://us-central1-perch-01.cloudfunctions.net/sendVerificationEmail`, { name: name, email: email, type: type, subject: subject })\n        .catch(error => { console.log(error.message) })\n};\nexport function resetPassword(code, newPassword, email) {\n    this.setState({ errorMessage: '', loading: true }, () => {\n        firebase.auth().confirmPasswordReset(code, newPassword)\n            .then(() => {\n                firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(() => {\n                    firebase.auth().signInWithEmailAndPassword(email, newPassword)\n                        .then(() => {\n                            const userID = firebase.auth().currentUser.uid;\n                            firebase.database().ref(`users/${userID}/firstName`)\n                                .once('value', snap => {\n                                    sendEmail(snap.val(), email, 'passwordHasBeenReset', 'Password has been reset');\n                                })\n                                .catch(error => { console.log(error.message) });\n                        })\n                        .catch(error => { console.log(error.message) });\n                }).catch(error => { console.log(error.message) });\n                Router.push('/');//send an email that password has been set \n            })\n            .catch(() => { this.setState({ errorMessage: 'The link is no longer valid, please go to the login page and request a new password reset link', loading: false }) })\n    })\n};\nexport function validateVehicle(userID, timestamp, dateFormat) {\n    axios.post(`https://us-central1-perch-01.cloudfunctions.net/validateVehicle`, { userID: userID, timestamp: timestamp, dateFormat: dateFormat })\n        .catch(error => { alert(error.message) })\n};\nexport function replyFeedback(response, riderOrDriver, senderID, timestamp) {\n    const ref = riderOrDriver == 'Rider' ? `userFeedback/${senderID}/${timestamp}` : `driverFeedback/${senderID}/${timestamp}`;\n    const nonUser = this.state.toShow.nonUser;\n    if (nonUser)\n        axios.post(`https://us-central1-perch-01.cloudfunctions.net/guestSendFeedback`, {\n            email: this.state.toShow.email,\n            subject: `Re:[${this.state.toShow.subject}]`,\n            response: response,\n            case: 'reply',\n        }).catch(error => {\n            alert(error.message)\n        })\n\n    firebase.database().ref(ref).update({\n        response: response,\n        status: 'PROCESSED',\n        responseDate: getDate(),\n    }).then(() => {\n        this.setState({\n            responseDate: new Date().getTime(),\n            showResponse: true,\n        })\n    }).catch(error => {\n        alert(error.message)\n    })\n};\nexport function sendUserEmail(email, subject, text) {\n    axios.post(`https://us-central1-perch-01.cloudfunctions.net/sendEmail`, {\n        email: email,\n        subject: subject,\n        text: text,\n    }).then(() => {\n        this.setState({ email: '', subject: '', text: '', loading: false })\n    }).catch(error => {\n        alert(error.message);\n        this.setState({ loading: false });\n    })\n}\nexport function validateDriver(userID, timestamp, dateFormat) {\n    axios.post(`https://us-central1-perch-01.cloudfunctions.net/validateDriver`, { userID: userID, timestamp: timestamp, dateFormat: dateFormat })\n        .then(() => {\n            this.loadResult();\n            this.setState({ showDocs: false, vehicle: {}, verified: [] });\n        })\n        .catch(error => { alert(error.message) })\n};\n//MAKE A RANDOMID\nexport function makeid(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\nexport function driverApplicationAdvance() {\n    const { selected } = this.state;\n\n    switch (selected.stage) {\n        case 'three': {\n            firebase.database().ref(`driverApplications/${selected.userID}`)\n                .update({\n                    progress: JSON.stringify([\"done\", \"done\", \"done\", \"ongoing\", \"undone\"]),\n                    stage: \"four\",\n                })\n                .then(() => {\n                    //MAKE ARRANGEMENTS TO SEND DRIVER AN OFFER LETTER\n                    this.setState({ showDocs: false }, () => { this.loadResult() })\n                })\n                .catch(error => { alert(error.message) })\n        } break;\n        case 'four': {//THE INDEPENNDENT CONTRACTOR DOCUMENT HAS BEEN SIGNED AND WE ARE GOOD TO GO\n            firebase.database().ref(`driverApplications/${selected.userID}`)\n                .update({\n                    progress: JSON.stringify([\"done\", \"done\", \"done\", \"done\", \"done\"]),\n                    stage: \"five\",\n                })\n                .then(() => { this.setState({ showDocs: false }, () => { this.loadResult() }) })\n                .catch(error => { alert(error.message) })\n        } break;\n    };\n}\nexport function getDate() {\n    const DAY = new Date().getDate();\n    const MONTH = new Date().getMonth();\n    const YEAR = new Date().getFullYear();\n    const HOUR = new Date().getHours();\n    const MIN = new Date().getMinutes();\n    const SECOND = new Date().getSeconds();\n\n    return (`${YEAR}-${MONTH}-${DAY}-${HOUR}-${MIN}-${SECOND}`);\n};\nexport function dateformat(time) {\n    let slash1 = 0, slash2 = 0, slash3 = 0;\n    for (let k = 0; k < time.length; k++) {\n        if (time.charAt(k) == '-')\n            slash1 == 0 ? slash1 = k : slash2 == 0 ? slash2 = k : slash3 = k;\n\n        if (slash3 != 0)\n            break;\n    };\n\n    const y = time.substring(0, slash1);\n    const m = time.substring(slash1 + 1, slash2);\n    const d = time.substring(slash2 + 1, slash3);\n\n    return `${d}/${Number(m) + 1}/${y}`;\n};\nexport function polylineLenght(data) {\n    let distance = 0;\n    for (let k = 0; k < data.length - 1; k++)\n        distance += distanceCalculator(data[k][0], data[k][1], data[k + 1][0], data[k + 1][1])\n\n    return (distance)\n};\nexport function timeAndDate(time, month, year) {\n    let slash1 = 0, slash2 = 0, slash3 = 0;\n    for (let k = 0; k < time.length; k++) {\n        if (time.charAt(k) == '-')\n            slash1 == 0 ? slash1 = k : slash2 == 0 ? slash2 = k : slash3 = k;\n    }\n\n    const HOUR = Number(time.substring(slash1 + 1, slash2)) == 0 ? 12 : Number(time.substring(slash1 + 1, slash2)) > 12 ? Number(time.substring(slash1 + 1, slash2)) - 12 : Number(time.substring(slash1 + 1, slash2));\n    const MIN = Number(time.substring(slash2 + 1, slash3)) < 10 ? `0` + time.substring(slash2 + 1, slash3) : Number(time.substring(slash2 + 1, slash3));\n    const MERIDIAN = Number(time.substring(slash1 + 1, slash2)) < 12 ? 'AM' : 'PM';\n    const DAY = time.substring(0, slash1);\n    const MONTH = M.indexOf(month) + 1;\n    const formattedDate = `${DAY}/${MONTH}/${year}, ${HOUR}:${MIN} ${MERIDIAN}`;\n\n    return (formattedDate);\n};\nexport function distanceCalculator(lat1, lon1, lat2, lon2) {\n    let R = 6371 * 1000; // Radius of the earth in m\n    let dLat = deg2rad(lat2 - lat1);  // deg2rad below\n    let dLon = deg2rad(lon2 - lon1);\n    let a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n        ;\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    let d = R * c; // Distance in m\n    return d;\n};\nexport function emailFormat(email, type) {\n    //@ is stored as -(hyphen)\n    //. is stored as _(underscore)\n    switch (type) {\n        case 'emailToString': {\n            return (email.replace('@', '-').replace('.', '_'));\n        } break;\n        case 'stringToEmail': {\n            return (email.replace('-', '@').replace('_', '.'));\n        } break;\n    }\n};\nfunction deg2rad(deg) {\n    return deg * (Math.PI / 180)\n};\nfunction formatAMPM(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    var strTime = hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n};\nexport function dateOfQuery(timestamp) {\n    return `${formatAMPM(new Date(timestamp)).toUpperCase()} ${('0' + new Date(timestamp).getDate()).slice(-2)}/${('0' + (new Date(timestamp).getMonth() + 1)).slice(-2)}/${new Date(timestamp).getFullYear()}`\n};\nexport const M = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport const colors = {\n    GREEN: \"#4EB848\",\n    WHITE: \"#FFFFFF\",\n    GREY: \"#959AAC\",\n    BLACK: \"#000000\",\n    RED: \"#FF0000\",\n    BLUE_TEXT: \"#284ED6\",\n    BLUE: \"#1970A7\",\n    PURPLE: \"#A031AF\",\n    YELLOW: \"#F0E23D\",\n    GOLD: \"#FFAA00\",\n};\nexport function isNumber(n) {\n    return !isNaN(parseFloat(n)) && !isNaN(n - 0);\n};\nexport function deleteCard(userID, last4, selected) {\n    axios.post(`https://us-central1-perch-01.cloudfunctions.net/deleteStripeCard`, { userID: userID, last4: last4, selected: selected })\n        .catch(error => { console.log(error.message) });\n};\nexport function storeCard(userID, cardObject, setLoading, setErrorMessage, cancel) {\n    let c = cardObject;\n    c.card.cardId = cardObject.card.id;\n    axios.post(`https://us-central1-perch-01.cloudfunctions.net/storeStripeCard`, { userID: userID, cardObject: c })\n        .then(() => {\n            cancel();\n        })\n        .catch(error => {\n            setLoading(false)\n            setErrorMessage(error.message);\n        });\n};\nexport function buyKilometers(toSend) {\n    this.setState({ paymentLoading: true }, () => {\n        axios.post(`https://us-central1-perch-01.cloudfunctions.net/buyPerchKilometers`, { ...toSend, status: 'initial' })\n            .then(result => {\n                const { status, client_secret, id } = result.data;\n                toSend.paymentIntentId = id;\n                toSend.status = 'confirm_payment';\n\n                if (status == 'succeeded') {\n                    this.setState({ paymentCompleted: true })\n                }\n                else if (status == 'requires_action') {\n                    stripe.authenticatePaymentIntent({\n                        clientSecret: client_secret\n                    }).then(data => {\n                        if (data.status == 'requires_confirmation') {\n                            axios.post(`https://us-central1-perch-01.cloudfunctions.net/buyPerchKilometers`, { ...toSend, paymentIntentId: id, status: 'confirm_payment' })\n                                .then((result_) => {\n                                    const status_ = result_.data.status;\n                                    if (status_ == 'succeeded') {\n                                        this.setState({ paymentCompleted: true })\n                                    }\n                                })\n                                .catch(error => {\n                                    this.setState({ paymentError: true, paymentErrorMessage: error.message });\n                                })\n                        }\n                    }).catch(error => {\n                        this.setState({ paymentError: true, paymentErrorMessage: error.message });\n                    })\n                }\n            })\n            .catch(error => {\n                this.setState({ paymentError: true, paymentErrorMessage: error.message });\n            });\n    });\n};\nexport function formatDateAllValues(d) {\n    return d.getFullYear().toString() + \"/\" + ((d.getMonth() + 1).toString().length == 2 ? (d.getMonth() + 1).toString() : \"0\" + (d.getMonth() + 1).toString()) + \"/\" + (d.getDate().toString().length == 2 ? d.getDate().toString() : \"0\" + d.getDate().toString()) + \" - \" + formatAMPM(d).toUpperCase();\n};\nexport function millisToMinutesAndSeconds(millis) {\n    var minutes = Math.floor(millis / 60000);\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\n};\nexport function cancelledTripResolver(toSend) {\n    axios.post(`https://us-central1-perch-01.cloudfunctions.net/cancelledTripResolver`, toSend)\n        .then(() => {\n            let newResult = this.state.result;\n            delete newResult[toSend.cancelled_UNRESOLVED_KEY];\n            this.setState({\n                currentData: null,\n                refundRiderAmount: '',\n                refundRiderPerchKms: '',\n                payFirstDriver: '',\n                paySecondDriver: '',\n                payThirdDriver: '',\n                adminCut: '',\n                result: newResult,\n                loading: false,\n            })\n        }).catch(error => { alert(error.message); })\n\n};\nexport function pendingProcessesFunction(toSend) {\n    this.setState({ loading: true, errorMessage: '' }, () => {\n        axios.post(`https://us-central1-perch-01.cloudfunctions.net/pendingProcesses`, toSend)\n\n            .then((data) => {\n                let newV = toSend.isNewProcess ? [] : this.state.listOfProcesses;\n                const time = new Date().getTime()\n                newV.push({\n                    title: toSend.title,\n                    details: toSend.details,\n                    timeCreated: time,\n                });\n                this.setState({\n                    addProcess: false,\n                    isNewProcess: false,\n                    viewList: true,\n                    pushId: data.data,\n                    title: '',\n                    details: '',\n                    loading: false,\n                    listOfProcesses: newV,\n                }, () => {\n                    if (toSend.isNewProcess)\n                        this.setState({ timeCreated: time })\n                })\n            }).catch(error => { alert(error.message); })\n    });\n};\nexport function pendingProcessesFunctionDelete(pushId) {\n    this.setState({ loading1: true, }, () => {\n        axios.post(`https://us-central1-perch-01.cloudfunctions.net/pendingProcessesDelete`, { pushId: pushId })\n            .then(() => {\n                let newV = { ...this.state.result };\n                delete newV[pushId];\n                this.setState({\n                    result: newV,\n                    loading1: false,\n                    addProcess: false,\n                    isNewProcess: false,\n                    viewList: false,\n                    pushId: '',\n                    userID: '',\n                    type: '',\n                    listOfProcesses: [],\n                    mainTopic: '',\n                    title: '',\n                    details: '',\n                    errorMessage: '',\n                })\n            }).catch(error => { alert(error.message); })\n    });\n};"]},"metadata":{},"sourceType":"module"}