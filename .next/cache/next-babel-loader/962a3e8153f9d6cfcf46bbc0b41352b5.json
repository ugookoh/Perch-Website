{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport axios from 'axios';\nimport firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { GiClick } from 'react-icons/gi';\nimport { RiShieldCheckFill } from 'react-icons/ri';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { changePassword, deleteAccount, sendVerification, colors } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GREEN = '#4EB848',\n    WHITE = '#FFFFFF',\n    GREY = '#959AAC',\n    BLACK = '#000000',\n    RED = '#FF0000',\n    BLUE_TEXT = '#284ED6',\n    BLUE = '#1970A7',\n    PURPLE = '#A031AF',\n    YELLOW = '#F0E23D';\n\nvar Settings = /*#__PURE__*/function (_React$Component) {\n  _inherits(Settings, _React$Component);\n\n  var _super = _createSuper(Settings);\n\n  function Settings(props) {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"setImage\", function (photoRef) {\n      firebase.storage().ref(\"\".concat(photoRef)).getDownloadURL().then(function (result) {\n        _this.setState({\n          url: result\n        });\n      })[\"catch\"](function (error) {\n        console.log(error.message);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sendVerificationCode\", function (type) {\n      _this.setState({\n        timer: 60\n      }, function () {\n        var time = setInterval(function () {\n          if (_this.state.timer == 0) clearInterval(time);else _this.setState({\n            timer: _this.state.timer - 1\n          });\n        }, 1000);\n      });\n\n      if (_this.state.timer == 0) switch (type) {\n        case 'email':\n          {\n            sendVerification(_this.state.userDetails.userID, 'email', 'storeAndSend', '', '', _this.state.newEmail, _this.state.userDetails.firstName);\n\n            _this.setState({\n              toShow: 'verify',\n              toVerify: 'email'\n            });\n          }\n          break;\n\n        case 'phoneNumber':\n          {\n            sendVerification(_this.state.userDetails.userID, 'phoneNumber', 'storeAndSend', '', _this.state.newPhoneNumber, '', _this.state.userDetails.firstName);\n\n            _this.setState({\n              toShow: 'verify',\n              toVerify: 'phone number'\n            });\n          }\n          break;\n      }\n      ;\n    });\n\n    _this.state = {\n      toShow: 'default',\n      //default, changePassword, verify, whyDeleteAccount,logInToDeleteAccount,\n      toVerify: '',\n      url: null,\n      userDetails: _this.props.userDetails,\n      newEmail: _this.props.userDetails ? _this.props.userDetails.email : '',\n      newPhoneNumber: _this.props.userDetails ? _this.props.userDetails.phoneNumber : '',\n      currentPassword: '',\n      newPassword: '',\n      confirmNewPassword: '',\n      loading: false,\n      errorMessage: '',\n      deleteAccountReason: '',\n      email1: '',\n      password1: '',\n      timer: 0,\n      emailVerified: false,\n      phoneVerified: true,\n      verifyText: ''\n    };\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setImage(this.state.userDetails.photoRef);\n      firebase.database().ref(\"users/\".concat(this.state.userDetails.userID, \"/summarizedHistory\")).on('value', function (snap) {\n        if (snap.val()) _this2.setState({\n          emailVerified: snap.val().emailVerified,\n          phoneVerified: snap.val().phoneVerified\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var content = /*#__PURE__*/_jsx(_Fragment, {});\n\n      if (!this.state.userDetails && this.props.userDetails) this.setState({\n        userDetails: this.props.userDetails,\n        newEmail: this.props.userDetails.email,\n        newPhoneNumber: this.props.userDetails.phoneNumber\n      }, function () {\n        _this3.setImage(_this3.state.userDetails.photoRef);\n      });\n\n      switch (this.state.toShow) {\n        case 'default':\n          {\n            content = /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  color: BLACK,\n                  marginBottom: '15px'\n                },\n                children: \"User details\"\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.enterKilometerDiv,\n                style: {\n                  margin: '0px',\n                  width: '100%'\n                },\n                children: [/*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  placeholder: \"First Name\",\n                  className: styles.inputPaymentPanel,\n                  id: styles.inputSettings,\n                  style: {\n                    width: '49%',\n                    margin: '0px'\n                  },\n                  value: this.state.userDetails ? this.state.userDetails.firstName : 'First Name',\n                  disabled: true\n                }), /*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Last Name\",\n                  className: styles.inputPaymentPanel,\n                  id: styles.inputSettings,\n                  style: {\n                    width: '49%',\n                    margin: '0px'\n                  },\n                  value: this.state.userDetails ? this.state.userDetails.lastName : 'Last Name',\n                  disabled: true\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.enterKilometerDiv,\n                id: styles.inputSettingCont_,\n                children: [/*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Email Address\",\n                  className: styles.inputPaymentPanel,\n                  value: this.state.newEmail,\n                  onChange: function onChange(event) {\n                    _this3.setState({\n                      newEmail: event.target.value\n                    });\n                  },\n                  id: styles.inputSettingCont_L\n                }), this.state.emailVerified && this.state.userDetails.email == this.state.newEmail ? /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.pickPaymentSelected,\n                  style: {\n                    backgroundColor: this.props.type == 'Driver' ? '#39A2E5' : '#5EEF56'\n                  },\n                  id: styles.inputSettingCont_R,\n                  children: [/*#__PURE__*/_jsx(\"p\", {\n                    className: styles.buttonText1,\n                    id: styles.settingsVerifyOrNot,\n                    children: \"Verified\"\n                  }), /*#__PURE__*/_jsx(RiShieldCheckFill, {\n                    className: styles.settingsVerifyOrNotIcon,\n                    color: WHITE\n                  })]\n                }) : /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.pickPaymentSelected,\n                  style: {\n                    backgroundColor: '#FF4040'\n                  },\n                  id: styles.inputSettingCont_R_VERIFYNOW,\n                  onClick: function onClick() {\n                    _this3.sendVerificationCode('email');\n                  },\n                  children: [/*#__PURE__*/_jsx(\"p\", {\n                    className: styles.buttonText1,\n                    id: styles.settingsVerifyOrNot,\n                    children: \"Verify Now\"\n                  }), /*#__PURE__*/_jsx(GiClick, {\n                    className: styles.settingsVerifyOrNotIcon,\n                    color: WHITE\n                  })]\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.enterKilometerDiv,\n                id: styles.inputSettingCont_,\n                children: [/*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Phone Number\",\n                  className: styles.inputPaymentPanel,\n                  value: this.state.newPhoneNumber,\n                  onChange: function onChange(event) {\n                    _this3.setState({\n                      newPhoneNumber: event.target.value\n                    });\n                  },\n                  id: styles.inputSettingCont_L\n                }), this.state.phoneVerified && this.state.userDetails.phoneNumber == this.state.newPhoneNumber ? /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.pickPaymentSelected,\n                  style: {\n                    backgroundColor: this.props.type == 'Driver' ? '#39A2E5' : '#5EEF56'\n                  },\n                  id: styles.inputSettingCont_R,\n                  children: [/*#__PURE__*/_jsx(\"p\", {\n                    className: styles.buttonText1,\n                    id: styles.settingsVerifyOrNot,\n                    children: \"Verified\"\n                  }), /*#__PURE__*/_jsx(RiShieldCheckFill, {\n                    className: styles.settingsVerifyOrNotIcon,\n                    color: WHITE\n                  })]\n                }) : /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.pickPaymentSelected,\n                  style: {\n                    backgroundColor: '#FF4040'\n                  },\n                  id: styles.inputSettingCont_R_VERIFYNOW,\n                  onClick: function onClick() {\n                    axios.post(\"https://us-central1-perch-01.cloudfunctions.net/checkIfPhoneNumberIsFree\", {\n                      phoneNumber: _this3.state.newPhoneNumber\n                    }).then(function (r) {\n                      if (r.data) {\n                        _this3.sendVerificationCode('phoneNumber');\n                      } else _this3.setState({\n                        error: true,\n                        errorMessage: 'Phone number already in use by another account'\n                      });\n                    })[\"catch\"](function (error) {\n                      _this3.setState({\n                        error: true,\n                        errorMessage: error.message\n                      });\n                    });\n                  },\n                  children: [/*#__PURE__*/_jsx(\"p\", {\n                    className: styles.buttonText1,\n                    id: styles.settingsVerifyOrNot,\n                    children: \"Verify Now\"\n                  }), /*#__PURE__*/_jsx(GiClick, {\n                    className: styles.settingsVerifyOrNotIcon,\n                    color: WHITE\n                  })]\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.enterKilometerDiv,\n                id: styles.inputSettingCont__,\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  onClick: function onClick() {\n                    _this3.setState({\n                      toShow: 'changePassword'\n                    });\n                  },\n                  className: styles.changePasswordButton,\n                  style: this.props.type ? {\n                    color: BLUE\n                  } : {},\n                  children: \"Change Password\"\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: styles.button1,\n                  id: styles.deleteAccountButton_,\n                  style: {\n                    backgroundColor: RED,\n                    maxWidth: 'initial',\n                    height: '40px',\n                    minHeight: 'initial',\n                    margin: '0px'\n                  },\n                  onClick: function onClick() {\n                    _this3.setState({\n                      toShow: 'whyDeleteAccount'\n                    });\n                  },\n                  children: /*#__PURE__*/_jsx(\"p\", {\n                    className: styles.buttonText1,\n                    id: styles.deleteAccountButton,\n                    children: \"Delete Account\"\n                  })\n                })]\n              })]\n            });\n          }\n          break;\n\n        case 'changePassword':\n          {\n            content = /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  color: BLACK\n                },\n                children: \"Change Password\"\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.enterKilometerDiv,\n                id: styles.inputSettingCont_,\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  type: \"password\",\n                  placeholder: \"Current Password\",\n                  className: styles.inputPaymentPanel,\n                  id: styles.inputSettingCont_L,\n                  value: this.state.currentPassword,\n                  onChange: function onChange(event) {\n                    _this3.setState({\n                      currentPassword: event.target.value\n                    });\n                  },\n                  style: {\n                    width: '100%'\n                  }\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.enterKilometerDiv,\n                id: styles.inputSettingCont_,\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  type: \"password\",\n                  placeholder: \"New Password\",\n                  className: styles.inputPaymentPanel,\n                  id: styles.inputSettingCont_L,\n                  value: this.state.newPassword,\n                  onChange: function onChange(event) {\n                    _this3.setState({\n                      newPassword: event.target.value\n                    });\n                  },\n                  style: {\n                    width: '100%'\n                  }\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.enterKilometerDiv,\n                id: styles.inputSettingCont_,\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  type: \"password\",\n                  placeholder: \"Confirm New Password\",\n                  className: styles.inputPaymentPanel,\n                  id: styles.inputSettingCont_L,\n                  style: {\n                    width: '100%'\n                  },\n                  value: this.state.confirmNewPassword,\n                  onChange: function onChange(event) {\n                    _this3.setState({\n                      confirmNewPassword: event.target.value\n                    });\n                  }\n                })\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.em,\n                children: this.state.errorMessage\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.enterKilometerDiv,\n                id: styles.inputSettingCont__,\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: styles.button1,\n                  id: styles.deleteAccountButton_,\n                  style: {\n                    backgroundColor: RED,\n                    maxWidth: 'initial',\n                    height: '40px',\n                    minHeight: 'initial',\n                    margin: '0px',\n                    width: '49%'\n                  },\n                  onClick: function onClick() {\n                    if (!_this3.state.loading) _this3.setState({\n                      toShow: 'default',\n                      errorMessage: '',\n                      currentPassword: '',\n                      newPassword: '',\n                      confirmNewPassword: ''\n                    });\n                  },\n                  children: /*#__PURE__*/_jsx(\"p\", {\n                    className: styles.buttonText1,\n                    id: styles.deleteAccountButton,\n                    children: \"Cancel\"\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: styles.button1,\n                  id: styles.deleteAccountButton_,\n                  style: {\n                    backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN,\n                    maxWidth: 'initial',\n                    height: '40px',\n                    minHeight: 'initial',\n                    margin: '0px',\n                    width: '49%'\n                  },\n                  onClick: function onClick() {\n                    if (!_this3.state.loading) {\n                      if (_this3.state.newPassword == '') _this3.setState({\n                        errorMessage: 'Please enter a new password'\n                      });else if (_this3.state.newPassword != _this3.state.confirmNewPassword) _this3.setState({\n                        errorMessage: 'New password and confirm new password do not match'\n                      });else changePassword.call(_this3, _this3.state.userDetails.email, _this3.state.currentPassword, _this3.state.newPassword);\n                    }\n                  },\n                  children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n                    type: \"TailSpin\",\n                    color: WHITE,\n                    height: '20px',\n                    width: '20px'\n                  }) : /*#__PURE__*/_jsx(\"p\", {\n                    className: styles.buttonText1,\n                    id: styles.deleteAccountButton,\n                    children: \"Change Password\"\n                  })\n                })]\n              })]\n            });\n          }\n          break;\n\n        case 'verify':\n          {\n            content = /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  color: BLACK\n                },\n                children: \"Verify your \".concat(this.state.toVerify)\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                className: styles.text,\n                style: {\n                  color: BLACK\n                },\n                children: [\"Enter the code sent to \", /*#__PURE__*/_jsx(\"span\", {\n                  style: {\n                    color: this.props.type == 'Driver' ? BLUE : GREEN\n                  },\n                  children: this.state.toVerify == 'email' ? this.state.newEmail : this.state.newPhoneNumber\n                })]\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.enterKilometerDiv,\n                id: styles.inputSettingCont_,\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter Code\",\n                  className: styles.inputPaymentPanel,\n                  id: styles.inputSettingCont_L,\n                  style: {\n                    width: '100%'\n                  },\n                  value: this.state.verifyText,\n                  onChange: function onChange(v) {\n                    _this3.setState({\n                      verifyText: v.target.value\n                    });\n                  }\n                })\n              }), this.state.timer == 0 ? /*#__PURE__*/_jsxs(\"p\", {\n                className: styles.text,\n                style: {\n                  color: BLACK,\n                  fontSize: '80%'\n                },\n                children: [\"Didn't get a code yet? \", /*#__PURE__*/_jsx(\"span\", {\n                  id: styles.resendCodeSettings,\n                  onClick: function onClick() {\n                    _this3.sendVerificationCode(_this3.state.toVerify == 'email' ? 'email' : 'phoneNumber');\n                  },\n                  style: {\n                    color: BLUE_TEXT\n                  },\n                  children: \"Resend\"\n                })]\n              }) : /*#__PURE__*/_jsxs(\"p\", {\n                className: styles.text,\n                style: {\n                  color: BLACK,\n                  fontSize: '80%'\n                },\n                children: [\"Resend in \", /*#__PURE__*/_jsx(\"span\", {\n                  style: {\n                    color: BLUE_TEXT\n                  },\n                  children: \" 0:\".concat(('0' + this.state.timer).slice(-2))\n                })]\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.em,\n                children: this.state.errorMessage\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.enterKilometerDiv,\n                id: styles.inputSettingCont__,\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: styles.button1,\n                  id: styles.deleteAccountButton_,\n                  style: {\n                    backgroundColor: RED,\n                    maxWidth: 'initial',\n                    height: '40px',\n                    minHeight: 'initial',\n                    margin: '0px',\n                    width: '49%'\n                  },\n                  onClick: function onClick() {\n                    _this3.setState({\n                      toShow: 'default',\n                      errorMessage: ''\n                    });\n                  },\n                  children: /*#__PURE__*/_jsx(\"p\", {\n                    className: styles.buttonText1,\n                    id: styles.deleteAccountButton,\n                    children: \"Cancel\"\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: styles.button1,\n                  id: styles.deleteAccountButton_,\n                  style: {\n                    backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN,\n                    maxWidth: 'initial',\n                    height: '40px',\n                    minHeight: 'initial',\n                    margin: '0px',\n                    width: '49%'\n                  },\n                  onClick: function onClick() {\n                    var code = _this3.state.verifyText;\n\n                    if (code.length != 6) {\n                      _this3.setState({\n                        errorMessage: 'Verification code must be 6 characters long'\n                      });\n                    } else {\n                      _this3.setState({\n                        loading: true\n                      }, function () {\n                        var type = _this3.state.toVerify == 'email' ? 'email' : 'phoneNumber';\n\n                        switch (type) {\n                          case 'email':\n                            {\n                              axios.post(\"https://us-central1-perch-01.cloudfunctions.net/sendVerificationCode\", {\n                                userID: _this3.state.userDetails.userID,\n                                type: type,\n                                action: 'check',\n                                code: code,\n                                phoneNumber: '',\n                                email: _this3.state.newEmail,\n                                name: _this3.state.userDetails.firstName\n                              }).then(function (r) {\n                                if (r.data) {\n                                  axios.post(\"https://us-central1-perch-01.cloudfunctions.net/changeEmailAndPhoneNumberAfterVerifying\", {\n                                    userID: _this3.state.userDetails.userID,\n                                    type: type,\n                                    phoneNumber: '',\n                                    email: _this3.state.newEmail\n                                  }).then(function () {\n                                    var userDetails = _this3.state.userDetails;\n                                    userDetails.email = _this3.state.newEmail;\n\n                                    _this3.setState({\n                                      toShow: 'default',\n                                      loading: false,\n                                      userDetails: userDetails,\n                                      errorMessage: ''\n                                    });\n                                  })[\"catch\"](function (error) {\n                                    _this3.setState({\n                                      errorMessage: error.message,\n                                      loading: false\n                                    });\n                                  });\n                                } else _this3.setState({\n                                  errorMessage: 'Validation code is not valid',\n                                  loading: false\n                                });\n                              })[\"catch\"](function (error) {\n                                _this3.setState({\n                                  errorMessage: error.message,\n                                  loading: false\n                                });\n                              });\n                            }\n                            break;\n\n                          case 'phoneNumber':\n                            {\n                              axios.post(\"https://us-central1-perch-01.cloudfunctions.net/sendVerificationCode\", {\n                                userID: _this3.state.userDetails.userID,\n                                type: type,\n                                action: 'check',\n                                code: code,\n                                phoneNumber: _this3.state.newPhoneNumber,\n                                email: '',\n                                name: _this3.state.userDetails.firstName\n                              }).then(function (r) {\n                                if (r.data) {\n                                  axios.post(\"https://us-central1-perch-01.cloudfunctions.net/changeEmailAndPhoneNumberAfterVerifying\", {\n                                    userID: _this3.state.userDetails.userID,\n                                    type: type,\n                                    phoneNumber: '',\n                                    email: _this3.state.newEmail\n                                  }).then(function () {\n                                    var userDetails = _this3.state.userDetails;\n                                    userDetails.phoneNumber = _this3.state.newPhoneNumber;\n\n                                    _this3.setState({\n                                      toShow: 'default',\n                                      loading: false,\n                                      userDetails: userDetails,\n                                      errorMessage: ''\n                                    });\n                                  })[\"catch\"](function (error) {\n                                    _this3.setState({\n                                      errorMessage: error.message,\n                                      loading: false\n                                    });\n                                  });\n                                } else _this3.setState({\n                                  errorMessage: 'Validation code is not valid',\n                                  loading: false\n                                });\n                              })[\"catch\"](function (error) {\n                                _this3.setState({\n                                  errorMessage: error.message,\n                                  loading: false\n                                });\n                              });\n                            }\n                            break;\n                        }\n                      });\n                    }\n                  },\n                  children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n                    type: \"TailSpin\",\n                    color: WHITE,\n                    height: '20px',\n                    width: '20px'\n                  }) : /*#__PURE__*/_jsx(\"p\", {\n                    className: styles.buttonText1,\n                    id: styles.deleteAccountButton,\n                    children: \"Verify\"\n                  })\n                })]\n              })]\n            });\n          }\n          break;\n\n        case 'whyDeleteAccount':\n          {\n            content = /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  color: BLACK\n                },\n                children: \"Are you sure you would like to delete your account?\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.text,\n                style: {\n                  color: BLACK\n                },\n                children: \"Please describe briefly why you would like to delete your account\"\n              }), /*#__PURE__*/_jsx(\"textarea\", {\n                type: \"text\",\n                placeholder: \"Enter your message here\",\n                className: styles.contactUsContent,\n                style: {\n                  width: '100%'\n                },\n                value: this.state.deleteAccountReason,\n                onChange: function onChange(event) {\n                  _this3.setState({\n                    deleteAccountReason: event.target.value\n                  });\n                }\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.em,\n                children: this.state.errorMessage\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.enterKilometerDiv,\n                id: styles.inputSettingCont__,\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: styles.button1,\n                  id: styles.deleteAccountButton_,\n                  style: {\n                    backgroundColor: RED,\n                    maxWidth: 'initial',\n                    height: '40px',\n                    minHeight: 'initial',\n                    margin: '0px',\n                    width: '49%'\n                  },\n                  onClick: function onClick() {\n                    if (_this3.state.deleteAccountReason == '') _this3.setState({\n                      errorMessage: 'Please enter a reason to delete your account'\n                    });else if (_this3.state.deleteAccountReason.length < 15) _this3.setState({\n                      errorMessage: 'Please enter a reason longer than 15 characters'\n                    });else _this3.setState({\n                      toShow: 'logInToDeleteAccount',\n                      errorMessage: ''\n                    });\n                  },\n                  children: /*#__PURE__*/_jsx(\"p\", {\n                    className: styles.buttonText1,\n                    id: styles.deleteAccountButton,\n                    children: \"Delete Account\"\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: styles.button1,\n                  id: styles.deleteAccountButton_,\n                  style: {\n                    backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN,\n                    maxWidth: 'initial',\n                    height: '40px',\n                    minHeight: 'initial',\n                    margin: '0px',\n                    width: '49%'\n                  },\n                  onClick: function onClick() {\n                    _this3.setState({\n                      toShow: 'default',\n                      errorMessage: '',\n                      deleteAccountReason: ''\n                    });\n                  },\n                  children: /*#__PURE__*/_jsx(\"p\", {\n                    className: styles.buttonText1,\n                    id: styles.deleteAccountButton,\n                    children: \"Cancel\"\n                  })\n                })]\n              })]\n            });\n          }\n          break;\n\n        case 'logInToDeleteAccount':\n          {\n            content = /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: styles.title,\n                style: {\n                  color: BLACK\n                },\n                children: \"We are sorry to see you leave Perch\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.text,\n                style: {\n                  color: BLACK\n                },\n                children: \"Please describe briefly why you would like to delete your account\"\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.enterKilometerDiv,\n                id: styles.inputSettingCont_,\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Email\",\n                  className: styles.inputPaymentPanel,\n                  id: styles.inputSettingCont_L,\n                  style: {\n                    width: '100%'\n                  },\n                  value: this.state.email1,\n                  autoComplete: 'off',\n                  onChange: function onChange(event) {\n                    _this3.setState({\n                      email1: event.target.value\n                    });\n                  }\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.enterKilometerDiv,\n                id: styles.inputSettingCont_,\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  type: \"password\",\n                  placeholder: \"Password\",\n                  className: styles.inputPaymentPanel,\n                  id: styles.inputSettingCont_L,\n                  style: {\n                    width: '100%'\n                  },\n                  value: this.state.password1,\n                  autoComplete: 'off',\n                  onChange: function onChange(event) {\n                    _this3.setState({\n                      password1: event.target.value\n                    });\n                  }\n                })\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: styles.em,\n                children: this.state.errorMessage\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.enterKilometerDiv,\n                id: styles.inputSettingCont__,\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: styles.button1,\n                  id: styles.deleteAccountButton_,\n                  style: {\n                    backgroundColor: RED,\n                    maxWidth: 'initial',\n                    height: '40px',\n                    minHeight: 'initial',\n                    margin: '0px',\n                    width: '49%'\n                  },\n                  onClick: function onClick() {\n                    if (!_this3.state.loading) deleteAccount.call(_this3, _this3.state.email1, _this3.state.password1);\n                  },\n                  children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n                    type: \"TailSpin\",\n                    color: WHITE,\n                    height: '20px',\n                    width: '20px'\n                  }) : /*#__PURE__*/_jsx(\"p\", {\n                    className: styles.buttonText1,\n                    id: styles.deleteAccountButton,\n                    children: \"Delete Account\"\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: styles.button1,\n                  id: styles.deleteAccountButton_,\n                  style: {\n                    backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN,\n                    maxWidth: 'initial',\n                    height: '40px',\n                    minHeight: 'initial',\n                    margin: '0px',\n                    width: '49%'\n                  },\n                  onClick: function onClick() {\n                    _this3.setState({\n                      toShow: 'default',\n                      errorMessage: '',\n                      email1: '',\n                      password1: ''\n                    });\n                  },\n                  children: /*#__PURE__*/_jsx(\"p\", {\n                    className: styles.buttonText1,\n                    id: styles.deleteAccountButton,\n                    children: \"Cancel\"\n                  })\n                })]\n              })]\n            });\n          }\n          break;\n      }\n\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: styles.cont,\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: WHITE,\n            marginTop: '20px',\n            marginBottom: '150px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: BLACK\n            },\n            children: \"Rider settings\"\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.settingUserDetails,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.displayPicSettings,\n              children: /*#__PURE__*/_jsx(\"img\", {\n                src: this.state.url,\n                className: styles.doggyProfilePicture\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.settingsCont,\n              children: content\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Settings;\n}(React.Component);\n\nexport { Settings as default };\n;","map":{"version":3,"sources":["/Users/edokoh9/Documents/PerchWebsite/perch/functions/panels/userPanels/settings.js"],"names":["axios","firebase","React","GiClick","RiShieldCheckFill","Loader","changePassword","deleteAccount","sendVerification","colors","styles","GREEN","WHITE","GREY","BLACK","RED","BLUE_TEXT","BLUE","PURPLE","YELLOW","Settings","props","photoRef","storage","ref","getDownloadURL","then","result","setState","url","error","console","log","message","type","timer","time","setInterval","state","clearInterval","userDetails","userID","newEmail","firstName","toShow","toVerify","newPhoneNumber","email","phoneNumber","currentPassword","newPassword","confirmNewPassword","loading","errorMessage","deleteAccountReason","email1","password1","emailVerified","phoneVerified","verifyText","setImage","database","on","snap","val","content","title","color","marginBottom","enterKilometerDiv","margin","width","inputPaymentPanel","inputSettings","lastName","inputSettingCont_","event","target","value","inputSettingCont_L","pickPaymentSelected","backgroundColor","inputSettingCont_R","buttonText1","settingsVerifyOrNot","settingsVerifyOrNotIcon","inputSettingCont_R_VERIFYNOW","sendVerificationCode","post","r","data","inputSettingCont__","changePasswordButton","button1","deleteAccountButton_","maxWidth","height","minHeight","deleteAccountButton","em","call","text","v","fontSize","resendCodeSettings","slice","code","length","action","name","contactUsContent","cont","container","marginTop","settingUserDetails","displayPicSettings","doggyProfilePicture","settingsCont","Component"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { GiClick } from 'react-icons/gi';\nimport { RiShieldCheckFill } from 'react-icons/ri';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport {\n    changePassword,\n    deleteAccount,\n    sendVerification,\n    colors\n} from '../../functions';\nimport styles from '../panel_layout.module.css';\nconst [GREEN, WHITE, GREY, BLACK, RED, BLUE_TEXT, BLUE, PURPLE, YELLOW] = ['#4EB848', '#FFFFFF', '#959AAC', '#000000', '#FF0000', '#284ED6', '#1970A7', '#A031AF', '#F0E23D'];\n\nexport default class Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            toShow: 'default',//default, changePassword, verify, whyDeleteAccount,logInToDeleteAccount,\n            toVerify: '',\n            url: null,\n            userDetails: this.props.userDetails,\n            newEmail: this.props.userDetails ? this.props.userDetails.email : '',\n            newPhoneNumber: this.props.userDetails ? this.props.userDetails.phoneNumber : '',\n            currentPassword: '',\n            newPassword: '',\n            confirmNewPassword: '',\n            loading: false,\n            errorMessage: '',\n            deleteAccountReason: '',\n            email1: '',\n            password1: '',\n            timer: 0,\n\n            emailVerified: false,\n            phoneVerified: true,\n\n            verifyText: '',\n\n        };\n    };\n    componentDidMount() {\n        this.setImage(this.state.userDetails.photoRef);\n\n        firebase.database().ref(`users/${this.state.userDetails.userID}/summarizedHistory`).on('value', snap => {\n            if (snap.val())\n                this.setState({ emailVerified: snap.val().emailVerified, phoneVerified: snap.val().phoneVerified });\n        })\n    }\n    setImage = (photoRef) => {\n        firebase.storage().ref(`${photoRef}`).getDownloadURL()\n            .then(result => {\n                this.setState({ url: result })\n            }).catch(error => { console.log(error.message) });\n    };\n    sendVerificationCode = (type) => {\n        this.setState({ timer: 60 }, () => {\n            const time = setInterval(() => {\n                if (this.state.timer == 0)\n                    clearInterval(time);\n                else\n                    this.setState({ timer: this.state.timer - 1 })\n            }, 1000);\n        });\n        if (this.state.timer == 0)\n            switch (type) {\n                case 'email': {\n                    sendVerification(this.state.userDetails.userID,\n                        'email',\n                        'storeAndSend',\n                        '',\n                        '',\n                        this.state.newEmail,\n                        this.state.userDetails.firstName);\n                    this.setState({ toShow: 'verify', toVerify: 'email' });\n                } break;\n                case 'phoneNumber': {\n                    sendVerification(this.state.userDetails.userID,\n                        'phoneNumber',\n                        'storeAndSend',\n                        '',\n                        this.state.newPhoneNumber,\n                        '',\n                        this.state.userDetails.firstName);\n                    this.setState({ toShow: 'verify', toVerify: 'phone number' });\n                } break;\n            };\n    };\n    render() {\n        let content = <></>;\n        if (!this.state.userDetails && this.props.userDetails)\n            this.setState({\n                userDetails: this.props.userDetails,\n                newEmail: this.props.userDetails.email,\n                newPhoneNumber: this.props.userDetails.phoneNumber,\n            }, () => { this.setImage(this.state.userDetails.photoRef); });\n\n        switch (this.state.toShow) {\n            case 'default': {\n                content = (<>\n                    <p className={styles.title} style={{ color: BLACK, marginBottom: '15px' }}>{`User details`}</p>\n\n                    <div className={styles.enterKilometerDiv} style={{ margin: '0px', width: '100%' }}>\n                        <input type=\"text\"\n                            placeholder=\"First Name\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettings} style={{ width: '49%', margin: '0px' }}\n                            value={this.state.userDetails ? this.state.userDetails.firstName : 'First Name'}\n                            disabled={true}\n                        />\n                        <input type=\"text\"\n                            placeholder=\"Last Name\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettings}\n                            style={{ width: '49%', margin: '0px' }}\n                            value={this.state.userDetails ? this.state.userDetails.lastName : 'Last Name'}\n                            disabled={true}\n                        />\n                    </div>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input type=\"text\"\n                            placeholder=\"Email Address\"\n                            className={styles.inputPaymentPanel}\n                            value={this.state.newEmail}\n                            onChange={(event) => { this.setState({ newEmail: event.target.value }) }}\n                            id={styles.inputSettingCont_L} />\n                        {this.state.emailVerified && this.state.userDetails.email == this.state.newEmail ?\n                            <div className={styles.pickPaymentSelected} style={{ backgroundColor: this.props.type == 'Driver' ? '#39A2E5' : '#5EEF56', }} id={styles.inputSettingCont_R}>\n                                <p className={styles.buttonText1} id={styles.settingsVerifyOrNot}>Verified</p>\n                                <RiShieldCheckFill className={styles.settingsVerifyOrNotIcon} color={WHITE} />\n                            </div> :\n                            <div className={styles.pickPaymentSelected}\n                                style={{ backgroundColor: '#FF4040' }}\n                                id={styles.inputSettingCont_R_VERIFYNOW}\n                                onClick={() => { this.sendVerificationCode('email') }}\n                            >\n                                <p className={styles.buttonText1} id={styles.settingsVerifyOrNot}>Verify Now</p>\n                                <GiClick className={styles.settingsVerifyOrNotIcon} color={WHITE} />\n                            </div>}\n                    </div>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input type=\"text\"\n                            placeholder=\"Phone Number\"\n                            className={styles.inputPaymentPanel}\n                            value={this.state.newPhoneNumber}\n                            onChange={(event) => { this.setState({ newPhoneNumber: event.target.value }) }}\n                            id={styles.inputSettingCont_L} />\n                        {this.state.phoneVerified && this.state.userDetails.phoneNumber == this.state.newPhoneNumber ?\n                            <div className={styles.pickPaymentSelected} style={{ backgroundColor: this.props.type == 'Driver' ? '#39A2E5' : '#5EEF56', }} id={styles.inputSettingCont_R}>\n                                <p className={styles.buttonText1} id={styles.settingsVerifyOrNot}>Verified</p>\n                                <RiShieldCheckFill className={styles.settingsVerifyOrNotIcon} color={WHITE} />\n                            </div> :\n                            <div\n                                className={styles.pickPaymentSelected}\n                                style={{ backgroundColor: '#FF4040' }}\n                                id={styles.inputSettingCont_R_VERIFYNOW}\n                                onClick={() => {\n                                    axios.post(`https://us-central1-perch-01.cloudfunctions.net/checkIfPhoneNumberIsFree`, { phoneNumber: this.state.newPhoneNumber })\n                                        .then((r) => {\n                                            if (r.data) {\n                                                this.sendVerificationCode('phoneNumber')\n                                            }\n                                            else\n                                                this.setState({ error: true, errorMessage: 'Phone number already in use by another account' })\n                                        })\n                                        .catch(error => {\n                                            this.setState({ error: true, errorMessage: error.message })\n                                        })\n                                }}>\n                                <p className={styles.buttonText1} id={styles.settingsVerifyOrNot}>Verify Now</p>\n                                <GiClick className={styles.settingsVerifyOrNotIcon} color={WHITE} />\n                            </div>}\n                    </div>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont__} >\n                        <p\n                            onClick={() => { this.setState({ toShow: 'changePassword' }) }}\n                            className={styles.changePasswordButton}\n                            style={this.props.type ? { color: BLUE } : {}}>Change Password</p>\n                        <div\n                            className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: RED, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px' }}\n                            onClick={() => { this.setState({ toShow: 'whyDeleteAccount' }) }}\n                        >\n                            <p className={styles.buttonText1} id={styles.deleteAccountButton}>Delete Account</p>\n                        </div>\n                    </div>\n                </>);\n            } break;\n            case 'changePassword': {\n                content = (<>\n                    <p className={styles.title} style={{ color: BLACK }}>Change Password</p>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input\n                            type=\"password\"\n                            placeholder=\"Current Password\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettingCont_L}\n                            value={this.state.currentPassword}\n                            onChange={(event) => { this.setState({ currentPassword: event.target.value }) }}\n                            style={{ width: '100%' }} />\n\n                    </div>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input\n                            type=\"password\"\n                            placeholder=\"New Password\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettingCont_L}\n                            value={this.state.newPassword}\n                            onChange={(event) => { this.setState({ newPassword: event.target.value }) }}\n                            style={{ width: '100%' }}\n                        />\n\n                    </div>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input\n                            type=\"password\"\n                            placeholder=\"Confirm New Password\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettingCont_L}\n                            style={{ width: '100%' }}\n                            value={this.state.confirmNewPassword}\n                            onChange={(event) => { this.setState({ confirmNewPassword: event.target.value }) }}\n                        />\n\n                    </div>\n                    <p className={styles.em}>{this.state.errorMessage}</p>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont__} >\n                        <div className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: RED, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => {\n                                if (!this.state.loading)\n                                    this.setState({ toShow: 'default', errorMessage: '', currentPassword: '', newPassword: '', confirmNewPassword: '' });\n                            }}>\n                            <p className={styles.buttonText1} id={styles.deleteAccountButton}>Cancel</p>\n                        </div>\n                        <div\n                            className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => {\n                                if (!this.state.loading) {\n                                    if (this.state.newPassword == '')\n                                        this.setState({ errorMessage: 'Please enter a new password' })\n                                    else if (this.state.newPassword != this.state.confirmNewPassword)\n                                        this.setState({ errorMessage: 'New password and confirm new password do not match' })\n                                    else\n                                        changePassword.call(this,\n                                            this.state.userDetails.email,\n                                            this.state.currentPassword,\n                                            this.state.newPassword);\n                                }\n                            }}\n                        >\n                            {this.state.loading ?\n                                <Loader\n                                    type=\"TailSpin\"\n                                    color={WHITE}\n                                    height={'20px'}\n                                    width={'20px'} /> :\n                                <p className={styles.buttonText1} id={styles.deleteAccountButton}>Change Password</p>\n                            }\n                        </div>\n                    </div>\n                </>);\n            } break;\n            case 'verify': {\n                content = (<>\n                    <p className={styles.title} style={{ color: BLACK }}>{`Verify your ${this.state.toVerify}`}</p>\n                    <p className={styles.text} style={{ color: BLACK }}>\n                        Enter the code sent to <span style={{ color: this.props.type == 'Driver' ? BLUE : GREEN }}>{\n                            this.state.toVerify == 'email' ?\n                                this.state.newEmail :\n                                this.state.newPhoneNumber}</span>\n                    </p>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter Code\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettingCont_L} style={{ width: '100%' }}\n                            value={this.state.verifyText}\n                            onChange={(v) => { this.setState({ verifyText: v.target.value }) }}\n                        />\n                    </div>\n                    {this.state.timer == 0 ?\n                        <p className={styles.text} style={{ color: BLACK, fontSize: '80%' }}>\n                            Didn't get a code yet? <span\n                                id={styles.resendCodeSettings}\n                                onClick={() => { this.sendVerificationCode(this.state.toVerify == 'email' ? 'email' : 'phoneNumber') }}\n                                style={{ color: BLUE_TEXT }}>Resend</span>\n                        </p> :\n                        <p className={styles.text} style={{ color: BLACK, fontSize: '80%' }}>\n                            Resend in <span style={{ color: BLUE_TEXT }}>{` 0:${('0' + this.state.timer).slice(-2)}`}</span>\n                        </p>}\n                    <p className={styles.em}>{this.state.errorMessage}</p>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont__} >\n                        <div className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: RED, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => { this.setState({ toShow: 'default', errorMessage: '' }) }}>\n                            <p className={styles.buttonText1} id={styles.deleteAccountButton}>Cancel</p>\n                        </div>\n                        <div\n                            className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => {\n                                const code = this.state.verifyText;\n                                if (code.length != 6) {\n                                    this.setState({ errorMessage: 'Verification code must be 6 characters long' })\n                                } else {\n                                    this.setState({ loading: true }, () => {\n                                        const type = this.state.toVerify == 'email' ? 'email' : 'phoneNumber';\n                                        switch (type) {\n                                            case 'email': {\n                                                axios.post(`https://us-central1-perch-01.cloudfunctions.net/sendVerificationCode`,\n                                                    {\n                                                        userID: this.state.userDetails.userID,\n                                                        type: type,\n                                                        action: 'check',\n                                                        code: code,\n                                                        phoneNumber: '',\n                                                        email: this.state.newEmail,\n                                                        name: this.state.userDetails.firstName\n                                                    })\n                                                    .then((r) => {\n                                                        if (r.data) {\n                                                            axios.post(`https://us-central1-perch-01.cloudfunctions.net/changeEmailAndPhoneNumberAfterVerifying`, {\n                                                                userID: this.state.userDetails.userID,\n                                                                type: type,\n                                                                phoneNumber: '',\n                                                                email: this.state.newEmail,\n                                                            }).then(() => {\n                                                                let userDetails = this.state.userDetails;\n                                                                userDetails.email = this.state.newEmail;\n                                                                this.setState({ toShow: 'default', loading: false, userDetails: userDetails, errorMessage: '' })\n                                                            }).catch((error) => { this.setState({ errorMessage: error.message, loading: false }) })\n                                                        }\n                                                        else\n                                                            this.setState({ errorMessage: 'Validation code is not valid', loading: false })\n                                                    })\n                                                    .catch((error) => { this.setState({ errorMessage: error.message, loading: false }) })\n\n                                            } break;\n                                            case 'phoneNumber': {\n                                                axios.post(`https://us-central1-perch-01.cloudfunctions.net/sendVerificationCode`,\n                                                    {\n                                                        userID: this.state.userDetails.userID,\n                                                        type: type,\n                                                        action: 'check',\n                                                        code: code,\n                                                        phoneNumber: this.state.newPhoneNumber,\n                                                        email: '',\n                                                        name: this.state.userDetails.firstName\n                                                    })\n                                                    .then((r) => {\n                                                        if (r.data) {\n                                                            axios.post(`https://us-central1-perch-01.cloudfunctions.net/changeEmailAndPhoneNumberAfterVerifying`, {\n                                                                userID: this.state.userDetails.userID,\n                                                                type: type,\n                                                                phoneNumber: '',\n                                                                email: this.state.newEmail,\n                                                            }).then(() => {\n                                                                let userDetails = this.state.userDetails;\n                                                                userDetails.phoneNumber = this.state.newPhoneNumber;\n                                                                this.setState({ toShow: 'default', loading: false, userDetails: userDetails, errorMessage: '' })\n                                                            }).catch((error) => { this.setState({ errorMessage: error.message, loading: false }) })\n                                                        }\n                                                        else\n                                                            this.setState({ errorMessage: 'Validation code is not valid', loading: false })\n                                                    })\n                                                    .catch((error) => { this.setState({ errorMessage: error.message, loading: false }) })\n                                            } break;\n                                        }\n                                    })\n                                }\n                            }}\n                        >\n                            {this.state.loading ?\n                                <Loader\n                                    type=\"TailSpin\"\n                                    color={WHITE}\n                                    height={'20px'}\n                                    width={'20px'} /> :\n                                <p className={styles.buttonText1} id={styles.deleteAccountButton}>Verify</p>}\n                        </div>\n                    </div>\n                </>);\n            } break;\n            case 'whyDeleteAccount': {\n                content = (<>\n                    <p className={styles.title} style={{ color: BLACK }}>Are you sure you would like to delete your account?</p>\n                    <p className={styles.text} style={{ color: BLACK }}>\n                        Please describe briefly why you would like to delete your account\n                    </p>\n                    <textarea\n                        type=\"text\"\n                        placeholder=\"Enter your message here\"\n                        className={styles.contactUsContent}\n                        style={{ width: '100%' }}\n                        value={this.state.deleteAccountReason}\n                        onChange={event => { this.setState({ deleteAccountReason: event.target.value }) }}\n                    />\n\n                    <p className={styles.em}>{this.state.errorMessage}</p>\n\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont__} >\n                        <div\n                            className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: RED, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => {\n                                if (this.state.deleteAccountReason == '')\n                                    this.setState({ errorMessage: 'Please enter a reason to delete your account' });\n                                else if (this.state.deleteAccountReason.length < 15)\n                                    this.setState({ errorMessage: 'Please enter a reason longer than 15 characters' });\n                                else\n                                    this.setState({ toShow: 'logInToDeleteAccount', errorMessage: '' })\n                            }}\n                        >\n                            <p className={styles.buttonText1} id={styles.deleteAccountButton}>Delete Account</p>\n                        </div>\n\n                        <div className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => { this.setState({ toShow: 'default', errorMessage: '', deleteAccountReason: '' }) }}>\n                            <p className={styles.buttonText1} id={styles.deleteAccountButton}>Cancel</p>\n                        </div>\n                    </div>\n                </>);\n            } break;\n            case 'logInToDeleteAccount': {\n                content = (<>\n                    <p className={styles.title} style={{ color: BLACK }}>We are sorry to see you leave Perch</p>\n                    <p className={styles.text} style={{ color: BLACK }}>\n                        Please describe briefly why you would like to delete your account\n                    </p>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input type=\"text\"\n                            placeholder=\"Email\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettingCont_L}\n                            style={{ width: '100%' }}\n                            value={this.state.email1}\n                            autoComplete={'off'}\n                            onChange={(event) => { this.setState({ email1: event.target.value }) }} />\n                    </div>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont_}>\n                        <input type=\"password\"\n                            placeholder=\"Password\"\n                            className={styles.inputPaymentPanel}\n                            id={styles.inputSettingCont_L}\n                            style={{ width: '100%' }}\n                            value={this.state.password1}\n                            autoComplete={'off'}\n                            onChange={(event) => { this.setState({ password1: event.target.value }) }} />\n                    </div>\n                    <p className={styles.em}>{this.state.errorMessage}</p>\n                    <div className={styles.enterKilometerDiv} id={styles.inputSettingCont__} >\n                        <div className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: RED, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => {\n                                if (!this.state.loading)\n                                    deleteAccount.call(this,\n                                        this.state.email1,\n                                        this.state.password1);\n                            }}>\n                            {this.state.loading ?\n                                <Loader\n                                    type=\"TailSpin\"\n                                    color={WHITE}\n                                    height={'20px'}\n                                    width={'20px'} /> :\n                                <p className={styles.buttonText1} id={styles.deleteAccountButton}>Delete Account</p>\n                            }\n                        </div>\n                        <div\n                            className={styles.button1}\n                            id={styles.deleteAccountButton_}\n                            style={{ backgroundColor: this.props.type == 'Driver' ? BLUE : GREEN, maxWidth: 'initial', height: '40px', minHeight: 'initial', margin: '0px', width: '49%' }}\n                            onClick={() => { this.setState({ toShow: 'default', errorMessage: '', email1: '', password1: '' }) }}\n                        >\n                            <p className={styles.buttonText1} id={styles.deleteAccountButton}>Cancel</p>\n                        </div>\n                    </div>\n                </>);\n            } break;\n        }\n        return (\n            <div className={styles.cont}>\n\n                <div className={styles.container} style={{ backgroundColor: WHITE, marginTop: '20px', marginBottom: '150px' }}>\n                    <p className={styles.title} style={{ color: BLACK }}>Rider settings</p>\n                    <div className={styles.settingUserDetails} >\n                        <div className={styles.displayPicSettings}>\n                            <img src={this.state.url} className={styles.doggyProfilePicture} />\n                        </div>\n                        <div className={styles.settingsCont}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n};"]},"metadata":{},"sourceType":"module"}