{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport styles from '../panel_layout.module.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst [GREEN, WHITE, GREY, BLACK, RED, BLUE_TEXT, BLUE, PURPLE, YELLOW] = ['#4EB848', '#FFFFFF', '#959AAC', '#000000', '#FF0000', '#284ED6', '#1970A7', '#A031AF', '#F0E23D'];\nexport class UploadDocuments extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"submitDoc\", () => {\n      //make position for other arrays item\n      const userID = this.state.userID;\n      const vehicleRandomID = this.state.vehicleRandomID;\n      const docID = this.state.docID[this.state.selectedIndex];\n      let toPut = '';\n      if (docID == 'vehicleInsurance' || docID == 'vehicleRegistration' || docID == 'vehicleInspection' || docID == 'vehicleImage') toPut = `driverVehicleDocs/${userID}/${vehicleRandomID}/${docID}`;else if (docID == 'driversLicence' || docID == 'proofOfWorkEligibility' || docID == 'profilePicture' || docID == 'epsBackgroundCheck') toPut = `driverVehicleDocs/${userID}/driverDetails/${docID}`; //WHERE THE RIVER DETAILS ARE WLONG WITH THE PROFILE PHOTO\n\n      firebase.storage().ref(toPut).put(this.state.s[this.state.selectedIndex]).then(() => {\n        firebase.database().ref(`driverApplications/${userID}`).update({\n          documentsSubmitted: JSON.stringify(this.state.docNames)\n        }).then(() => {\n          this.setState({\n            loading: false\n          });\n        }).catch(error => {\n          console.log(error.message);\n          this.setState({\n            loading: false\n          });\n        });\n      }).catch(error => {\n        console.log(error.message);\n        this.setState({\n          loading: false\n        });\n      });\n    });\n\n    _defineProperty(this, \"storeVehicleDetails\", () => {\n      const userID = this.state.userID;\n      const dateFormat = this.state.dateFormat;\n      this.setState({\n        saveLoading: true\n      }, () => {\n        firebase.database().ref(`vehicles/${userID}`).update({\n          [dateFormat]: {\n            color: this.state.vehicleColor,\n            displayImage: `driverVehicleDocs/${userID}/${this.state.vehicleRandomID}/vehicleImage`,\n            make: this.state.vehicleMake,\n            model: this.state.vehicleModel,\n            plateNumber: this.state.plateNumber,\n            verifyStatus: 'UNVERIFIED',\n            year: this.state.vehicleYear\n          },\n          selected: dateFormat\n        }).then(() => {\n          this.setState({\n            saveLoading: false\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.message\n          });\n        });\n      });\n    });\n\n    _defineProperty(this, \"nextStage\", () => {\n      firebase.database().ref(`driverApplications/${this.state.userID}`).update({\n        stage: 'three',\n        progress: JSON.stringify(['done', 'done', 'ongoing', 'undone', 'undone'])\n      }).then(() => {\n        firebase.database().ref(`completedDriverApplications`).update({\n          [this.state.userID]: 'UNPROCESSED'\n        }).catch(error => {\n          console.log(error.message);\n        });\n      }).then(() => {\n        this.props.nextStage('three');\n      }).catch(error => {\n        console.log(error.message);\n      });\n    });\n\n    this.state = {\n      uploadDocs: false,\n      userID: this.props.userID,\n      vehicleRandomID: '',\n      dateFormat: '',\n      s: [//ORDER IS IMPORTANT FOR SERVER\n      false, // \"Driver's licence\",\n      false, // \"Proof of work eligibility\",\n      false, // \"EPS background check\",\n      false, // \"Vehicle insurance\",\n      false, // \"Vehicle registration\",\n      false, // \"Vehicle inspection\",\n      false, // \"Photo of Vehicle (Must be 4:3)\"\n      false // \"Profile Photo (Must be 1:1)\"\n      ],\n      docList: [\"Driver's licence\", \"Proof of work eligibility\", \"EPS background check\", \"Vehicle insurance\", \"Vehicle registration\", \"Vehicle inspection\", \"Photo of Vehicle (Must be 4:3)\", \"Profile Photo (Must be 1:1)\"],\n      docID: [\"driversLicence\", \"proofOfWorkEligibility\", \"epsBackgroundCheck\", \"vehicleInsurance\", \"vehicleRegistration\", \"vehicleInspection\", \"vehicleImage\", \"profilePicture\"],\n      docNames: [false, // \"Driver's licence\",\n      false, // \"Proof of work eligibility\",\n      false, // \"EPS background check\",\n      false, // \"Vehicle insurance\",\n      false, // \"Vehicle registration\",\n      false, // \"Vehicle inspection\",\n      false, // \"Photo of Vehicle (Must be 4:3)\"\n      false // \"Profile Photo (Must be 1:1)\"\n      ],\n      vehicleMake: '',\n      vehicleModel: '',\n      vehicleYear: '',\n      vehicleColor: '',\n      plateNumber: '',\n      selectedIndex: 0,\n      loading: false,\n      saveLoading: false,\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    firebase.database().ref(`driverApplications/${this.state.userID}`).once('value', snapshot => {\n      if (snapshot.val().documentsSubmitted) {\n        this.setState({\n          s: JSON.parse(snapshot.val().documentsSubmitted),\n          docNames: JSON.parse(snapshot.val().documentsSubmitted)\n        });\n      }\n\n      ;\n      firebase.database().ref(`vehicles/${this.state.userID}/${snapshot.val().dateFormat}`).once('value', snap => {\n        if (snap.val()) {\n          const {\n            make,\n            model,\n            plateNumber,\n            year,\n            color\n          } = snap.val();\n          this.setState({\n            vehicleMake: make,\n            vehicleModel: model,\n            vehicleYear: year,\n            vehicleColor: color,\n            plateNumber: plateNumber\n          });\n        }\n      });\n      this.setState({\n        vehicleRandomID: snapshot.val().vehicleRandomID,\n        dateFormat: snapshot.val().dateFormat\n      });\n    }).catch(error => {\n      console.log(error.message);\n    });\n  }\n\n  render() {\n    let requirements = [];\n\n    for (let i = 0; i < this.state.docList.length; i++) requirements.push( /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.driverFAQ_PICDESC,\n      id: styles.driver_APP_TOP_RADIO_CONT_,\n      onClick: () => {\n        this.setState({\n          uploadDocs: true,\n          selectedIndex: i,\n          errorMessage: ''\n        });\n      },\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        className: styles.text,\n        style: {\n          color: GREY,\n          width: 'initial',\n          margin: '0px',\n          marginLeft: '10px'\n        },\n        children: this.state.docList[i]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.driver_APP_RADIO,\n        style: {\n          backgroundColor: this.state.s[i] ? GREEN : `rgba(78, 184, 72,0.5)`\n        },\n        children: this.state.s[i] ? /*#__PURE__*/_jsx(AiOutlineCheck, {\n          color: WHITE,\n          size: '15px'\n        }) : /*#__PURE__*/_jsx(_Fragment, {})\n      })]\n    }));\n\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.cont,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.container,\n        style: {\n          backgroundColor: WHITE,\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.driver_APP_TOPCONT,\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.driver_APP_TOP_TEXT,\n            style: {\n              color: WHITE\n            },\n            children: \"Vehicle Confirmation\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.driver_APP_TOP_TEXT,\n            style: {\n              color: WHITE\n            },\n            children: \"Upload Documents\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.driver_APP_TOP_TEXT,\n            children: \"Application Status\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.driver_APP_TOP_TEXT_NUMB,\n            style: {\n              color: WHITE\n            },\n            children: \"1\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.driver_APP_TOP_TEXT_NUMB,\n            style: {\n              color: WHITE\n            },\n            children: \"2\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.driver_APP_TOP_TEXT_NUMB,\n            children: \"3\"\n          }), /*#__PURE__*/_jsx(\"img\", {\n            src: \"/applicationDashArrow_.svg\",\n            className: styles.applicationDashArrow,\n            style: {\n              width: '69%'\n            }\n          })]\n        }), this.state.uploadDocs ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: BLACK\n            },\n            children: `Upload your ${this.state.docList[this.state.selectedIndex]}`\n          }), /*#__PURE__*/_jsxs(\"p\", {\n            className: styles.text,\n            style: {\n              color: GREY\n            },\n            children: [\"Documents should be submitted as a scanned pdf or a photograph of the document.\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"a\", {\n              href: \"/s/articles/procedures_for_taking_a_picture\",\n              style: {\n                fontFamily: 'Gilroy-Semibold'\n              },\n              children: \"See details for taking vehicle and profile photo's here\"\n            }), /*#__PURE__*/_jsx(\"br\", {}), \"Pictures should be :\", /*#__PURE__*/_jsx(\"br\", {}), \"\\u2022 Taken in a well place \", /*#__PURE__*/_jsx(\"br\", {}), \"\\u2022 Show details clearly\"]\n          }), this.state.s[this.state.selectedIndex] ? /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.uploadDocumentIconCont,\n            onClick: () => {\n              this.document.click();\n            },\n            style: {\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsx(\"img\", {\n              src: \"/documentsSubmitted.svg\",\n              className: styles.uploadDocumentPIC,\n              style: {\n                height: '70%',\n                marginTop: '10px'\n              }\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.text,\n              style: {\n                width: 'initial',\n                fontFamily: 'Gilroy-Semibold',\n                fontSize: '95%',\n                color: GREY,\n                maxWidth: '90%'\n              },\n              children: this.state.s[this.state.selectedIndex].name\n            })]\n          }) : /*#__PURE__*/_jsx(\"div\", {\n            className: styles.uploadDocumentIconCont,\n            onClick: () => {\n              this.document.click();\n            },\n            children: /*#__PURE__*/_jsx(\"img\", {\n              src: \"/uploadDocumentIcon.svg\",\n              className: styles.uploadDocumentPIC\n            })\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.em,\n            style: {\n              textAlign: 'initial'\n            },\n            children: this.state.errorMessage\n          })]\n        }) : /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: BLACK\n            },\n            children: `Upload Documents`\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: GREY\n            },\n            children: \"All that is left to do is to submit the required documents and you\\u2019re on your way to becoming a Perch driver.\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: GREY,\n              fontSize: '95%',\n              marginTop: '20px'\n            },\n            children: `Required Documents`\n          }), requirements, /*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: GREY,\n              fontSize: '95%',\n              marginTop: '20px'\n            },\n            children: `Vehicle details`\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.driverApplicationTextinput_OUTER,\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter vehicle make\",\n              className: styles.driverApplicationTextinput_CONT //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n              ,\n              value: this.state.vehicleMake,\n              onChange: event => {\n                this.setState({\n                  vehicleMake: event.target.value\n                });\n              }\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter vehicle model\",\n              className: styles.driverApplicationTextinput_CONT //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n              ,\n              value: this.state.vehicleModel,\n              onChange: event => {\n                this.setState({\n                  vehicleModel: event.target.value\n                });\n              }\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.driverApplicationTextinput_OUTER,\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter vehicle color\",\n              className: styles.driverApplicationTextinput_CONT //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n              ,\n              value: this.state.vehicleColor,\n              onChange: event => {\n                this.setState({\n                  vehicleColor: event.target.value\n                });\n              }\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter vehicle year (XXXX)\",\n              className: styles.driverApplicationTextinput_CONT //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n              ,\n              value: this.state.vehicleYear,\n              onChange: event => {\n                this.setState({\n                  vehicleYear: event.target.value\n                });\n              }\n            })]\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter plate number\",\n            className: styles.driverApplicationTextinput_CONT,\n            style: {\n              fontFamily: 'Gilroy-Bold',\n              color: GREEN,\n              width: '90%'\n            },\n            value: this.state.plateNumber,\n            onChange: event => {\n              this.setState({\n                plateNumber: event.target.value\n              });\n            }\n          }), /*#__PURE__*/_jsx(\"a\", {\n            className: styles.button1,\n            id: styles.sendMessageContactUS,\n            style: {\n              width: '90%',\n              marginTop: '20px',\n              maxWidth: 'initial'\n            },\n            onClick: () => {\n              this.storeVehicleDetails();\n            },\n            children: this.state.saveLoading ? /*#__PURE__*/_jsx(Loader, {\n              type: \"TailSpin\",\n              color: WHITE,\n              height: '20px',\n              width: '20px'\n            }) : /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Save Vehicle details\"\n            })\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.em,\n            style: {\n              textAlign: 'initial'\n            },\n            children: this.state.errorMessage\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"input\", {\n        type: \"file\",\n        ref: ref => this.document = ref,\n        accept: \".jpg,.jpeg,.png,.pdf\",\n        className: styles.driverVehicle_INPUT,\n        onChange: event => {\n          if (event.target.files.length != 0) {\n            let files = this.state.s;\n            let docNames = this.state.docNames;\n            const filesize = (event.target.files[0].size / 1024 / 1024).toFixed(4); // MB\n\n            if (filesize > 15) this.setState({\n              errorMessage: 'File is too large. A maximum of 15 megabytes is permitted for uploads'\n            });else {\n              files[this.state.selectedIndex] = event.target.files[0];\n              docNames[this.state.selectedIndex] = {\n                name: event.target.files[0].name\n              };\n              this.setState({\n                s: files,\n                docNames: docNames,\n                loading: true\n              }, () => {\n                this.submitDoc();\n              });\n            }\n          }\n        }\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.contactUsLC,\n        style: {\n          marginTop: '15px',\n          marginBottom: '150px'\n        },\n        children: [this.state.uploadDocs ? /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.driverFAQ_PICDESC,\n          style: {\n            width: '100%',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsx(\"a\", {\n            className: styles.button1,\n            id: styles.sendMessageContactUS,\n            onClick: () => {\n              if (!this.state.loading) this.setState({\n                uploadDocs: false,\n                errorMessage: ''\n              });\n            },\n            style: {\n              backgroundColor: RED,\n              width: '48%'\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Cancel\"\n            })\n          }), /*#__PURE__*/_jsx(\"a\", {\n            className: styles.button1,\n            id: styles.sendMessageContactUS,\n            style: {\n              width: '48%'\n            },\n            onClick: () => {\n              if (!this.state.loading) {\n                if (this.state.s[this.state.selectedIndex]) this.setState({\n                  uploadDocs: false,\n                  errorMessage: ''\n                });else this.document.click();\n              }\n            },\n            children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n              type: \"TailSpin\",\n              color: WHITE,\n              height: '20px',\n              width: '20px'\n            }) : /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: this.state.s[this.state.selectedIndex] ? 'Done' : 'Upload'\n            })\n          })]\n        }) : /*#__PURE__*/_jsx(\"a\", {\n          className: styles.button1,\n          id: styles.sendMessageContactUS,\n          onClick: () => {\n            if (this.state.docNames.includes(false)) this.setState({\n              errorMessage: 'Please upload all the required documents'\n            });else if (this.state.vehicleYear.length <= 3 || this.state.vehicleColor.length <= 2 || this.state.vehicleModel.length <= 3 || this.state.vehicleMake.length <= 3 || this.state.plateNumber.length <= 3) this.setState({\n              errorMessage: 'Please fill the vehicle details completely and correctly.'\n            });else this.setState({\n              loading: true\n            }, () => {\n              this.nextStage();\n            });\n          },\n          children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n            type: \"TailSpin\",\n            color: WHITE,\n            height: '20px',\n            width: '20px'\n          }) : /*#__PURE__*/_jsx(\"p\", {\n            className: styles.buttonText1,\n            children: `Confirm & Submit`\n          })\n        }), /*#__PURE__*/_jsxs(\"p\", {\n          className: styles.contactUsLasttext,\n          children: [\"Having issues? \", /*#__PURE__*/_jsx(\"a\", {\n            href: \"/contact_us\",\n            children: /*#__PURE__*/_jsx(\"span\", {\n              id: styles.driver_APP_CU1,\n              children: \"Contact Us\"\n            })\n          }), \".  See \", /*#__PURE__*/_jsx(\"a\", {\n            href: \"/s/articles/procedures_for_taking_a_picture\",\n            children: /*#__PURE__*/_jsx(\"span\", {\n              id: styles.driver_APP_CU1,\n              children: \"guidelines for taking vehicle and profile photos\"\n            })\n          }), \".\", /*#__PURE__*/_jsx(\"br\", {}), \"By clicking Confirm & Submit you confirming that all the information you provided here is accurate and correct.\"]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          height: '100px',\n          width: '20px',\n          backgroundColor: 'transparent'\n        }\n      })]\n    });\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/edokoh9/Documents/PerchWebsite/perch/functions/panels/driverApplicationPanels/uploadDocuments.js"],"names":["firebase","React","AiOutlineCheck","Loader","styles","GREEN","WHITE","GREY","BLACK","RED","BLUE_TEXT","BLUE","PURPLE","YELLOW","UploadDocuments","Component","constructor","props","userID","state","vehicleRandomID","docID","selectedIndex","toPut","storage","ref","put","s","then","database","update","documentsSubmitted","JSON","stringify","docNames","setState","loading","catch","error","console","log","message","dateFormat","saveLoading","color","vehicleColor","displayImage","make","vehicleMake","model","vehicleModel","plateNumber","verifyStatus","year","vehicleYear","selected","stage","progress","nextStage","uploadDocs","docList","errorMessage","componentDidMount","once","snapshot","val","parse","snap","render","requirements","i","length","push","driverFAQ_PICDESC","driver_APP_TOP_RADIO_CONT_","text","width","margin","marginLeft","driver_APP_RADIO","backgroundColor","cont","container","marginTop","driver_APP_TOPCONT","driver_APP_TOP_TEXT","driver_APP_TOP_TEXT_NUMB","applicationDashArrow","title","fontFamily","uploadDocumentIconCont","document","click","flexDirection","uploadDocumentPIC","height","fontSize","maxWidth","name","em","textAlign","driverApplicationTextinput_OUTER","driverApplicationTextinput_CONT","event","target","value","button1","sendMessageContactUS","storeVehicleDetails","buttonText1","driverVehicle_INPUT","files","filesize","size","toFixed","submitDoc","contactUsLC","marginBottom","justifyContent","includes","contactUsLasttext","driver_APP_CU1"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport styles from '../panel_layout.module.css';\nconst [GREEN, WHITE, GREY, BLACK, RED, BLUE_TEXT, BLUE, PURPLE, YELLOW] = ['#4EB848', '#FFFFFF', '#959AAC', '#000000', '#FF0000', '#284ED6', '#1970A7', '#A031AF', '#F0E23D'];\n\n\nexport class UploadDocuments extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uploadDocs: false,\n            userID: this.props.userID,\n            vehicleRandomID: '',\n            dateFormat: '',\n\n            s: [//ORDER IS IMPORTANT FOR SERVER\n                false, // \"Driver's licence\",\n                false, // \"Proof of work eligibility\",\n                false, // \"EPS background check\",\n                false, // \"Vehicle insurance\",\n                false, // \"Vehicle registration\",\n                false, // \"Vehicle inspection\",\n                false, // \"Photo of Vehicle (Must be 4:3)\"\n                false, // \"Profile Photo (Must be 1:1)\"\n            ],\n            docList: [\n                \"Driver's licence\",\n                \"Proof of work eligibility\",\n                \"EPS background check\",\n                \"Vehicle insurance\",\n                \"Vehicle registration\",\n                \"Vehicle inspection\",\n                \"Photo of Vehicle (Must be 4:3)\",\n                \"Profile Photo (Must be 1:1)\"\n\n            ],\n            docID: [\n                \"driversLicence\",\n                \"proofOfWorkEligibility\",\n                \"epsBackgroundCheck\",\n                \"vehicleInsurance\",\n                \"vehicleRegistration\",\n                \"vehicleInspection\",\n                \"vehicleImage\",\n                \"profilePicture\"\n\n            ],\n            docNames: [\n                false, // \"Driver's licence\",\n                false, // \"Proof of work eligibility\",\n                false, // \"EPS background check\",\n                false, // \"Vehicle insurance\",\n                false, // \"Vehicle registration\",\n                false, // \"Vehicle inspection\",\n                false, // \"Photo of Vehicle (Must be 4:3)\"\n                false, // \"Profile Photo (Must be 1:1)\"\n            ],\n\n            vehicleMake: '',\n            vehicleModel: '',\n            vehicleYear: '',\n            vehicleColor: '',\n            plateNumber: '',\n\n            selectedIndex: 0,\n            loading: false,\n            saveLoading: false,\n            errorMessage: '',\n\n        };\n    };\n    componentDidMount() {\n        firebase.database().ref(`driverApplications/${this.state.userID}`).once('value', snapshot => {\n            if (snapshot.val().documentsSubmitted) {\n                this.setState({ s: JSON.parse(snapshot.val().documentsSubmitted), docNames: JSON.parse(snapshot.val().documentsSubmitted) });\n            };\n            firebase.database().ref(`vehicles/${this.state.userID}/${snapshot.val().dateFormat}`).once('value', snap => {\n                if (snap.val()) {\n                    const { make, model, plateNumber, year, color } = snap.val();\n                    this.setState({\n                        vehicleMake: make,\n                        vehicleModel: model,\n                        vehicleYear: year,\n                        vehicleColor: color,\n                        plateNumber: plateNumber,\n                    })\n                }\n            })\n            this.setState({ vehicleRandomID: snapshot.val().vehicleRandomID, dateFormat: snapshot.val().dateFormat })\n        }).catch(error => { console.log(error.message) });\n    };\n\n    submitDoc = () => {//make position for other arrays item\n        const userID = this.state.userID;\n        const vehicleRandomID = this.state.vehicleRandomID;\n        const docID = this.state.docID[this.state.selectedIndex];\n        let toPut = '';\n        if (docID == 'vehicleInsurance' || docID == 'vehicleRegistration' || docID == 'vehicleInspection' || docID == 'vehicleImage')\n            toPut = `driverVehicleDocs/${userID}/${vehicleRandomID}/${docID}`;\n        else if (docID == 'driversLicence' || docID == 'proofOfWorkEligibility' || docID == 'profilePicture' || docID == 'epsBackgroundCheck')\n            toPut = `driverVehicleDocs/${userID}/driverDetails/${docID}`;//WHERE THE RIVER DETAILS ARE WLONG WITH THE PROFILE PHOTO\n\n        firebase.storage().ref(toPut)\n            .put(this.state.s[this.state.selectedIndex])\n            .then(() => {\n                firebase.database().ref(`driverApplications/${userID}`).update({\n                    documentsSubmitted: JSON.stringify(this.state.docNames),\n                })\n                    .then(() => { this.setState({ loading: false }) })\n                    .catch(error => {\n                        console.log(error.message);\n                        this.setState({ loading: false });\n                    })\n            })\n            .catch(error => {\n                console.log(error.message);\n                this.setState({ loading: false });\n            });\n    };\n    storeVehicleDetails = () => {\n        const userID = this.state.userID;\n        const dateFormat = this.state.dateFormat;\n        this.setState({ saveLoading: true }, () => {\n            firebase.database().ref(`vehicles/${userID}`).update({\n                [dateFormat]: {\n                    color: this.state.vehicleColor,\n                    displayImage: `driverVehicleDocs/${userID}/${this.state.vehicleRandomID}/vehicleImage`,\n                    make: this.state.vehicleMake,\n                    model: this.state.vehicleModel,\n                    plateNumber: this.state.plateNumber,\n                    verifyStatus: 'UNVERIFIED',\n                    year: this.state.vehicleYear,\n                },\n                selected: dateFormat,\n            })\n                .then(() => {\n                    this.setState({ saveLoading: false });\n                })\n                .catch(error => { this.setState({ error: error.message }) })\n        })\n    };\n    nextStage = () => {\n        firebase.database().ref(`driverApplications/${this.state.userID}`).update({\n            stage: 'three',\n            progress: JSON.stringify(['done', 'done', 'ongoing', 'undone', 'undone']),\n        })\n            .then(() => {\n                firebase.database().ref(`completedDriverApplications`).update({\n                    [this.state.userID]: 'UNPROCESSED',\n                }).catch(error => { console.log(error.message) })\n            })\n            .then(() => { this.props.nextStage('three'); })\n            .catch(error => { console.log(error.message) })\n\n    }\n    render() {\n        let requirements = [];\n        for (let i = 0; i < this.state.docList.length; i++)\n            requirements.push(\n                <div className={styles.driverFAQ_PICDESC} id={styles.driver_APP_TOP_RADIO_CONT_}\n                    onClick={() => { this.setState({ uploadDocs: true, selectedIndex: i, errorMessage: '' }) }}>\n                    <p className={styles.text} style={{ color: GREY, width: 'initial', margin: '0px', marginLeft: '10px' }}>{this.state.docList[i]}</p>\n                    <div className={styles.driver_APP_RADIO} style={{ backgroundColor: this.state.s[i] ? GREEN : `rgba(78, 184, 72,0.5)` }}>\n                        {this.state.s[i] ? <AiOutlineCheck color={WHITE} size={'15px'} /> : <></>}\n                    </div>\n                </div>\n            );\n\n        return (\n            <div className={styles.cont}>\n                <div className={styles.container} style={{ backgroundColor: WHITE, marginTop: '20px', }}>\n                    <div className={styles.driver_APP_TOPCONT}>\n                        <p className={styles.driver_APP_TOP_TEXT} style={{ color: WHITE }}>Vehicle Confirmation</p>\n                        <p className={styles.driver_APP_TOP_TEXT} style={{ color: WHITE }}>Upload Documents</p>\n                        <p className={styles.driver_APP_TOP_TEXT}>Application Status</p>\n\n                        <p className={styles.driver_APP_TOP_TEXT_NUMB} style={{ color: WHITE }}>1</p>\n                        <p className={styles.driver_APP_TOP_TEXT_NUMB} style={{ color: WHITE }}>2</p>\n                        <p className={styles.driver_APP_TOP_TEXT_NUMB}>3</p>\n                        <img src=\"/applicationDashArrow_.svg\" className={styles.applicationDashArrow} style={{ width: '69%' }} />\n                    </div>\n                    {\n                        this.state.uploadDocs ?\n                            <>\n                                <p className={styles.title} style={{ color: BLACK }}>{`Upload your ${this.state.docList[this.state.selectedIndex]}`}</p>\n                                <p className={styles.text} style={{ color: GREY }}>\n                                    Documents should be submitted as a scanned pdf or a photograph of the document.<br />\n                                    <a href='/s/articles/procedures_for_taking_a_picture' style={{ fontFamily: 'Gilroy-Semibold' }}>See details for taking vehicle and profile photo's here</a><br />\n                                    Pictures should be :<br />\n                                    • Taken in a well place <br />\n                                    • Show details clearly\n                                </p>\n\n                                {this.state.s[this.state.selectedIndex] ?\n                                    <div\n                                        className={styles.uploadDocumentIconCont}\n                                        onClick={() => { this.document.click() }}\n                                        style={{ flexDirection: 'column' }}>\n                                        <img src=\"/documentsSubmitted.svg\" className={styles.uploadDocumentPIC} style={{ height: '70%', marginTop: '10px' }} />\n                                        <p className={styles.text}\n                                            style={{ width: 'initial', fontFamily: 'Gilroy-Semibold', fontSize: '95%', color: GREY, maxWidth: '90%' }}>\n                                            {this.state.s[this.state.selectedIndex].name}\n                                        </p>\n                                    </div> :\n                                    <div className={styles.uploadDocumentIconCont} onClick={() => { this.document.click() }}>\n                                        <img src='/uploadDocumentIcon.svg' className={styles.uploadDocumentPIC} />\n                                    </div>\n                                }\n                                <p className={styles.em} style={{ textAlign: 'initial' }}>{this.state.errorMessage}</p>\n                            </>\n                            :\n                            <>\n                                <p className={styles.title} style={{ color: BLACK }}>{`Upload Documents`}</p>\n                                <p className={styles.text} style={{ color: GREY }}>\n                                    All that is left to do is to submit the required documents and you’re on your way to becoming a Perch driver.\n                                </p>\n                                <p className={styles.title} style={{ color: GREY, fontSize: '95%', marginTop: '20px' }}>{`Required Documents`}</p>\n                                {requirements}\n                                <p className={styles.title} style={{ color: GREY, fontSize: '95%', marginTop: '20px' }}>{`Vehicle details`}</p>\n                                <div className={styles.driverApplicationTextinput_OUTER}>\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Enter vehicle make\"\n                                        className={styles.driverApplicationTextinput_CONT}\n                                        //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n                                        value={this.state.vehicleMake}\n                                        onChange={event => {\n                                            this.setState({ vehicleMake: event.target.value });\n                                        }}\n                                    />\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Enter vehicle model\"\n                                        className={styles.driverApplicationTextinput_CONT}\n                                        //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n                                        value={this.state.vehicleModel}\n                                        onChange={event => {\n                                            this.setState({ vehicleModel: event.target.value });\n                                        }}\n                                    />\n                                </div>\n                                <div className={styles.driverApplicationTextinput_OUTER}>\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Enter vehicle color\"\n                                        className={styles.driverApplicationTextinput_CONT}\n                                        //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n                                        value={this.state.vehicleColor}\n                                        onChange={event => {\n                                            this.setState({ vehicleColor: event.target.value });\n                                        }}\n                                    />\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Enter vehicle year (XXXX)\"\n                                        className={styles.driverApplicationTextinput_CONT}\n                                        //style={{ width: '150px', margin: '0px', fontSize: '90%', border: '1px solid rgba(149, 154, 172, 0.5)' }}\n                                        value={this.state.vehicleYear}\n                                        onChange={event => {\n                                            this.setState({ vehicleYear: event.target.value });\n                                        }}\n                                    />\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Enter plate number\"\n                                    className={styles.driverApplicationTextinput_CONT}\n                                    style={{ fontFamily: 'Gilroy-Bold', color: GREEN, width: '90%' }}\n                                    value={this.state.plateNumber}\n                                    onChange={event => {\n                                        this.setState({ plateNumber: event.target.value });\n                                    }}\n                                />\n\n                                <a className={styles.button1} id={styles.sendMessageContactUS}\n                                    style={{ width: '90%', marginTop: '20px', maxWidth: 'initial' }}\n                                    onClick={() => {\n                                        this.storeVehicleDetails();\n                                    }}>\n                                    {this.state.saveLoading ?\n                                        <Loader\n                                            type=\"TailSpin\"\n                                            color={WHITE}\n                                            height={'20px'}\n                                            width={'20px'} /> :\n                                        <p className={styles.buttonText1}>Save Vehicle details</p>}\n                                </a>\n                                <p className={styles.em} style={{ textAlign: 'initial' }}>{this.state.errorMessage}</p>\n                            </>\n                    }\n                </div>\n                <input type='file'\n                    ref={(ref) => this.document = ref}\n                    accept=\".jpg,.jpeg,.png,.pdf\"\n                    className={styles.driverVehicle_INPUT}\n                    onChange={event => {\n                        if (event.target.files.length != 0) {\n                            let files = this.state.s;\n                            let docNames = this.state.docNames;\n                            const filesize = ((event.target.files[0].size / 1024) / 1024).toFixed(4); // MB\n                            if (filesize > 15)\n                                this.setState({ errorMessage: 'File is too large. A maximum of 15 megabytes is permitted for uploads' });\n                            else {\n                                files[this.state.selectedIndex] = event.target.files[0];\n                                docNames[this.state.selectedIndex] = { name: event.target.files[0].name };\n                                this.setState({ s: files, docNames: docNames, loading: true }, () => { this.submitDoc(); });\n                            }\n                        }\n                    }} />\n                <div className={styles.contactUsLC} style={{ marginTop: '15px', marginBottom: '150px' }}>\n                    {this.state.uploadDocs ?\n                        <div className={styles.driverFAQ_PICDESC} style={{ width: '100%', justifyContent: 'space-between' }}>\n                            <a className={styles.button1} id={styles.sendMessageContactUS}\n                                onClick={() => {\n                                    if (!this.state.loading)\n                                        this.setState({ uploadDocs: false, errorMessage: '' })\n                                }}\n                                style={{ backgroundColor: RED, width: '48%' }}>\n                                <p className={styles.buttonText1}>Cancel</p>\n                            </a>\n\n                            <a className={styles.button1}\n                                id={styles.sendMessageContactUS}\n                                style={{ width: '48%' }}\n                                onClick={() => {\n                                    if (!this.state.loading) {\n                                        if (this.state.s[this.state.selectedIndex])\n                                            this.setState({ uploadDocs: false, errorMessage: '' })\n                                        else\n                                            this.document.click();\n                                    }\n                                }}>\n                                {this.state.loading ?\n                                    <Loader\n                                        type=\"TailSpin\"\n                                        color={WHITE}\n                                        height={'20px'}\n                                        width={'20px'} /> :\n                                    <p className={styles.buttonText1}>{this.state.s[this.state.selectedIndex] ? 'Done' : 'Upload'}</p>\n                                }\n                            </a>\n                        </div>\n                        :\n                        <a className={styles.button1} id={styles.sendMessageContactUS}\n                            onClick={() => {\n                                if (this.state.docNames.includes(false))\n                                    this.setState({ errorMessage: 'Please upload all the required documents' });\n                                else if (\n                                    this.state.vehicleYear.length <= 3 ||\n                                    this.state.vehicleColor.length <= 2 ||\n                                    this.state.vehicleModel.length <= 3 ||\n                                    this.state.vehicleMake.length <= 3 ||\n                                    this.state.plateNumber.length <= 3)\n                                    this.setState({ errorMessage: 'Please fill the vehicle details completely and correctly.' });\n                                else\n                                    this.setState({ loading: true }, () => {\n                                        this.nextStage();\n                                    })\n                            }}>\n                            {this.state.loading ?\n                                <Loader\n                                    type=\"TailSpin\"\n                                    color={WHITE}\n                                    height={'20px'}\n                                    width={'20px'} /> :\n                                <p className={styles.buttonText1}>{`Confirm & Submit`}</p>}\n                        </a>}\n                    <p className={styles.contactUsLasttext}>\n                        Having issues? <a href='/contact_us'><span id={styles.driver_APP_CU1}>Contact Us</span></a>.  See <a href='/s/articles/procedures_for_taking_a_picture'><span id={styles.driver_APP_CU1}>guidelines for taking vehicle and profile photos</span></a>.<br />\n                        By clicking Confirm & Submit you confirming that all the information you provided here is accurate and correct.\n                    </p>\n                </div>\n                <div style={{ height: '100px', width: '20px', backgroundColor: 'transparent' }}></div>\n            </div>\n        )\n\n    }\n};"]},"metadata":{},"sourceType":"module"}