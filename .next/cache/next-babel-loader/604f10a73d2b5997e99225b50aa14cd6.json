{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport EmailEditor from 'react-email-editor';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport styles from '../panel_layout.module.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst [GREEN, WHITE, GREY, BLACK, RED, BLUE_TEXT, BLUE, PURPLE, YELLOW] = ['#4EB848', '#FFFFFF', '#959AAC', '#000000', '#FF0000', '#284ED6', '#1970A7', '#A031AF', '#F0E23D'];\nexport default class SendAnEmail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadResult\", () => {\n      if (this.state.userDetails) {}\n    });\n\n    _defineProperty(this, \"exportHtml\", () => {\n      this.emailEditor.current.editor.exportHtml(data => {\n        const {\n          design,\n          html\n        } = data;\n        console.log('exportHtml', html);\n      });\n    });\n\n    _defineProperty(this, \"onLoad\", () => {// you can load your template here;\n      // const templateJson = {};\n      // emailEditorRef.current.editor.loadDesign(templateJson);\n    });\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.loadResult();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: styles.cont,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.container,\n        style: {\n          backgroundColor: WHITE,\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          className: styles.title,\n          style: {\n            color: BLACK,\n            marginBottom: '30px'\n          },\n          children: \"Send an Email\"\n        }), /*#__PURE__*/_jsx(EmailEditor, {\n          ref: ref => this.emailEditor = ref,\n          style: {\n            width: '80%'\n          },\n          onLoad: this.onLoad\n        })]\n      })\n    });\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/edokoh9/Documents/PerchWebsite/perch/functions/panels/adminPanels/sendAnEmail.js"],"names":["React","EmailEditor","styles","GREEN","WHITE","GREY","BLACK","RED","BLUE_TEXT","BLUE","PURPLE","YELLOW","SendAnEmail","Component","constructor","props","state","userDetails","emailEditor","current","editor","exportHtml","data","design","html","console","log","componentDidMount","loadResult","render","cont","container","backgroundColor","marginTop","title","color","marginBottom","ref","width","onLoad"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,4CAAP;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAO,+DAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;AAEA,MAAM,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,GAA5B,EAAiCC,SAAjC,EAA4CC,IAA5C,EAAkDC,MAAlD,EAA0DC,MAA1D,IAAoE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,CAA1E;AAEA,eAAe,MAAMC,WAAN,SAA0BZ,KAAK,CAACa,SAAhC,CAA0C;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,wCAUN,MAAM;AACf,UAAI,KAAKC,KAAL,CAAWC,WAAf,EAA4B,CAE3B;AACJ,KAdkB;;AAAA,wCAeN,MAAM;AACf,WAAKC,WAAL,CAAiBC,OAAjB,CAAyBC,MAAzB,CAAgCC,UAAhC,CAA4CC,IAAD,IAAU;AACjD,cAAM;AAAEC,UAAAA,MAAF;AAAUC,UAAAA;AAAV,YAAmBF,IAAzB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,IAA1B;AACH,OAHD;AAIH,KApBkB;;AAAA,oCAqBV,MAAM,CACX;AACA;AACA;AACH,KAzBkB;;AAGf,SAAKR,KAAL,GAAa,EAAb;AAGH;;AACDW,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL;AACH;;AAiBDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,IAAvB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAE5B,MAAM,CAAC6B,SAAvB;AAAkC,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE5B,KAAnB;AAA0B6B,UAAAA,SAAS,EAAE;AAArC,SAAzC;AAAA,gCACI;AAAG,UAAA,SAAS,EAAE/B,MAAM,CAACgC,KAArB;AAA4B,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE7B,KAAT;AAAgB8B,YAAAA,YAAY,EAAE;AAA9B,WAAnC;AAAA;AAAA,UADJ,eAEI,KAAC,WAAD;AACI,UAAA,GAAG,EAAGC,GAAD,IAAS,KAAKnB,WAAL,GAAmBmB,GADrC;AAEI,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAFX;AAGI,UAAA,MAAM,EAAE,KAAKC;AAHjB,UAFJ;AAAA;AADJ,MADJ;AAYH;;AAxCoD;AAyCxD","sourcesContent":["import React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport EmailEditor from 'react-email-editor';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport styles from '../panel_layout.module.css';\n\nconst [GREEN, WHITE, GREY, BLACK, RED, BLUE_TEXT, BLUE, PURPLE, YELLOW] = ['#4EB848', '#FFFFFF', '#959AAC', '#000000', '#FF0000', '#284ED6', '#1970A7', '#A031AF', '#F0E23D'];\n\nexport default class SendAnEmail extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n    componentDidMount() {\n        this.loadResult();\n    }\n    loadResult = () => {\n        if (this.state.userDetails) {\n\n        }\n    };\n    exportHtml = () => {\n        this.emailEditor.current.editor.exportHtml((data) => {\n            const { design, html } = data;\n            console.log('exportHtml', html);\n        });\n    };\n    onLoad = () => {\n        // you can load your template here;\n        // const templateJson = {};\n        // emailEditorRef.current.editor.loadDesign(templateJson);\n    };\n    render() {\n        return (\n            <div className={styles.cont}>\n                <div className={styles.container} style={{ backgroundColor: WHITE, marginTop: '20px' }}>\n                    <p className={styles.title} style={{ color: BLACK, marginBottom: '30px' }}>Send an Email</p>\n                    <EmailEditor\n                        ref={(ref) => this.emailEditor = ref}\n                        style={{ width: '80%' }}\n                        onLoad={this.onLoad}\n                    />\n                </div>\n            </div>\n        );\n    };\n};"]},"metadata":{},"sourceType":"module"}