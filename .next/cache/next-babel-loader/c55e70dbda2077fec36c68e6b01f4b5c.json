{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineClose, AiOutlineRight } from 'react-icons/ai';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, storeCard, deleteCard } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Loader from 'react-loader-spinner';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst stripePromise = loadStripe('pk_test_RjADdW2vGwFAgOOk7ws1juNB002JV727O8');\nexport default class PerchWallet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadCards\", () => {\n      const {\n        userID\n      } = this.state.userDetails;\n      firebase.database().ref(`cards/${userID}`).once('value', snapshot => {\n        if (!!snapshot) {\n          let arrayOfLast4 = [],\n              i = 0;\n\n          for (let key in snapshot.val()) {\n            if (key != 'selected') arrayOfLast4[i] = {\n              last4: snapshot.val()[key].card.last4,\n              brand: snapshot.val()[key].card.brand\n            };else if (key == 'selected') this.setState({\n              selected: snapshot.val()[key]\n            });\n            i++;\n          }\n\n          this.setState({\n            cards: arrayOfLast4\n          });\n        }\n\n        ;\n      });\n    });\n\n    _defineProperty(this, \"setSelected\", value => {\n      const {\n        userID\n      } = this.state.userDetails;\n      firebase.database().ref(`cards/${userID}`).update({\n        selected: value\n      }).then(() => {\n        this.setState({\n          selected: value\n        });\n      }).catch(error => {\n        this.setState({\n          errorMessage: error.message\n        });\n      });\n    });\n\n    _defineProperty(this, \"removeCard\", index => {\n      let {\n        cards\n      } = this.state;\n      cards.splice(index, 1);\n      this.setState({\n        cards: cards\n      });\n    });\n\n    this.state = {\n      buyKilometers: true,\n      //false,\n      addCard: false,\n      userDetails: this.props.userDetails,\n      quantity: 0,\n      cards: [],\n      selected: null,\n      name: '',\n      cardNumber: '',\n      expiryDate: '',\n      ccv: '',\n      errorMessage: '',\n      loading: false,\n      rate: 0,\n      kms: '',\n      cost: 0,\n      paymentLoading: true,\n      //false,\n      paymentCompleted: true,\n      //false,\n      paymentError: false,\n      paymentErrorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    const {\n      userID\n    } = this.state.userDetails;\n    firebase.database().ref(`perchKilometers/${userID}/quantity`).on('value', snapshot => {\n      if (!!snapshot) this.setState({\n        quantity: snapshot.val()\n      });\n    });\n    firebase.database().ref(`costPerPerchKM`).on('value', snapshot => {\n      this.setState({\n        rate: snapshot.val()\n      });\n    });\n    this.loadCards();\n  }\n\n  render() {\n    var _this$state$rate, _this$state$cost;\n\n    let cards = [];\n\n    for (let i = 0; i < this.state.cards.length; i++) cards.push( /*#__PURE__*/_jsx(PaymentCard, {\n      userID: this.state.userDetails.userID,\n      card: this.state.cards[i],\n      index: i,\n      removeCard: this.removeCard,\n      setSelected: this.setSelected,\n      selectedCard: this.state.selected,\n      selected: this.state.selected === this.state.cards[i].last4,\n      type: this.state.buyKilometers ? 'pickPayment' : 'listOfCards'\n    }, this.state.cards[i].last4));\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: styles.cont,\n      children: this.state.buyKilometers ? //buy kilometers\n      this.state.paymentLoading ? /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: colors.WHITE,\n            marginTop: '20px'\n          },\n          children: [!this.state.paymentCompleted && /*#__PURE__*/_jsx(Loader, {\n            type: \"TailSpin\",\n            color: colors.GREEN,\n            height: '100px',\n            width: '100px',\n            style: {\n              marginTop: 25\n            }\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: colors.GREY,\n              width: 'initial',\n              marginTop: 20,\n              marginBottom: 30,\n              paddingRight: 15,\n              paddingLeft: 15,\n              textAlign: 'center'\n            },\n            children: this.state.paymentCompleted ? `Your payment has been processed. Thank you.` : this.state.paymentError ? `Your payment failed. ${this.state.paymentErrorMessage} ` : `Your payment is currently processing. Please wait.`\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.button1,\n            style: {\n              marginTop: 0\n            },\n            onClick: () => {//this.setState({ buyKilometers: true, addCard: false, errorMessage: '' })\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Go back\"\n            })\n          })]\n        })\n      }) : /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: colors.WHITE,\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: colors.BLACK\n            },\n            children: \"Enter the amount of kilometers you would like to purchase\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter amount of kilometers\",\n            value: this.state.kms,\n            onChange: e => {\n              const value = e.target.value;\n\n              if (value.length <= 3) {\n                const cost = Number(value) * this.state.rate;\n                this.setState({\n                  kms: value,\n                  cost: cost\n                });\n              }\n            },\n            className: styles.inputPaymentPanel\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            style: {\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              style: {\n                width: 'initial',\n                margin: '0px',\n                fontFamily: 'Gilroy-Medium',\n                color: colors.GREY\n              },\n              className: styles.text,\n              children: \"Cost per kilometer\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                width: 'initial',\n                margin: '0px',\n                fontFamily: 'Gilroy-Medium'\n              },\n              className: styles.text,\n              children: `$ ${(_this$state$rate = this.state.rate) === null || _this$state$rate === void 0 ? void 0 : _this$state$rate.toFixed(2)}`\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.sharedLine,\n            style: {\n              marginTop: '20px',\n              width: '90%'\n            }\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              style: {\n                width: 'initial',\n                margin: '0px',\n                fontFamily: 'Gilroy-Bold',\n                fontSize: '120%'\n              },\n              className: styles.text,\n              children: \"Total\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                width: 'initial',\n                margin: '0px',\n                fontFamily: 'Gilroy-Bold',\n                color: colors.GREEN,\n                fontSize: '120%'\n              },\n              className: styles.text,\n              children: `$ ${(_this$state$cost = this.state.cost) === null || _this$state$cost === void 0 ? void 0 : _this$state$cost.toFixed(2)}`\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: colors.WHITE,\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: colors.BLACK\n            },\n            children: \"Payment Methods\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: colors.GREY,\n              marginBottom: '20px'\n            },\n            children: \"List of available payment methods. New payment methods can also be added.\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.paymentCont,\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.paymentItem,\n              children: [cards, /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.paymentRow,\n                id: styles.addCardPayment,\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  style: {\n                    flexDirection: 'row',\n                    display: 'flex',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsx(\"img\", {\n                    src: \"/PayPalLogo.svg\",\n                    alt: \"Perch Payment\",\n                    className: styles.visaIcon,\n                    style: {\n                      marginRight: '15px',\n                      marginLeft: '0px'\n                    }\n                  }), /*#__PURE__*/_jsx(\"p\", {\n                    className: styles.paymentCardNumber,\n                    id: styles.paymentCardNumber_,\n                    children: \"PayPal\"\n                  })]\n                }), /*#__PURE__*/_jsx(AiOutlineRight, {\n                  color: colors.BLACK\n                })]\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.sharedLine,\n                style: {\n                  marginTop: '0px',\n                  width: '100%'\n                }\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.paymentRow,\n                id: styles.addCardPayment,\n                onClick: () => {\n                  this.setState({\n                    addCard: true,\n                    buyKilometers: false,\n                    errorMessage: ''\n                  });\n                },\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  style: {\n                    flexDirection: 'row',\n                    display: 'flex',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsx(\"img\", {\n                    src: \"/addPaymentCardIcon.svg\",\n                    alt: \"Perch Payment\",\n                    className: styles.visaIcon,\n                    style: {\n                      marginRight: '15px'\n                    }\n                  }), /*#__PURE__*/_jsx(\"p\", {\n                    className: styles.paymentCardNumber,\n                    id: styles.paymentCardNumber_,\n                    children: \"Add Debit / Credit Card\"\n                  })]\n                }), /*#__PURE__*/_jsx(AiOutlineRight, {\n                  color: colors.BLACK\n                })]\n              })]\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.enterKilometerDiv,\n          style: {\n            marginTop: '20px',\n            marginBottom: '150px',\n            marginLeft: '2.5%',\n            width: '95%'\n          },\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: styles.button2,\n            style: {\n              backgroundColor: colors.RED\n            },\n            id: styles.buttonBottom,\n            onClick: () => {\n              this.setState({\n                buyKilometers: false,\n                addCard: false,\n                errorMessage: ''\n              });\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Cancel\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.button2,\n            style: {\n              backgroundColor: colors.GREEN\n            },\n            id: styles.buttonBottom,\n            children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n              type: \"TailSpin\",\n              color: colors.WHITE,\n              height: '20px',\n              width: '20px'\n            }) : /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Buy Kilometers\"\n            })\n          })]\n        })]\n      }) : this.state.addCard ?\n      /*#__PURE__*/\n      //add card\n      _jsx(Elements, {\n        stripe: stripePromise,\n        children: /*#__PURE__*/_jsx(AddCardForm, {\n          userID: this.state.userDetails.userID,\n          cancel: () => {\n            this.loadCards();\n            this.setState({\n              errorMessage: '',\n              addCard: false,\n              buyKilometers: false\n            });\n          }\n        })\n      }) :\n      /*#__PURE__*/\n      //main page\n      _jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: colors.WHITE,\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: colors.BLACK\n            },\n            children: \"Kilometers\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: colors.GREY\n            },\n            children: \"You can make kilometer purchases from this panel. Also remeber that sharing your code with friends who book their first ride automatically gives you free kilometers.\"\n          }), /*#__PURE__*/_jsx(\"img\", {\n            src: \"/walletImage.svg\",\n            alt: \"Purchase Perch Kilometers\",\n            className: styles.walletImage\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              width: 'initial',\n              marginTop: '20px'\n            },\n            children: `${this.state.quantity.toFixed(1)} kilometers`\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.button1,\n            style: {},\n            onClick: () => {\n              this.setState({\n                buyKilometers: true,\n                addCard: false,\n                errorMessage: ''\n              });\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Buy kilometers\"\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: colors.WHITE,\n            marginTop: '20px',\n            marginBottom: '150px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: colors.BLACK\n            },\n            children: \"Payment Methods\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: colors.GREY,\n              marginBottom: '20px'\n            },\n            children: \"List of available payment methods. New payment methods can also be added.\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.paymentCont,\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.paymentItem,\n              children: [cards, /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.paymentRow,\n                id: styles.addCardPayment,\n                onClick: () => {\n                  this.setState({\n                    addCard: true,\n                    buyKilometers: false,\n                    errorMessage: ''\n                  });\n                },\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  style: {\n                    flexDirection: 'row',\n                    display: 'flex',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsx(\"img\", {\n                    src: \"/addPaymentCardIcon.svg\",\n                    alt: \"Perch Payment\",\n                    className: styles.visaIcon,\n                    style: {\n                      marginRight: '15px'\n                    }\n                  }), /*#__PURE__*/_jsx(\"p\", {\n                    className: styles.paymentCardNumber,\n                    id: styles.paymentCardNumber_,\n                    children: \"Add Debit / Credit Card\"\n                  })]\n                }), /*#__PURE__*/_jsx(AiOutlineRight, {\n                  color: colors.BLACK\n                })]\n              })]\n            })\n          })]\n        })]\n      })\n    });\n  }\n\n}\n;\n\nclass PaymentCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deleteCard: false,\n      loading: false\n    };\n  }\n\n  render() {\n    const {\n      selected,\n      setSelected,\n      card,\n      userID,\n      removeCard,\n      index,\n      selectedCard\n    } = this.props;\n    const {\n      last4,\n      brand\n    } = card;\n    if (this.props.type == 'listOfCards') return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.paymentRow,\n        id: styles.paymentRow_,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            flexDirection: 'row',\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsx(\"img\", {\n            src: brand == 'Visa' ? \"/visaIcon.svg\" : brand == 'Mastercard' ? '/mastercardIcon.svg' : '/addPaymentCardIcon.svg',\n            alt: \"Perch Payment\",\n            className: brand == 'Visa' ? styles.visaIcon : brand == 'Mastercard' ? styles.masterCardIcon : styles.genericCard\n          }), /*#__PURE__*/_jsxs(\"p\", {\n            className: styles.paymentCardNumber,\n            id: styles.paymentCardNumber_,\n            children: [\"XXXX XXXX XXXX \", last4]\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          id: styles.paymentRowButton,\n          children: this.state.deleteCard ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.button2,\n              style: {\n                backgroundColor: colors.RED,\n                width: '80%'\n              },\n              onClick: () => {\n                deleteCard.call(this, userID, last4, selectedCard);\n                removeCard(index);\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                id: styles.paymentCardNumber_,\n                children: \"Delete this card?\"\n              })\n            }), /*#__PURE__*/_jsx(AiOutlineClose, {\n              className: styles.closeDeletePayment,\n              onClick: () => {\n                this.setState({\n                  deleteCard: false\n                });\n              }\n            })]\n          }) : /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: selected ? styles.buttonSelected : styles.button2,\n              style: {\n                backgroundColor: colors.GREEN\n              },\n              onClick: () => {\n                setSelected(last4);\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                id: styles.paymentCardNumber_,\n                children: selected ? 'Selected' : 'Select card'\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.button2,\n              style: {\n                backgroundColor: colors.RED\n              },\n              onClick: () => {\n                this.setState({\n                  deleteCard: true\n                });\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                id: styles.paymentCardNumber_,\n                children: \"Delete Card\"\n              })\n            })]\n          })\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.sharedLine,\n        style: {\n          marginTop: '20px',\n          width: '100%'\n        }\n      })]\n    });else if (this.props.type == 'pickPayment') return (\n      /*#__PURE__*/\n      //TO MAKE A SELECTED ONE, THE PARENT COMPONENT SHOULD HAVE A SELECTED ITEM ID AND WE COMPARE ID HERE TO SHOW IF IT IS CONFIRMED OR NOT\n      _jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.paymentRow,\n          id: styles.addCardPayment_,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            style: {\n              flexDirection: 'row',\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsx(\"img\", {\n              src: brand == 'Visa' ? \"/visaIcon.svg\" : brand == 'Mastercard' ? '/mastercardIcon.svg' : '/addPaymentCardIcon.svg',\n              alt: \"Perch Payment\",\n              className: brand == 'Visa' ? styles.visaIcon : brand == 'Mastercard' ? styles.masterCardIcon : styles.genericCard\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              className: styles.paymentCardNumber,\n              id: styles.paymentCardNumber_,\n              children: [\"\\u2022\\u2022\\u2022\\u2022 \", last4]\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: styles.pickPaymentSelected,\n            id: selected ? styles.selectedID : styles.selectID,\n            style: {\n              backgroundColor: colors.GREEN\n            },\n            onClick: () => {\n              setSelected(last4);\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              id: styles.paymentCardNumber_,\n              children: selected ? 'Selected' : 'Select'\n            })\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.sharedLine,\n          style: {\n            marginTop: '0px',\n            width: '100%'\n          }\n        })]\n      })\n    );\n  }\n\n}\n\n;\n\nconst AddCardForm = ({\n  cancel,\n  userID\n}) => {\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const createTokenWithCard = async () => {\n    setLoading(true);\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    ; // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      token\n    } = await stripe.createToken(cardElement);\n\n    if (error) {\n      setErrorMessage(error.message);\n      setLoading(false);\n    } else {\n      storeCard.call(this, userID, token, setLoading, setErrorMessage, cancel);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.container,\n      style: {\n        backgroundColor: colors.WHITE,\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        className: styles.title,\n        style: {\n          color: colors.BLACK\n        },\n        children: \"Add card\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"Name on Card\",\n        className: styles.inputPaymentPanel,\n        id: styles.inputPaymentPanel_ADD,\n        style: {\n          marginTop: '10px'\n        },\n        value: name,\n        onChange: e => {\n          const value = e.target.value;\n          setName(value);\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.inputPaymentPanel,\n        children: /*#__PURE__*/_jsx(CardElement, {\n          options: {\n            hidePostalCode: true,\n            style: {\n              base: {\n                color: '#303238',\n                fontSize: '16px',\n                fontFamily: '\"Gill Sans\", sans-serif',\n                fontSmoothing: 'antialiased',\n                '::placeholder': {\n                  color: '#757575'\n                }\n              },\n              invalid: {\n                color: '#e5424d',\n                ':focus': {\n                  color: '#303238'\n                }\n              }\n            }\n          }\n        })\n      }), errorMessage && /*#__PURE__*/_jsx(\"p\", {\n        className: styles.em,\n        style: {\n          textAlign: 'initial'\n        },\n        children: errorMessage\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.enterKilometerDiv,\n      style: {\n        marginTop: '20px',\n        marginBottom: '150px',\n        marginLeft: '2.5%',\n        width: '95%'\n      },\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: styles.button2,\n        style: {\n          backgroundColor: colors.RED\n        },\n        id: styles.buttonBottom,\n        onClick: cancel,\n        children: /*#__PURE__*/_jsx(\"p\", {\n          className: styles.buttonText1,\n          children: \"Cancel\"\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.button2,\n        style: {\n          backgroundColor: colors.GREEN\n        },\n        id: styles.buttonBottom,\n        onClick: () => {\n          if (name.length <= 3) setErrorMessage('Please enter the full name on the card');else createTokenWithCard();\n        },\n        children: loading ? /*#__PURE__*/_jsx(Loader, {\n          type: \"TailSpin\",\n          color: colors.WHITE,\n          height: '20px',\n          width: '20px'\n        }) : /*#__PURE__*/_jsx(\"p\", {\n          className: styles.buttonText1,\n          children: \"Add Card\"\n        })\n      })]\n    })]\n  });\n};","map":{"version":3,"sources":["/Users/ugo/Documents/Perch_Projects/Perch-Website/functions/panels/userPanels/perchWallet.js"],"names":["React","useState","AiOutlineClose","AiOutlineRight","colors","storeCard","deleteCard","styles","firebase","loadStripe","Loader","CardElement","Elements","useElements","useStripe","stripePromise","PerchWallet","Component","constructor","props","userID","state","userDetails","database","ref","once","snapshot","arrayOfLast4","i","key","val","last4","card","brand","setState","selected","cards","value","update","then","catch","error","errorMessage","message","index","splice","buyKilometers","addCard","quantity","name","cardNumber","expiryDate","ccv","loading","rate","kms","cost","paymentLoading","paymentCompleted","paymentError","paymentErrorMessage","componentDidMount","on","loadCards","render","length","push","removeCard","setSelected","cont","container","backgroundColor","WHITE","marginTop","GREEN","title","color","GREY","width","marginBottom","paddingRight","paddingLeft","textAlign","button1","buttonText1","BLACK","e","target","Number","inputPaymentPanel","enterKilometerDiv","margin","fontFamily","text","toFixed","sharedLine","fontSize","paymentCont","paymentItem","paymentRow","addCardPayment","flexDirection","display","alignItems","visaIcon","marginRight","marginLeft","paymentCardNumber","paymentCardNumber_","button2","RED","buttonBottom","walletImage","PaymentCard","selectedCard","type","paymentRow_","masterCardIcon","genericCard","paymentRowButton","call","closeDeletePayment","buttonSelected","addCardPayment_","pickPaymentSelected","selectedID","selectID","AddCardForm","cancel","setName","setErrorMessage","setLoading","stripe","elements","createTokenWithCard","cardElement","getElement","token","createToken","inputPaymentPanel_ADD","hidePostalCode","style","base","fontSmoothing","invalid","em"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineClose, AiOutlineRight } from 'react-icons/ai';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, storeCard, deleteCard, } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport firebase from 'firebase';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Loader from 'react-loader-spinner';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nconst stripePromise = loadStripe('pk_test_RjADdW2vGwFAgOOk7ws1juNB002JV727O8');\n\nexport default class PerchWallet extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            buyKilometers: true,//false,\n            addCard: false,\n            userDetails: this.props.userDetails,\n            quantity: 0,\n            cards: [],\n            selected: null,\n\n            name: '',\n            cardNumber: '',\n            expiryDate: '',\n            ccv: '',\n            errorMessage: '',\n\n            loading: false,\n\n            rate: 0,\n            kms: '',\n            cost: 0,\n\n            paymentLoading: true,//false,\n            paymentCompleted: true,//false,\n            paymentError: false,\n            paymentErrorMessage: '',\n        };\n    };\n    componentDidMount() {\n        const { userID } = this.state.userDetails;\n        firebase.database().ref(`perchKilometers/${userID}/quantity`).on('value', snapshot => {\n            if (!!snapshot)\n                this.setState({ quantity: snapshot.val() });\n        });\n        firebase.database().ref(`costPerPerchKM`).on('value', snapshot => {\n            this.setState({ rate: snapshot.val() });\n        });\n        this.loadCards();\n    };\n    loadCards = () => {\n        const { userID } = this.state.userDetails;\n        firebase.database().ref(`cards/${userID}`).once('value', snapshot => {\n            if (!!snapshot) {\n                let arrayOfLast4 = [], i = 0;\n                for (let key in snapshot.val()) {\n                    if (key != 'selected')\n                        arrayOfLast4[i] = {\n                            last4: snapshot.val()[key].card.last4,\n                            brand: snapshot.val()[key].card.brand,\n                        };\n                    else if (key == 'selected')\n                        this.setState({ selected: snapshot.val()[key] })\n                    i++;\n                }\n                this.setState({ cards: arrayOfLast4 });\n            };\n        });\n    };\n    setSelected = (value) => {\n        const { userID } = this.state.userDetails;\n        firebase.database().ref(`cards/${userID}`).update({\n            selected: value\n        }).then(() => {\n            this.setState({ selected: value })\n        }).catch(error => { this.setState({ errorMessage: error.message }) })\n    }\n    removeCard = (index) => {\n        let { cards } = this.state;\n        cards.splice(index, 1);\n        this.setState({ cards: cards })\n    };\n    render() {\n        let cards = [];\n        for (let i = 0; i < this.state.cards.length; i++)\n            cards.push(\n                <PaymentCard\n                    userID={this.state.userDetails.userID}\n                    key={this.state.cards[i].last4}\n                    card={this.state.cards[i]}\n                    index={i}\n                    removeCard={this.removeCard}\n                    setSelected={this.setSelected}\n                    selectedCard={this.state.selected}\n                    selected={this.state.selected === this.state.cards[i].last4}\n                    type={this.state.buyKilometers ? 'pickPayment' : 'listOfCards'} />\n            );\n        return (\n            <div className={styles.cont}>\n                {\n                    this.state.buyKilometers ?//buy kilometers\n\n                        (\n                            this.state.paymentLoading ?\n                                <>\n                                    <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                                        {!this.state.paymentCompleted && <Loader\n                                            type=\"TailSpin\"\n                                            color={colors.GREEN}\n                                            height={'100px'}\n                                            width={'100px'}\n                                            style={{ marginTop: 25 }}\n                                        />}\n                                        <p className={styles.title}\n                                            style={{ color: colors.GREY, width: 'initial', marginTop: 20, marginBottom: 30, paddingRight: 15, paddingLeft: 15, textAlign: 'center' }}>\n                                            {this.state.paymentCompleted ?\n                                                `Your payment has been processed. Thank you.` :\n                                                this.state.paymentError ?\n                                                    `Your payment failed. ${this.state.paymentErrorMessage} ` :\n                                                    `Your payment is currently processing. Please wait.`}\n                                        </p>\n                                        <div\n                                            className={styles.button1}\n                                            style={{ marginTop: 0 }}\n                                            onClick={() => {\n                                                //this.setState({ buyKilometers: true, addCard: false, errorMessage: '' })\n                                            }}>\n                                            <p className={styles.buttonText1}>Go back</p>\n                                        </div>\n                                    </div>\n                                </> :\n                                <>\n                                    <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                                        <p className={styles.title} style={{ color: colors.BLACK }}>Enter the amount of kilometers you would like to purchase</p>\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Enter amount of kilometers\"\n                                            value={this.state.kms}\n                                            onChange={(e) => {\n                                                const value = e.target.value;\n                                                if (value.length <= 3) {\n                                                    const cost = Number(value) * this.state.rate;\n                                                    this.setState({ kms: value, cost: cost });\n                                                }\n                                            }}\n                                            className={styles.inputPaymentPanel} />\n                                        <div className={styles.enterKilometerDiv} style={{ marginTop: '20px' }}>\n                                            <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', color: colors.GREY }} className={styles.text}>Cost per kilometer</p>\n                                            <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', }} className={styles.text}>{`$ ${this.state.rate?.toFixed(2)}`}</p>\n                                        </div>\n                                        {/* <div className={styles.enterKilometerDiv}>\n                                    <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', color: colors.GREY }} className={styles.text}>Total cost of kilometers</p>\n                                    <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', }} className={styles.text}>{`$ ${this.state.cost?.toFixed(2)}`}</p>\n                                </div>\n                                 <div className={styles.enterKilometerDiv}>\n                                    <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', color: colors.GREY }} className={styles.text}>Taxes</p>\n                                    <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Medium', }} className={styles.text}>{`$ 1.99`}</p>\n                                </div> */}\n                                        <div className={styles.sharedLine} style={{ marginTop: '20px', width: '90%' }}></div>\n                                        <div className={styles.enterKilometerDiv}>\n                                            <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Bold', fontSize: '120%' }} className={styles.text}>Total</p>\n                                            <p style={{ width: 'initial', margin: '0px', fontFamily: 'Gilroy-Bold', color: colors.GREEN, fontSize: '120%' }} className={styles.text}>{`$ ${this.state.cost?.toFixed(2)}`}</p>\n                                        </div>\n\n                                    </div>\n\n                                    <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px', }}>\n                                        <p className={styles.title} style={{ color: colors.BLACK }}>\n                                            Payment Methods\n                                        </p>\n                                        <p className={styles.text} style={{ color: colors.GREY, marginBottom: '20px' }}>\n                                            List of available payment methods. New payment methods can also be added.\n                                        </p>\n\n                                        <div className={styles.paymentCont}>\n                                            <div className={styles.paymentItem}>\n                                                {cards}\n                                                <div className={styles.paymentRow} id={styles.addCardPayment}>\n                                                    <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                                                        <img src=\"/PayPalLogo.svg\" alt=\"Perch Payment\" className={styles.visaIcon} style={{ marginRight: '15px', marginLeft: '0px' }} />\n                                                        <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>PayPal</p>\n                                                    </div>\n                                                    <AiOutlineRight color={colors.BLACK} />\n                                                </div>\n                                                <div className={styles.sharedLine} style={{ marginTop: '0px', width: '100%' }}></div>\n                                                <div className={styles.paymentRow} id={styles.addCardPayment} onClick={() => { this.setState({ addCard: true, buyKilometers: false, errorMessage: '' }) }}>\n                                                    <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                                                        <img src=\"/addPaymentCardIcon.svg\" alt=\"Perch Payment\" className={styles.visaIcon} style={{ marginRight: '15px' }} />\n                                                        <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>Add Debit / Credit Card</p>\n                                                    </div>\n                                                    <AiOutlineRight color={colors.BLACK} />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                                        <div className={styles.button2} style={{ backgroundColor: colors.RED }} id={styles.buttonBottom}\n                                            onClick={() => { this.setState({ buyKilometers: false, addCard: false, errorMessage: '' }) }}>\n                                            <p className={styles.buttonText1}>Cancel</p>\n                                        </div>\n                                        <div className={styles.button2} style={{ backgroundColor: colors.GREEN }} id={styles.buttonBottom}>\n                                            {this.state.loading ?\n                                                <Loader\n                                                    type=\"TailSpin\"\n                                                    color={colors.WHITE}\n                                                    height={'20px'}\n                                                    width={'20px'}\n                                                /> :\n                                                <p className={styles.buttonText1}>Buy Kilometers</p>}\n                                        </div>\n                                    </div>\n                                </>) :\n                        this.state.addCard ?//add card\n                            <Elements stripe={stripePromise}>\n                                <AddCardForm\n                                    userID={this.state.userDetails.userID}\n                                    cancel={() => {\n                                        this.loadCards();\n                                        this.setState({ errorMessage: '', addCard: false, buyKilometers: false, })\n                                    }}\n                                />\n                            </Elements>\n                            ://main page\n                            <>\n                                <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                                    <p className={styles.title} style={{ color: colors.BLACK }}>Kilometers</p>\n                                    <p className={styles.text} style={{ color: colors.GREY }}>\n                                        You can make kilometer purchases from this panel. Also remeber that sharing your code with friends who book their first ride automatically gives you free kilometers.\n                                    </p>\n                                    <img src=\"/walletImage.svg\" alt=\"Purchase Perch Kilometers\" className={styles.walletImage} />\n                                    <p className={styles.title} style={{ width: 'initial', marginTop: '20px' }}>{`${this.state.quantity.toFixed(1)} kilometers`}</p>\n                                    <div className={styles.button1} style={{}} onClick={() => { this.setState({ buyKilometers: true, addCard: false, errorMessage: '' }) }}>\n                                        <p className={styles.buttonText1}>Buy kilometers</p>\n                                    </div>\n                                </div>\n\n                                <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px', marginBottom: '150px' }}>\n                                    <p className={styles.title} style={{ color: colors.BLACK }}>\n                                        Payment Methods\n                                    </p>\n                                    <p className={styles.text} style={{ color: colors.GREY, marginBottom: '20px' }}>\n                                        List of available payment methods. New payment methods can also be added.\n                                    </p>\n\n                                    <div className={styles.paymentCont}>\n                                        <div className={styles.paymentItem}>\n                                            {cards}\n                                            <div className={styles.paymentRow} id={styles.addCardPayment} onClick={() => { this.setState({ addCard: true, buyKilometers: false, errorMessage: '' }) }}>\n                                                <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                                                    <img src=\"/addPaymentCardIcon.svg\" alt=\"Perch Payment\" className={styles.visaIcon} style={{ marginRight: '15px' }} />\n                                                    <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>Add Debit / Credit Card</p>\n                                                </div>\n                                                <AiOutlineRight color={colors.BLACK} />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </>\n                }\n            </div >\n        )\n\n    }\n};\nclass PaymentCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteCard: false,\n            loading: false,\n        }\n    }\n    render() {\n        const { selected, setSelected, card, userID, removeCard, index, selectedCard } = this.props;\n        const { last4, brand } = card;\n        if (this.props.type == 'listOfCards')\n            return (\n                <>\n                    <div className={styles.paymentRow} id={styles.paymentRow_}>\n                        <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                            <img\n                                src={brand == 'Visa' ? \"/visaIcon.svg\" : brand == 'Mastercard' ? '/mastercardIcon.svg' : '/addPaymentCardIcon.svg'} alt=\"Perch Payment\"\n                                className={brand == 'Visa' ? styles.visaIcon : brand == 'Mastercard' ? styles.masterCardIcon : styles.genericCard} />\n                            <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>XXXX XXXX XXXX {last4}</p>\n                        </div>\n                        <div id={styles.paymentRowButton}>\n                            {\n                                this.state.deleteCard ?\n                                    <>\n                                        <div className={styles.button2} style={{ backgroundColor: colors.RED, width: '80%' }}\n                                            onClick={() => {\n                                                deleteCard.call(this, userID, last4, selectedCard);\n                                                removeCard(index);\n                                            }}\n                                        >\n                                            <p className={styles.buttonText1} id={styles.paymentCardNumber_}>Delete this card?</p>\n                                        </div>\n                                        <AiOutlineClose className={styles.closeDeletePayment} onClick={() => { this.setState({ deleteCard: false }) }} />\n                                    </> :\n                                    <>\n                                        <div\n                                            className={selected ? styles.buttonSelected : styles.button2}\n                                            style={{ backgroundColor: colors.GREEN }}\n                                            onClick={() => {\n                                                setSelected(last4)\n                                            }}>\n                                            <p className={styles.buttonText1} id={styles.paymentCardNumber_}>{selected ? 'Selected' : 'Select card'}</p>\n                                        </div>\n                                        <div className={styles.button2} style={{ backgroundColor: colors.RED }} onClick={() => { this.setState({ deleteCard: true }) }}>\n                                            <p className={styles.buttonText1} id={styles.paymentCardNumber_}>Delete Card</p>\n                                        </div>\n                                    </>}\n                        </div>\n                    </div>\n                    <div className={styles.sharedLine} style={{ marginTop: '20px', width: '100%' }}></div>\n                </>\n            );\n        else if (this.props.type == 'pickPayment')\n            return (//TO MAKE A SELECTED ONE, THE PARENT COMPONENT SHOULD HAVE A SELECTED ITEM ID AND WE COMPARE ID HERE TO SHOW IF IT IS CONFIRMED OR NOT\n                <>\n                    <div className={styles.paymentRow} id={styles.addCardPayment_} >\n                        <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', }}>\n                            <img\n                                src={brand == 'Visa' ? \"/visaIcon.svg\" : brand == 'Mastercard' ? '/mastercardIcon.svg' : '/addPaymentCardIcon.svg'} alt=\"Perch Payment\"\n                                className={brand == 'Visa' ? styles.visaIcon : brand == 'Mastercard' ? styles.masterCardIcon : styles.genericCard} />\n                            <p className={styles.paymentCardNumber} id={styles.paymentCardNumber_}>•••• {last4}</p>\n                        </div>\n                        <div className={styles.pickPaymentSelected}\n                            id={selected ? styles.selectedID : styles.selectID}\n                            style={{ backgroundColor: colors.GREEN, }}\n                            onClick={() => {\n                                setSelected(last4)\n                            }}>\n                            <p className={styles.buttonText1} id={styles.paymentCardNumber_}>{selected ? 'Selected' : 'Select'}</p>\n                        </div>\n                    </div>\n                    <div className={styles.sharedLine} style={{ marginTop: '0px', width: '100%' }}></div>\n                </>\n            );\n    }\n};\nconst AddCardForm = ({ cancel, userID }) => {\n    const [name, setName] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [loading, setLoading] = useState(false);\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const createTokenWithCard = async () => {\n        setLoading(true);\n        if (!stripe || !elements) {\n            // Stripe.js has not loaded yet. Make sure to disable\n            // form submission until Stripe.js has loaded.\n            return;\n        };\n\n        // Get a reference to a mounted CardElement. Elements knows how\n        // to find your CardElement because there can only ever be one of\n        // each type of element.\n        const cardElement = elements.getElement(CardElement);\n        // Use your card Element with other Stripe.js APIs\n        const { error, token } = await stripe.createToken(cardElement);\n\n        if (error) {\n            setErrorMessage(error.message);\n            setLoading(false);\n        } else {\n            storeCard.call(this, userID, token, setLoading, setErrorMessage, cancel);\n        }\n    };\n    return (\n        <>\n            <div className={styles.container} style={{ backgroundColor: colors.WHITE, marginTop: '20px' }}>\n                <p className={styles.title} style={{ color: colors.BLACK }}>Add card</p>\n                <input type=\"text\"\n                    placeholder=\"Name on Card\"\n                    className={styles.inputPaymentPanel}\n                    id={styles.inputPaymentPanel_ADD}\n                    style={{ marginTop: '10px' }}\n                    value={name}\n                    onChange={(e) => {\n                        const value = e.target.value;\n                        setName(value);\n                    }}\n                />\n                <div className={styles.inputPaymentPanel}>\n                    <CardElement\n                        options={{\n                            hidePostalCode: true,\n                            style: {\n                                base: {\n                                    color: '#303238',\n                                    fontSize: '16px',\n                                    fontFamily: '\"Gill Sans\", sans-serif',\n                                    fontSmoothing: 'antialiased',\n                                    '::placeholder': {\n                                        color: '#757575',\n                                    },\n                                },\n                                invalid: {\n                                    color: '#e5424d',\n                                    ':focus': {\n                                        color: '#303238',\n                                    },\n                                },\n                            }\n                        }}\n                    />\n                </div>\n\n                {errorMessage && <p className={styles.em} style={{ textAlign: 'initial' }}>{errorMessage}</p>}\n            </div>\n            <div className={styles.enterKilometerDiv} style={{ marginTop: '20px', marginBottom: '150px', marginLeft: '2.5%', width: '95%' }}>\n                <div className={styles.button2} style={{ backgroundColor: colors.RED }} id={styles.buttonBottom}\n                    onClick={cancel}>\n                    <p className={styles.buttonText1}>Cancel</p>\n                </div>\n                <div\n                    className={styles.button2}\n                    style={{ backgroundColor: colors.GREEN }}\n                    id={styles.buttonBottom}\n                    onClick={() => {\n                        if (name.length <= 3)\n                            setErrorMessage('Please enter the full name on the card');\n                        else\n                            createTokenWithCard();\n                    }}>\n                    {loading ?\n                        <Loader\n                            type=\"TailSpin\"\n                            color={colors.WHITE}\n                            height={'20px'}\n                            width={'20px'}\n                        /> :\n                        <p className={styles.buttonText1}>Add Card</p>}\n                </div>\n            </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}