{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport styles from '../panel_layout.module.css';\nimport { dateOfQuery, colors, driverApplicationAdvance, validateDriver, isNumber } from '../../functions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default class DriverApplications extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadResult\", () => {\n      if (this.state.userDetails) {\n        firebase.database().ref(`completedDriverApplications`).once('value', snapshot => {\n          this.setState({\n            result: snapshot.val() ? snapshot.val() : {}\n          });\n        }); // firebase.database().ref(`driverApplications`).once('value', snapshot => {\n        //     this.setState({ result: snapshot.val() ? snapshot.val() : {} })\n        // });\n      }\n    });\n\n    _defineProperty(this, \"loadDocument\", (userID, documentStorageID, dateFormat) => {\n      firebase.storage().ref(`driverVehicleDocs/${userID}/driverDetails/driversLicence`).getDownloadURL().then(result => {\n        this.setState({\n          docDriversLicenseURL: result\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n      firebase.storage().ref(`driverVehicleDocs/${userID}/driverDetails/proofOfWorkEligibility`).getDownloadURL().then(result => {\n        this.setState({\n          docProofOfWorkEligibilityURL: result\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n      firebase.storage().ref(`driverVehicleDocs/${userID}/driverDetails/epsBackgroundCheck`).getDownloadURL().then(result => {\n        this.setState({\n          docEPSBackgroundCheckURL: result\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n      firebase.storage().ref(`driverVehicleDocs/${userID}/driverDetails/profilePicture`).getDownloadURL().then(result => {\n        this.setState({\n          docProfilePicture: result\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n      firebase.storage().ref(`driverVehicleDocs/${userID}/${documentStorageID}/vehicleRegistration`).getDownloadURL().then(result => {\n        this.setState({\n          docRegistrationURL: result\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n      firebase.storage().ref(`driverVehicleDocs/${userID}/${documentStorageID}/vehicleInsurance`).getDownloadURL().then(result => {\n        this.setState({\n          docInsuranceURL: result\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n      firebase.storage().ref(`driverVehicleDocs/${userID}/${documentStorageID}/vehicleInspection`).getDownloadURL().then(result => {\n        this.setState({\n          docInspectionURL: result\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n      firebase.storage().ref(`driverVehicleDocs/${userID}/${documentStorageID}/vehicleImage`).getDownloadURL().then(result => {\n        this.setState({\n          docVehicleImage: result\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n      firebase.database().ref(`vehicles/${userID}/${dateFormat}`).once('value', snapshot => {\n        this.setState({\n          vehicle: snapshot.val()\n        });\n      });\n    });\n\n    _defineProperty(this, \"loadOfferLeffer\", userID => {\n      firebase.storage().ref(`driverVehicleDocs/${userID}/driverDetails/signedOfferLetter`).getDownloadURL().then(result => {\n        this.setState({\n          offerLetter: result\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n    });\n\n    _defineProperty(this, \"loadSelectedResult\", userID => {\n      firebase.database().ref(`driverApplications/${userID}`).once('value', snapshot => {\n        const {\n          stage,\n          timestamp,\n          name,\n          vehicleRandomID,\n          dateFormat,\n          offerLetterSigned\n        } = snapshot.val();\n        const verified = JSON.parse(snapshot.val().verified);\n\n        if (stage == 'three') {\n          this.loadDocument(userID, vehicleRandomID, dateFormat);\n          this.setState({\n            showDocs: true,\n            selected: {\n              name: name,\n              timestamp: timestamp,\n              userID: userID,\n              stage: stage,\n              offerLetterSigned: offerLetterSigned\n            },\n            verified: verified\n          });\n        } else if (stage == 'four') {\n          if (offerLetterSigned) this.loadOfferLeffer(userID);\n          this.setState({\n            showDocs: true,\n            selected: {\n              name: name,\n              timestamp: timestamp,\n              userID: userID,\n              stage: stage,\n              offerLetterSigned: offerLetterSigned,\n              dateFormat: dateFormat\n            }\n          });\n        }\n      });\n    });\n\n    this.state = {\n      showDocs: false,\n      result: {},\n      docList: [\"Driver's licence\", \"Proof of work eligibility\", \"EPS background check\", \"Vehicle insurance\", \"Vehicle registration\", \"Vehicle inspection\"],\n      docDriversLicenseURL: false,\n      docProofOfWorkEligibilityURL: false,\n      docEPSBackgroundCheckURL: false,\n      docRegistrationURL: '',\n      docInsuranceURL: '',\n      docInspectionURL: '',\n      docVehicleImage: '',\n      docProfilePicture: '',\n      driversLicenseVerified: false,\n      proofOfWorkEligibilityVerified: false,\n      epsBackgroundCheckVerified: false,\n      inspectionVerified: false,\n      registrationVerified: false,\n      insuranceVerified: false,\n      maxSeatNumber: '',\n      verified: [],\n      //driversLicenseVerified\n      //proofOfWorkEligibilityVerified\n      //epsBackgroundCheckVerified\n      //insuranceVerified\n      //registrationVerified\n      //inspectionVerified\n      selected: {},\n      vehicle: {},\n      offerLetter: null\n    };\n  }\n\n  componentDidMount() {\n    this.loadResult();\n  }\n\n  render() {\n    let requirements = [];\n\n    for (let i = 0; i < this.state.docList.length; i++) {\n      let urlToShow = '';\n      if (this.state.docList[i] == \"Driver's licence\") urlToShow = this.state.docDriversLicenseURL;else if (this.state.docList[i] == 'Proof of work eligibility') urlToShow = this.state.docProofOfWorkEligibilityURL;else if (this.state.docList[i] == 'EPS background check') urlToShow = this.state.docEPSBackgroundCheckURL;else if (this.state.docList[i] == 'Vehicle insurance') urlToShow = this.state.docInsuranceURL;else if (this.state.docList[i] == 'Vehicle registration') urlToShow = this.state.docRegistrationURL;else if (this.state.docList[i] == 'Vehicle inspection') urlToShow = this.state.docInspectionURL;\n      let isVerified = this.state.verified[i];\n      requirements.push( /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.driverFAQ_PICDESC,\n        id: styles.driverROUNDSUPPORT,\n        children: [/*#__PURE__*/_jsx(\"a\", {\n          href: urlToShow,\n          target: '_blank',\n          children: /*#__PURE__*/_jsx(\"p\", {\n            className: styles.text,\n            style: {\n              color: '#000000',\n              width: 'initial',\n              margin: '0px',\n              marginLeft: '10px'\n            },\n            children: this.state.docList[i]\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.driver_APP_RADIO,\n          style: {\n            backgroundColor: colors.GREEN,\n            opacity: isVerified ? 1 : 0.5\n          },\n          onClick: () => {\n            let verified = this.state.verified;\n            verified[i] = true;\n            this.setState({\n              verified: verified\n            }, () => {\n              firebase.database().ref(`driverApplications/${this.state.selected.userID}`).update({\n                verified: JSON.stringify(verified)\n              });\n            });\n          },\n          children: isVerified ? /*#__PURE__*/_jsx(AiOutlineCheck, {\n            color: colors.WHITE,\n            size: '15px'\n          }) : /*#__PURE__*/_jsx(_Fragment, {})\n        })]\n      }));\n    }\n\n    if (!this.state.userDetails && this.props.userDetails) this.setState({\n      userDetails: this.props.userDetails\n    }, () => {\n      this.loadResult();\n    });\n    let results = [];\n    const keys = Object.keys(this.state.result).sort((a, b) => {\n      let stageA = 0,\n          stageB = 0;\n\n      switch (this.state.result[a].stage) {\n        case 'one':\n          {\n            stageA = 1;\n          }\n          break;\n\n        case 'two':\n          {\n            stageA = 2;\n          }\n          break;\n\n        case 'three':\n          {\n            stageA = 3;\n          }\n          break;\n\n        case 'four':\n          {\n            stageA = 4;\n          }\n          break;\n      }\n\n      ;\n\n      switch (this.state.result[b].stage) {\n        case 'one':\n          {\n            stageB = 1;\n          }\n          break;\n\n        case 'two':\n          {\n            stageB = 2;\n          }\n          break;\n\n        case 'three':\n          {\n            stageB = 3;\n          }\n          break;\n\n        case 'four':\n          {\n            stageB = 4;\n          }\n          break;\n      }\n\n      ;\n      if (stageB == 4 && this.state.result[b].offerLetterSigned == false) //so that drivers that havent signed offer letters stay below\n        return stageA - stageB;else return stageB - stageA;\n    });\n\n    for (let k = 0; k < keys.length; k++) {\n      const userID = keys[k];\n      const {\n        stage,\n        timestamp,\n        name\n      } = this.state.result[keys[k]];\n      let stageToDisplay = 0;\n      let color = colors.YELLOW;\n\n      switch (stage) {\n        case 'one':\n          {\n            stageToDisplay = `S1`;\n          }\n          break;\n\n        case 'two':\n          {\n            stageToDisplay = `S2`;\n          }\n          break;\n\n        case 'three':\n          {\n            stageToDisplay = `S3`;\n            color = colors.GREEN;\n          }\n          break;\n\n        case 'four':\n          {\n            stageToDisplay = `S4`;\n            color = colors.GREEN;\n          }\n          break;\n      }\n\n      ;\n      results.push( /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.previousMessageSum,\n          onClick: () => {\n            this.loadSelectedResult(userID);\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            style: {\n              fontSize: '95%'\n            },\n            children: name\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'row',\n              width: '150px',\n              justifyContent: 'space-between'\n            },\n            children: /*#__PURE__*/_jsxs(\"span\", {\n              style: {\n                flexDirection: 'row',\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.previousMessageDate,\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    fontFamily: 'Gilroy-Semibold',\n                    fontSize: '75%',\n                    marginRight: '-10px',\n                    paddingLeft: '10px'\n                  },\n                  children: dateOfQuery(timestamp)\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                style: {\n                  width: '50px',\n                  height: '30px',\n                  backgroundColor: color,\n                  borderRadius: '5px',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center'\n                },\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.readOrUnreadText,\n                  style: {\n                    color: '#ffffff',\n                    fontFamily: 'Gilroy-ExtraBold'\n                  },\n                  children: stageToDisplay\n                })\n              })]\n            })\n          })]\n        }), k == keys.length - 1 ? /*#__PURE__*/_jsx(_Fragment, {}) : /*#__PURE__*/_jsx(\"div\", {\n          className: styles.sharedLine,\n          style: {\n            marginTop: '5px'\n          }\n        })]\n      }));\n    }\n\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.cont,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.container,\n        style: {\n          backgroundColor: colors.WHITE,\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          className: styles.title,\n          style: {\n            color: colors.BLACK,\n            marginBottom: '20px'\n          },\n          children: this.state.showDocs ? this.state.selected.name : 'Driver Applications'\n        }), this.state.selected.stage == 'three' ? /*#__PURE__*/_jsx(\"p\", {\n          className: styles.title,\n          style: {\n            color: colors.BLACK,\n            marginTop: '-10px'\n          },\n          children: this.state.showDocs ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [this.state.vehicle.year, \" \", this.state.vehicle.color, \" \", this.state.vehicle.model, \" \", this.state.vehicle.make, \" - (\", /*#__PURE__*/_jsx(\"span\", {\n              style: {\n                color: colors.GREEN\n              },\n              children: this.state.vehicle.plateNumber\n            }), \")\"]\n          }) : ''\n        }) : this.state.selected.stage == 'four' ? /*#__PURE__*/_jsx(\"p\", {\n          className: styles.title,\n          style: {\n            color: colors.BLACK,\n            marginTop: '-10px'\n          },\n          children: `User ID - ${this.state.selected.userID}`\n        }) : /*#__PURE__*/_jsx(_Fragment, {}), this.state.showDocs ? this.state.selected.stage == 'three' ? /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(\"img\", {\n            src: this.state.docProfilePicture,\n            className: styles.driverVehicleIMAGE,\n            style: {\n              maxWidth: '250px',\n              marginTop: '20px'\n            }\n          }), requirements, /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter maximum seat number\",\n            className: styles.contactUsEmail,\n            style: {\n              marginTop: '10px'\n            },\n            value: this.state.maxSeatNumber,\n            onChange: event => {\n              if (isNumber(event.target.value)) if (Number(event.target.value) <= 5) this.setState({\n                maxSeatNumber: event.target.value\n              });\n            }\n          }), /*#__PURE__*/_jsx(\"img\", {\n            src: this.state.docVehicleImage,\n            className: styles.driverVehicleIMAGE\n          })]\n        }) :\n        /*#__PURE__*/\n        //STAGE FOUR\n        _jsx(_Fragment, {\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.driverFAQ_PICDESC,\n            id: styles.driverROUNDSUPPORT,\n            children: [/*#__PURE__*/_jsx(\"a\", {\n              href: this.state.offerLetter,\n              target: '_blank',\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.text,\n                style: {\n                  color: '#000000',\n                  width: 'initial',\n                  margin: '0px',\n                  marginLeft: '10px'\n                },\n                children: 'Perch Offer Letter'\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.driver_APP_RADIO,\n              style: {\n                backgroundColor: colors.GREEN,\n                opacity: this.state.selected.offerLetterSigned ? 1 : 0.6\n              },\n              children: this.state.selected.offerLetterSigned ? /*#__PURE__*/_jsx(AiOutlineCheck, {\n                color: colors.WHITE,\n                size: '15px'\n              }) : /*#__PURE__*/_jsx(_Fragment, {})\n            })]\n          })\n        }) : results]\n      }), this.state.showDocs ? /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.enterKilometerDiv,\n        style: {\n          marginTop: '20px',\n          marginBottom: '150px',\n          marginLeft: '2.5%',\n          width: '95%'\n        },\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.button2,\n          style: {\n            backgroundColor: colors.RED\n          },\n          id: styles.buttonBottom,\n          onClick: () => {\n            this.setState({\n              showDocs: false,\n              vehicle: {},\n              verified: []\n            });\n          },\n          children: /*#__PURE__*/_jsx(\"p\", {\n            className: styles.buttonText1,\n            children: \"Cancel\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.button2,\n          style: {\n            backgroundColor: colors.GREEN\n          },\n          id: styles.buttonBottom,\n          onClick: () => {\n            if (this.state.selected.stage == 'three') {\n              if (this.state.verified.indexOf(false) != -1) alert('You need to verify all the provided documents');else if (this.state.maxSeatNumber.length == 0) alert('Please set maximum seat number');else {\n                firebase.database().ref(`driverApplications/${this.state.selected.userID}/dateFormat`).once('value', dateFormat => {\n                  const dateFormat_ = dateFormat.val();\n                  const currentUserID = this.state.selected.userID;\n                  driverApplicationAdvance.call(this, currentUserID, dateFormat_, this.state.maxSeatNumber);\n                });\n              }\n            } else if (this.state.selected.stage == 'four') {\n              if (this.state.selected.offerLetterSigned) {\n                const {\n                  userID,\n                  timestamp,\n                  dateFormat\n                } = this.state.selected;\n                validateDriver.call(this, userID, timestamp, dateFormat);\n              } else alert('Driver has not yet signed offer letter, please send them a reminder if it has been a while');\n            }\n          },\n          children: /*#__PURE__*/_jsx(\"p\", {\n            className: styles.buttonText1,\n            children: this.state.selected.stage == 'three' ? 'Send offer letter' : 'Validate Driver'\n          })\n        })]\n      }) : /*#__PURE__*/_jsx(_Fragment, {})]\n    });\n  }\n\n}\n;","map":null,"metadata":{},"sourceType":"module"}