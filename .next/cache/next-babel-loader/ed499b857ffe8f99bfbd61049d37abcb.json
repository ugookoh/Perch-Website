{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport firebase from 'firebase';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { colors, formatDateAllValues, pendingProcessesFunction, pendingProcessesFunctionDelete } from '../../functions';\nimport styles from '../panel_layout.module.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar PendingProcesses = /*#__PURE__*/function (_React$Component) {\n  _inherits(PendingProcesses, _React$Component);\n\n  var _super = _createSuper(PendingProcesses);\n\n  function PendingProcesses(props) {\n    var _this;\n\n    _classCallCheck(this, PendingProcesses);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"renderList\", function () {\n      var r = [];\n      r.push( /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.widthSeperator,\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.mainText,\n            children: \"\\u2022 User ID - \".concat(_this.state.userID)\n          }), /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              width: '90px',\n              height: '30px',\n              backgroundColor: _this.state.type == 'rider' ? colors.GREEN : colors.BLUE,\n              borderRadius: '5px',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: /*#__PURE__*/_jsx(\"p\", {\n              className: styles.readOrUnreadText,\n              style: {\n                color: '#ffffff',\n                fontFamily: 'Gilroy-ExtraBold'\n              },\n              children: _this.state.type == 'rider' ? 'Rider' : 'Driver'\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.widthSeperator,\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.mainText,\n            children: \"\\u2022 Topic - \".concat(_this.state.mainTopic)\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.mainText,\n            children: \"Created at  ( \".concat(formatDateAllValues(new Date(_this.state.timeCreated)), \" )\")\n          })]\n        })]\n      }));\n      var listOfProcesses = _this.state.listOfProcesses;\n\n      for (var i = 0; i < listOfProcesses.length; i++) {\n        r.push( /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.containerForPendingList,\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.listOfProcessesTitle,\n            children: listOfProcesses[i].title\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.listOfProcessesDetails,\n            children: listOfProcesses[i].details\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: styles.listOfProcessesTime,\n            children: formatDateAllValues(new Date(listOfProcesses[i].timeCreated))\n          })]\n        }));\n      }\n\n      return r;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loadOldList\", function (data) {\n      var pushId = data.pushId,\n          userID = data.userID,\n          type = data.type,\n          mainTopic = data.mainTopic,\n          timeCreated = data.timeCreated;\n\n      _this.setState({\n        loading: true\n      }, function () {\n        firebase.database().ref(\"pendingProcessesListMessages/\".concat(pushId)).once('value', function (snapshot) {\n          var oldV = [];\n          snapshot.forEach(function (v) {\n            oldV.push(v.val());\n          });\n\n          _this.setState({\n            listOfProcesses: oldV,\n            viewList: true,\n            loading: false,\n            userID: userID,\n            type: type,\n            pushId: pushId,\n            mainTopic: mainTopic,\n            timeCreated: timeCreated\n          });\n        });\n      });\n    });\n\n    _this.state = {\n      result: {},\n      listOfProcesses: [],\n      loading: false,\n      loading1: false,\n      pushId: '',\n      addProcess: false,\n      isNewProcess: false,\n      viewList: false,\n      userID: '',\n      type: '',\n      mainTopic: '',\n      timeCreated: null,\n      title: '',\n      details: '',\n      errorMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(PendingProcesses, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.database().ref(\"pendingProcessesList\").once('value', function (snapshot) {\n        _this2.setState({\n          result: snapshot.val()\n        });\n      });\n    }\n  }, {\n    key: \"stringIsNotEmpty\",\n    value: function stringIsNotEmpty(s) {\n      return s.length >= 4;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var results = [];\n      var keys = Object.keys(this.state.result).sort(function (a, b) {\n        return b - a;\n      });\n\n      var _loop = function _loop(k) {\n        var data = _this3.state.result[keys[k]];\n        var displayDate = formatDateAllValues(new Date(data.timeCreated));\n        results.push( /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.previousMessageSum,\n            onClick: function onClick() {\n              _this3.loadOldList(data);\n            },\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              style: {\n                fontSize: '105%',\n                fontFamily: 'Gilroy-Regular',\n                color: colors.BLACK\n              },\n              children: data.mainTopic\n            }), /*#__PURE__*/_jsx(\"p\", {\n              style: {\n                fontSize: '100%',\n                fontFamily: 'Gilroy-Light',\n                color: colors.GREEN\n              },\n              children: /*#__PURE__*/_jsx(\"span\", {\n                style: {\n                  color: colors.GREY\n                },\n                children: displayDate\n              })\n            })]\n          }), k == keys.length - 1 ? /*#__PURE__*/_jsx(_Fragment, {}) : /*#__PURE__*/_jsx(\"div\", {\n            className: styles.sharedLine,\n            style: {\n              marginTop: '5px'\n            }\n          })]\n        }));\n      };\n\n      for (var k = 0; k < keys.length; k++) {\n        _loop(k);\n      }\n\n      ;\n      var _this$state = this.state,\n          addProcess = _this$state.addProcess,\n          errorMessage = _this$state.errorMessage,\n          isNewProcess = _this$state.isNewProcess,\n          viewList = _this$state.viewList;\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.cont,\n        children: [!addProcess && !isNewProcess && !viewList && /*#__PURE__*/_jsx(\"div\", {\n          className: styles.enterKilometerDiv,\n          style: {\n            marginTop: '20px',\n            marginBottom: '0px',\n            marginLeft: '2.5%',\n            width: '95%'\n          },\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: styles.button2,\n            style: {\n              backgroundColor: colors.GREEN,\n              width: '100%',\n              maxWidth: 'initial'\n            },\n            id: styles.buttonBottom,\n            onClick: function onClick() {\n              _this3.setState({\n                addProcess: true,\n                isNewProcess: true,\n                userID: '',\n                type: '',\n                mainTopic: '',\n                title: '',\n                details: '',\n                errorMessage: ''\n              });\n            },\n            children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n              type: \"TailSpin\",\n              color: colors.WHITE,\n              height: '20px',\n              width: '20px'\n            }) : /*#__PURE__*/_jsx(\"p\", {\n              className: styles.buttonText1,\n              children: \"Add new process\"\n            })\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.container,\n          style: {\n            backgroundColor: colors.WHITE,\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: styles.title,\n            style: {\n              color: colors.BLACK\n            },\n            children: addProcess ? 'Add a new process' : viewList ? 'View process history' : 'List of pending processes'\n          }), addProcess ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [isNewProcess ? /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: styles.widthSeperator,\n                children: [/*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  placeholder: \"User ID\",\n                  className: styles.searchInput,\n                  style: {\n                    width: '67%'\n                  },\n                  value: this.state.userID,\n                  onChange: function onChange(event) {\n                    _this3.setState({\n                      userID: event.target.value\n                    });\n                  }\n                }), /*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Type\",\n                  className: styles.searchInput,\n                  style: {\n                    width: '32%'\n                  },\n                  value: this.state.type,\n                  onChange: function onChange(event) {\n                    _this3.setState({\n                      type: event.target.value.toLowerCase()\n                    });\n                  }\n                })]\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Main topic\",\n                className: styles.searchInput,\n                style: {\n                  width: '90%',\n                  marginTop: '15px'\n                },\n                value: this.state.mainTopic,\n                onChange: function onChange(event) {\n                  _this3.setState({\n                    mainTopic: event.target.value\n                  });\n                }\n              })]\n            }) : /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: styles.widthSeperator,\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: styles.mainText,\n                  children: \"\\u2022 User ID - \".concat(this.state.userID)\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  style: {\n                    width: '90px',\n                    height: '30px',\n                    backgroundColor: this.state.type == 'rider' ? colors.GREEN : colors.BLUE,\n                    borderRadius: '5px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                  },\n                  children: /*#__PURE__*/_jsx(\"p\", {\n                    className: styles.readOrUnreadText,\n                    style: {\n                      color: '#ffffff',\n                      fontFamily: 'Gilroy-ExtraBold'\n                    },\n                    children: this.state.type == 'rider' ? 'Rider' : 'Driver'\n                  })\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: styles.widthSeperator,\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: styles.mainText,\n                  children: \"\\u2022 Topic - \".concat(this.state.mainTopic)\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  className: styles.mainText,\n                  children: \"Created at  ( \".concat(formatDateAllValues(new Date(this.state.timeCreated)), \" )\")\n                })]\n              })]\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              placeholder: \"Title\",\n              className: styles.searchInput,\n              style: {\n                width: '90%',\n                marginTop: '15px'\n              },\n              value: this.state.title,\n              onChange: function onChange(event) {\n                _this3.setState({\n                  title: event.target.value\n                });\n              }\n            }), /*#__PURE__*/_jsx(\"textarea\", {\n              type: \"text\",\n              placeholder: \"Details\",\n              className: styles.contactUsContent,\n              style: {\n                width: '90%',\n                marginTop: '15px',\n                fontSize: '100%'\n              },\n              value: this.state.details,\n              onChange: function onChange(event) {\n                _this3.setState({\n                  details: event.target.value\n                });\n              }\n            })]\n          }) : viewList ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              style: {\n                height: '20px',\n                width: '100%'\n              }\n            }), this.renderList()]\n          }) : /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              style: {\n                height: '20px',\n                width: '100%'\n              }\n            }), results]\n          }), errorMessage != '' && /*#__PURE__*/_jsx(\"p\", {\n            className: styles.em,\n            style: {\n              textAlign: 'initial'\n            },\n            children: errorMessage\n          })]\n        }), (addProcess || viewList) && /*#__PURE__*/_jsx(_Fragment, {\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.enterKilometerDiv,\n            style: {\n              marginTop: '20px',\n              marginBottom: viewList ? '0px' : '150px',\n              marginLeft: '2.5%',\n              width: '95%'\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.button2,\n              style: {\n                backgroundColor: colors.RED\n              },\n              id: styles.buttonBottom,\n              onClick: function onClick() {\n                if (addProcess || viewList) _this3.setState({\n                  addProcess: false,\n                  isNewProcess: false,\n                  viewList: false,\n                  userID: '',\n                  type: '',\n                  mainTopic: '',\n                  timeCreated: null,\n                  title: '',\n                  details: '',\n                  errorMessage: ''\n                });\n              },\n              children: /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: addProcess ? 'Cancel' : 'Close'\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.button2,\n              style: {\n                backgroundColor: colors.GREEN\n              },\n              id: styles.buttonBottom,\n              onClick: function onClick() {\n                if (addProcess) {\n                  if (isNewProcess) {\n                    if (_this3.stringIsNotEmpty(_this3.state.userID) && (_this3.state.type == 'rider' || _this3.state.type == 'driver') && _this3.stringIsNotEmpty(_this3.state.mainTopic) && _this3.stringIsNotEmpty(_this3.state.title) && _this3.stringIsNotEmpty(_this3.state.details)) pendingProcessesFunction.call(_this3, {\n                      userID: _this3.state.userID,\n                      isNewProcess: true,\n                      type: _this3.state.type,\n                      mainTopic: _this3.state.mainTopic,\n                      title: _this3.state.title,\n                      details: _this3.state.details\n                    });else _this3.setState({\n                      errorMessage: 'Please verify all fields are entered correctly and type is either \"driver\" or \"rider\"'\n                    });\n                  } else {\n                    if (_this3.stringIsNotEmpty(_this3.state.title) && _this3.stringIsNotEmpty(_this3.state.details)) pendingProcessesFunction.call(_this3, {\n                      isNewProcess: false,\n                      title: _this3.state.title,\n                      details: _this3.state.details,\n                      oldPushId: _this3.state.pushId\n                    });else _this3.setState({\n                      errorMessage: 'Please verify all fields are entered correctly'\n                    });\n                  }\n                } else if (viewList) {\n                  _this3.setState({\n                    addProcess: true,\n                    isNewProcess: false,\n                    viewList: false,\n                    title: '',\n                    details: ''\n                  });\n                }\n              },\n              children: this.state.loading ? /*#__PURE__*/_jsx(Loader, {\n                type: \"TailSpin\",\n                color: colors.WHITE,\n                height: '20px',\n                width: '20px'\n              }) : /*#__PURE__*/_jsx(\"p\", {\n                className: styles.buttonText1,\n                children: 'Add new process'\n              })\n            })]\n          })\n        }), viewList && /*#__PURE__*/_jsx(\"div\", {\n          className: styles.button2,\n          style: {\n            backgroundColor: colors.GREY,\n            width: '95%',\n            marginLeft: '2.5%',\n            marginTop: '20px',\n            marginBottom: '150px',\n            maxWidth: 'initial'\n          },\n          id: styles.buttonBottom,\n          onClick: function onClick() {\n            pendingProcessesFunctionDelete.call(_this3, _this3.state.pushId);\n          },\n          children: this.state.loading1 ? /*#__PURE__*/_jsx(Loader, {\n            type: \"TailSpin\",\n            color: colors.WHITE,\n            height: '20px',\n            width: '20px'\n          }) : /*#__PURE__*/_jsx(\"p\", {\n            className: styles.buttonText1,\n            children: \"Complete this task\"\n          })\n        })]\n      });\n    }\n  }]);\n\n  return PendingProcesses;\n}(React.Component);\n\nexport { PendingProcesses as default };\n;","map":null,"metadata":{},"sourceType":"module"}