webpackHotUpdate_N_E("pages/s/auth/u_si_su",{

/***/ "./functions/functions.js":
/*!********************************!*\
  !*** ./functions/functions.js ***!
  \********************************/
/*! exports provided: signIn, adminSignIn, signUp, signOut, sendVerification, changeEmailOrPhoneNumber, sendFeedback, changePassword, deleteAccount, sendPasswordResetLink, sendEmail, resetPassword, makeid, getDate, dateformat, polylineLenght, distanceCalculator, emailFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"signIn\", function() { return signIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"adminSignIn\", function() { return adminSignIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"signUp\", function() { return signUp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"signOut\", function() { return signOut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sendVerification\", function() { return sendVerification; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"changeEmailOrPhoneNumber\", function() { return changeEmailOrPhoneNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sendFeedback\", function() { return sendFeedback; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"changePassword\", function() { return changePassword; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deleteAccount\", function() { return deleteAccount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sendPasswordResetLink\", function() { return sendPasswordResetLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sendEmail\", function() { return sendEmail; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resetPassword\", function() { return resetPassword; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeid\", function() { return makeid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDate\", function() { return getDate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dateformat\", function() { return dateformat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"polylineLenght\", function() { return polylineLenght; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"distanceCalculator\", function() { return distanceCalculator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"emailFormat\", function() { return emailFormat; });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var firebase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase */ \"./node_modules/firebase/dist/index.esm.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nfunction signIn(email, password, type) {\n  var _this = this;\n\n  this.setState({\n    error: false,\n    errorMessage: '',\n    loading: true\n  }, function () {\n    firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().setPersistence(firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth.Auth.Persistence.LOCAL).then(function () {\n      firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().signInWithEmailAndPassword(email, password).then(function () {\n        if (type == 'user') {\n          var userID = firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().currentUser.uid;\n          firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].database().ref(\"users/\".concat(userID)).once('value', function (snapshot) {\n            if (snapshot.val().summarizedHistory.phoneVerified == true) next_router__WEBPACK_IMPORTED_MODULE_2___default.a.push('/s/db/udash').then(function () {\n              return window.scrollTo(0, 0);\n            });else _this.setState({\n              displayVerification: true,\n              loading: false,\n              userDetails: snapshot.val(),\n              error: false\n            }, function () {\n              //send a verification phonenumber\n              sendVerification(userID, 'phoneNumber', 'storeAndSend', 'nocode', snapshot.val().phoneNumber, snapshot.val().email, snapshot.val().firstName);\n              firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().signOut()[\"catch\"](function (error) {\n                console.log(error.message);\n              });\n            });\n          })[\"catch\"](function (error) {\n            _this.setState({\n              error: true,\n              errorMessage: error.message,\n              loading: false\n            });\n          });\n        } else if (type == 'driver') {\n          var _userID = firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().currentUser.uid;\n          firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].database().ref(\"users/\".concat(_userID)).once('value', function (snapshot) {\n            if (snapshot.val().summarizedHistory.phoneVerified == true && snapshot.val().summarizedHistory.emailVerified == true) firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].database().ref(\"users/\".concat(_userID, \"/driverVerified\")).once('value', function (snap) {\n              if (snap.val() == 'VERIFIED') next_router__WEBPACK_IMPORTED_MODULE_2___default.a.push('/s/db/ddash').then(function () {\n                return window.scrollTo(0, 0);\n              });else next_router__WEBPACK_IMPORTED_MODULE_2___default.a.push('/s/db/d_app_dash').then(function () {\n                return window.scrollTo(0, 0);\n              });\n            })[\"catch\"](function (error) {\n              console.log(error.message);\n            });else {\n              _this.setState({\n                displayVerification: true,\n                loading: false,\n                userDetails: snapshot.val(),\n                phoneVerified: snapshot.val().summarizedHistory.phoneVerified,\n                emailVerified: snapshot.val().summarizedHistory.emailVerified,\n                error: false\n              }, function () {\n                //send an email or phonenumber verification\n                if (!snapshot.val().summarizedHistory.phoneVerified) sendVerification(_userID, 'phoneNumber', 'storeAndSend', 'nocode', snapshot.val().phoneNumber, snapshot.val().email, snapshot.val().firstName);\n                if (!snapshot.val().summarizedHistory.emailVerified) sendVerification(_userID, 'email', 'storeAndSend', 'nocode', snapshot.val().phoneNumber, snapshot.val().email, snapshot.val().firstName);\n                firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().signOut()[\"catch\"](function (error) {\n                  console.log(error.message);\n                });\n              });\n            }\n          })[\"catch\"](function (error) {\n            console.log(error.message);\n          });\n        }\n      })[\"catch\"](function (error) {\n        _this.setState({\n          error: true,\n          errorMessage: error.message,\n          loading: false\n        });\n      });\n    })[\"catch\"](function (error) {\n      _this.setState({\n        error: true,\n        errorMessage: error.message,\n        loading: false\n      });\n    });\n  });\n}\n;\nfunction adminSignIn(email, password) {\n  var _this2 = this;\n\n  this.setState({\n    error: false,\n    errorMessage: '',\n    loading: true\n  }, function () {\n    firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().setPersistence(firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth.Auth.Persistence.SESSION).then(function () {\n      firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().signInWithEmailAndPassword(email, password).then(function () {\n        var userID = firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().currentUser.uid;\n        firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].database().ref(\"adminAuthorized/\".concat(userID)).once('value', function (snapshot) {\n          if (snapshot.val()) next_router__WEBPACK_IMPORTED_MODULE_2___default.a.push('/admin/dash').then(function () {\n            return window.scrollTo(0, 0);\n          });else _this2.setState({\n            error: true,\n            errorMessage: 'You do not have access to this portion of the site. Please contact us for help.',\n            loading: false\n          }, function () {\n            firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().signOut()[\"catch\"](function (error) {\n              console.log(error.message);\n            });\n          });\n        })[\"catch\"](function (error) {\n          console.log(error.message);\n        });\n      })[\"catch\"](function (error) {\n        _this2.setState({\n          error: true,\n          errorMessage: error.message,\n          loading: false\n        });\n      });\n    })[\"catch\"](function (error) {\n      _this2.setState({\n        error: true,\n        errorMessage: error.message,\n        loading: false\n      });\n    });\n  });\n}\n;\nfunction signUp(firstName, lastName, email, countryCode, phoneNumber, password, isDriver) {\n  var _this3 = this;\n\n  this.setState({\n    error: false,\n    errorMessage: '',\n    loading: true\n  }, function () {\n    axios__WEBPACK_IMPORTED_MODULE_3___default.a.post(\"https://us-central1-perch-01.cloudfunctions.net/checkIfPhoneNumberIsFree\", {\n      phoneNumber: \"+\".concat(countryCode).concat(phoneNumber)\n    }).then(function (r) {\n      if (r.data) {\n        firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().createUserWithEmailAndPassword(email, password).then(function () {\n          var userID = firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().currentUser.uid;\n          axios__WEBPACK_IMPORTED_MODULE_3___default.a.post('https://us-central1-perch-01.cloudfunctions.net/createUserDetails', {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            phoneNumber: \"+\".concat(countryCode).concat(phoneNumber),\n            userID: userID,\n            isDriver: isDriver\n          }).then(function () {\n            firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].database().ref(\"users/\".concat(userID)).once('value', function (snapshot) {\n              firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().signOut()[\"catch\"](function (error) {\n                console.log(error.message);\n              });\n\n              _this3.setState({\n                displayVerification: true,\n                loading: false,\n                error: false,\n                userDetails: snapshot.val()\n              });\n            })[\"catch\"](function (error) {\n              _this3.setState({\n                error: true,\n                errorMessage: error.message\n              });\n            });\n          })[\"catch\"](function (error) {\n            _this3.setState({\n              errorMessage: error.message,\n              loading: false\n            });\n          });\n        })[\"catch\"](function (error) {\n          _this3.setState({\n            error: true,\n            errorMessage: error.message,\n            loading: false\n          });\n        });\n      } else _this3.setState({\n        error: true,\n        errorMessage: 'This phone number is currently registered with another account, contact us for help',\n        loading: false\n      });\n    })[\"catch\"](function (error) {\n      _this3.setState({\n        error: true,\n        errorMessage: error.message,\n        loading: false\n      });\n    });\n  });\n}\n;\nfunction signOut(doNotReroute) {\n  firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().signOut().then(function () {\n    if (!doNotReroute) next_router__WEBPACK_IMPORTED_MODULE_2___default.a.push('/');\n  })[\"catch\"](function (error) {\n    console.log(error.message);\n  });\n}\n;\nfunction sendVerification(userID, type, action, code, phoneNumber, email, name) {\n  var _this4 = this;\n\n  axios__WEBPACK_IMPORTED_MODULE_3___default.a.post(\"https://us-central1-perch-01.cloudfunctions.net/sendVerificationCode\", {\n    userID: userID,\n    type: type,\n    action: action,\n    code: code,\n    phoneNumber: phoneNumber,\n    email: email,\n    name: name\n  }).then(function (r) {\n    var result = r.data;\n\n    if (action == 'check') {\n      if (result) {\n        if (type == 'phoneNumber') _this4.setState({\n          phoneVerified: true,\n          verificationPhoneLoader: false\n        });else if (type == 'email') _this4.setState({\n          emailVerified: true,\n          verificationEmailLoader: false\n        });\n      } else {\n        if (type == 'phoneNumber') _this4.setState({\n          verificationPhoneLoader: false\n        });else if (type == 'email') _this4.setState({\n          verificationEmailLoader: false\n        });\n\n        _this4.setState({\n          error: true,\n          errorMessage: 'The verification code was not correct. Please check again or click resend.'\n        });\n      }\n    }\n  }); //.catch((error) => { this.setState({ error: true, errorMessage: error.message }) })\n}\n;\nfunction changeEmailOrPhoneNumber(type, userID, phoneNumber, email) {\n  var _this5 = this;\n\n  axios__WEBPACK_IMPORTED_MODULE_3___default.a.post(\"https://us-central1-perch-01.cloudfunctions.net/changeEmailOrPhoneNumber\", {\n    userID: userID,\n    email: email,\n    type: type,\n    phoneNumber: phoneNumber\n  }).then(function (r) {\n    _this5.setState({\n      userDetails: r.data,\n      changeEmail_PhoneNumber: false,\n      error: false,\n      errorMessage: '',\n      changeEmailLoader: false,\n      changePhoneLoader: false\n    });\n  })[\"catch\"](function (error) {\n    _this5.setState({\n      error: true,\n      errorMessage: \"\".concat(error.message, \", this field might already be in use by another user\")\n    });\n  });\n}\n;\nfunction sendFeedback() {\n  var _this6 = this;\n\n  if (this.state.topic == 'unselected') this.setState({\n    errorMessage: 'A topic is needed. Please pick a topic to contact us about. If you do not have one, please pick \"Other\"'\n  });else if (this.state.message == '') this.setState({\n    errorMessage: 'Please enter a message'\n  });else {\n    this.setState({\n      loading: true\n    }, function () {\n      if (_this6.state.userDetails) {\n        var ref = _this6.state.userDetails.driverID ? \"driverFeedback/\".concat(_this6.state.userDetails.driverID) : \"userFeedback/\".concat(_this6.state.userDetails.userID);\n        firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].database().ref(ref).update(Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, new Date().getTime(), {\n          body: _this6.state.message,\n          subject: _this6.state.topic,\n          status: 'UNPROCESSED',\n          date: getDate()\n        })).then(function () {\n          _this6.setState({\n            topic: 'unselected',\n            message: '',\n            loading: false\n          }, function () {\n            _this6.loadResult();\n          });\n        })[\"catch\"](function (error) {\n          console.log(error.message);\n        });\n      } else firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].database().ref(\"userFeedbackEmail\").update(Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, makeid(5), {\n        body: _this6.state.message,\n        subject: _this6.state.topic,\n        status: 'UNPROCESSED',\n        date: getDate(),\n        email: _this6.state.userEmail\n      })).then(function () {\n        _this6.setState({\n          topic: 'unselected',\n          message: '',\n          loading: false\n        });\n      })[\"catch\"](function (error) {\n        console.log(error.message);\n      });\n    });\n  }\n}\n;\nfunction changePassword(email_, oldPassword, newPassword) {\n  var _this7 = this;\n\n  this.setState({\n    loading: true\n  }, function () {\n    var email = email_;\n    var password = oldPassword;\n    firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().signInWithEmailAndPassword(email, password).then(function () {\n      firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().currentUser.updatePassword(newPassword).then(function () {\n        _this7.setState({\n          loading: false,\n          toShow: 'default',\n          currentPassword: '',\n          newPassword: '',\n          confirmNewPassword: ''\n        });\n      })[\"catch\"](function (error) {\n        return _this7.setState({\n          errorMessage: error.message,\n          loading: false,\n          newPassword: '',\n          confirmNewPassword: ''\n        });\n      });\n    })[\"catch\"](function (error) {\n      return _this7.setState({\n        errorMessage: error.message,\n        loading: false,\n        newPassword: '',\n        confirmNewPassword: ''\n      });\n    });\n  });\n}\n;\nfunction deleteAccount(email, password) {\n  var _this8 = this;\n\n  this.setState({\n    loading: true\n  }, function () {\n    firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().signInWithEmailAndPassword(email, password).then(function () {\n      var user = firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().currentUser;\n      var userID = user.uid;\n      user[\"delete\"]().then(function () {\n        firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].database().ref(\"users/\".concat(userID)).remove()[\"catch\"](function (error) {\n          console.log(error.message);\n        });\n        firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].database().ref(\"deletedAccountReasons\").update(Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, userID, {\n          reason: _this8.state.deleteAccountReason,\n          reviewed: false,\n          userDetails: _this8.state.userDetails\n        }))[\"catch\"](function (error) {\n          console.log(error.message);\n        });\n      })[\"catch\"](function (error) {\n        return _this8.setState({\n          errorMessage: error.message,\n          loading: false,\n          password1: ''\n        });\n      });\n    })[\"catch\"](function (error) {\n      return _this8.setState({\n        errorMessage: error.message,\n        loading: false,\n        password1: ''\n      });\n    });\n  });\n}\n;\nfunction sendPasswordResetLink(email) {\n  var _this9 = this;\n\n  firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().sendPasswordResetEmail(email).then(function () {\n    _this9.setState({\n      error: false,\n      errorMessage: '',\n      forgotPassword: false\n    });\n  })[\"catch\"](function (error) {\n    _this9.setState({\n      error: true,\n      errorMessage: error.message\n    });\n  });\n}\n;\nfunction sendEmail(name, email, type, subject) {\n  axios__WEBPACK_IMPORTED_MODULE_3___default.a.post(\"https://us-central1-perch-01.cloudfunctions.net/sendVerificationEmail\", {\n    name: name,\n    email: email,\n    type: type,\n    subject: subject\n  })[\"catch\"](function (error) {\n    console.log(error.meesage);\n  });\n}\n;\nfunction resetPassword(code, newPassword, email) {\n  var _this10 = this;\n\n  this.setState({\n    errorMessage: '',\n    loading: true\n  }, function () {\n    firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().confirmPasswordReset(code, newPassword).then(function () {\n      firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().setPersistence(firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth.Auth.Persistence.LOCAL).then(function () {\n        firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().signInWithEmailAndPassword(email, newPassword).then(function () {\n          var userID = firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].auth().currentUser.uid;\n          firebase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].database().ref(\"users/\".concat(userID, \"/firstName\")).once('value', function (snap) {\n            sendEmail(snap.val(), email, 'passwordHasBeenReset', 'Password has been reset');\n          })[\"catch\"](function (error) {\n            console.log(error.message);\n          });\n        })[\"catch\"](function (error) {\n          console.log(error.message);\n        });\n      })[\"catch\"](function (error) {\n        console.log(error.message);\n      });\n      next_router__WEBPACK_IMPORTED_MODULE_2___default.a.push('/'); //send an email that password has been set \n    })[\"catch\"](function () {\n      _this10.setState({\n        errorMessage: 'The link is no longer valid, please go to the login page and request a new password reset link',\n        loading: false\n      });\n    });\n  });\n}\n; //MAKE A RANDOMID\n\nfunction makeid(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return \"\".concat(new Date().getTime()).concat(result);\n}\n;\nfunction getDate() {\n  var DAY = new Date().getDate();\n  var MONTH = new Date().getMonth();\n  var YEAR = new Date().getFullYear();\n  var HOUR = new Date().getHours();\n  var MIN = new Date().getMinutes();\n  var SECOND = new Date().getSeconds();\n  return \"\".concat(YEAR, \"-\").concat(MONTH, \"-\").concat(DAY, \"-\").concat(HOUR, \"-\").concat(MIN, \"-\").concat(SECOND);\n}\n;\nfunction dateformat(time) {\n  var slash1 = 0,\n      slash2 = 0,\n      slash3 = 0;\n\n  for (var k = 0; k < time.length; k++) {\n    if (time.charAt(k) == '-') slash1 == 0 ? slash1 = k : slash2 == 0 ? slash2 = k : slash3 = k;\n    if (slash3 != 0) break;\n  }\n\n  ;\n  var y = time.substring(0, slash1);\n  var m = time.substring(slash1 + 1, slash2);\n  var d = time.substring(slash2 + 1, slash3);\n  return \"\".concat(d, \"/\").concat(Number(m) + 1, \"/\").concat(y);\n}\n;\nfunction polylineLenght(data) {\n  var distance = 0;\n\n  for (var k = 0; k < data.length - 1; k++) {\n    distance += distanceCalculator(data[k][0], data[k][1], data[k + 1][0], data[k + 1][1]);\n  }\n\n  return distance;\n}\n;\nfunction distanceCalculator(lat1, lon1, lat2, lon2) {\n  var R = 6371 * 1000; // Radius of the earth in m\n\n  var dLat = deg2rad(lat2 - lat1); // deg2rad below\n\n  var dLon = deg2rad(lon2 - lon1);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c; // Distance in m\n\n  return d;\n}\n;\nfunction emailFormat(email, type) {\n  //@ is stored as -(hyphen)\n  //. is stored as _(underscore)\n  switch (type) {\n    case 'emailToString':\n      {\n        return email.replace('@', '-').replace('.', '_');\n      }\n      break;\n\n    case 'stringToEmail':\n      {\n        return email.replace('-', '@').replace('_', '.');\n      }\n      break;\n  }\n}\n;\n\nfunction deg2rad(deg) {\n  return deg * (Math.PI / 180);\n}\n\n;\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./functions/functions.js\n");

/***/ })

})